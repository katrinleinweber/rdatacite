http_interactions:
- request:
    method: get
    uri: https://api.datacite.org/works?query=climate%20change
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/3.2 crul/0.5.2
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      access-control-allow-headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Authorization
      access-control-allow-methods: GET, POST, PUT, DELETE, OPTIONS
      access-control-allow-origin: '*'
      access-control-expose-headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Authorization
      cache-control: max-age=0, private, must-revalidate
      connection: keep-alive
      content-encoding: gzip
      content-type: application/json; charset=utf-8
      date: Sun, 27 May 2018 17:24:18 GMT
      etag: W/"d9985730b3b190a71e7ed492537e498e"
      server: nginx/1.12.2 + Phusion Passenger 5.2.3
      status:
      - HTTP/1.1 200 OK
      - 200 OK
      transfer-encoding: chunked
      vary: Accept-Encoding
      x-anonymous-consumer: 'true'
      x-powered-by: Phusion Passenger 5.2.3
      x-request-id: cb9de1df-2aab-41c4-9c86-70a8db643393
      x-runtime: '0.941933'
    body:
      encoding: ASCII-8BIT
      string: {"data":[{"id":"https://doi.org/10.5065/d6rn35st","type":"works","attributes":{"doi":"10.5065/d6rn35st","identifier":"https://doi.org/10.5065/d6rn35st","url":"http://www.earthsystemgrid.org/project/NARCCAP.html","author":[{"given":"Linda","family":"Mearns"},{"given":"Seth","family":"McGinnis"},{"given":"Raymond","family":"Arritt"},{"given":"Sebastien","family":"Biner"},{"given":"Phillip","family":"Duffy"},{"given":"William","family":"Gutowski"},{"given":"Isaac","family":"Held"},{"given":"Richard","family":"Jones"},{"given":"Ruby","family":"Leung"},{"given":"Ana","family":"Nunes"},{"given":"Mark","family":"Snyder"},{"given":"Daniel","family":"Caya"},{"given":"James","family":"Correia"},{"given":"David","family":"Flory"},{"given":"Daryl","family":"Herzmann"},{"given":"Rene","family":"Laprise"},{"given":"Wilfran","family":"Moufouma-Okia"},{"given":"Gene","family":"Takle"},{"given":"Haiyan","family":"Teng"},{"given":"Josh","family":"Thompson"},{"given":"Simon","family":"Tucker"},{"given":"Bruce","family":"Wyman"},{"given":"Anila","family":"Anitha"},{"given":"Lawrence","family":"Buja"},{"given":"Christopher","family":"Macintosh"},{"given":"Larry","family":"McDaniel"},{"given":"Travis","family":"O'Brien"},{"given":"Yun","family":"Qian"},{"given":"Lisa","family":"Sloan"},{"given":"Gary","family":"Strand"},{"given":"Casey","family":"Zoellick"}],"title":"North American Regional Climate Change Assessment Program dataset","container-title":"UCAR/NCAR","description":"The North American Regional Climate Change Assessment Program (NARCCAP) dataset contains simulation output from six regional climate models: CRCM, ECPC-RSM, HadRM3, MM5, RegCM3, and WRF. More than forty 2-D and 3-D output variables are stored to support impacts analysis, model evaluation, and further dynamical downscaling. All models are run at 50-km spatial resolution, with data stored at 3-hourly intervals. The simulation domain covers most of North America, including the conterminous United States, most of Canada, and parts of Mexico. Data is stored in CF-compliant netCDF files. Each RCM is forced with boundary conditions from the NCEP-2 reanalyis for a 25 historical period from 1980-2004. Each RCM is also driven with boundary conditions from two of four GCMs for a 30-year current climate period (1971-2000) and a 30-year future period (2041-2070). The four GCMs are CCSM3, CGCM3, GFDL, and HadCM3. The future GCM simulations use the SRES-A2 emissions scenario. There are also two timeslice experiments using the CCSM3 and GFDL GCMs running the atmospheric component alone at 50-km resolution.","resource-type-subtype":"Regional climate model output","data-center-id":"cdl.ncar","member-id":"cdl","resource-type-id":"dataset","version":null,"license":null,"schema-version":"2.2","results":[],"related-identifiers":[],"published":"2007","registered":"2012-05-03T21:47:30Z","checked":null,"updated":"2016-05-26T15:28:21Z","media":null,"xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0yLjIgaHR0cDovL3NjaGVtYS5kYXRhY2l0ZS5vcmcvbWV0YS9rZXJuZWwtMi4yL21ldGFkYXRhLnhzZCI+PGlkZW50aWZpZXIgaWRlbnRpZmllclR5cGU9IkRPSSI+MTAuNTA2NS9ENlJOMzVTVDwvaWRlbnRpZmllcj48Y3JlYXRvcnM+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPk1lYXJucywgTGluZGE8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+TWNHaW5uaXMsIFNldGg8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+QXJyaXR0LCBSYXltb25kPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkJpbmVyLCBTZWJhc3RpZW48L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+RHVmZnksIFBoaWxsaXA8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+R3V0b3dza2ksIFdpbGxpYW08L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+SGVsZCwgSXNhYWM8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+Sm9uZXMsIFJpY2hhcmQ8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+TGV1bmcsIFJ1Ynk8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+TnVuZXMsIEFuYTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5TbnlkZXIsIE1hcms8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+Q2F5YSwgRGFuaWVsPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkNvcnJlaWEsIEphbWVzPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkZsb3J5LCBEYXZpZDwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5IZXJ6bWFubiwgRGFyeWw8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+TGFwcmlzZSwgUmVuZTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5Nb3Vmb3VtYS1Pa2lhLCBXaWxmcmFuPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPlRha2xlLCBHZW5lPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPlRlbmcsIEhhaXlhbjwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5UaG9tcHNvbiwgSm9zaDwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5UdWNrZXIsIFNpbW9uPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPld5bWFuLCBCcnVjZTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5Bbml0aGEsIEFuaWxhPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkJ1amEsIExhd3JlbmNlPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPk1hY2ludG9zaCwgQ2hyaXN0b3BoZXI8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+TWNEYW5pZWwsIExhcnJ5PC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPk8nQnJpZW4sIFRyYXZpczwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5RaWFuLCBZdW48L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+U2xvYW4sIExpc2E8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+U3RyYW5kLCBHYXJ5PC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPlpvZWxsaWNrLCBDYXNleTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjwvY3JlYXRvcnM+PHRpdGxlcz48dGl0bGU+Tm9ydGggQW1lcmljYW4gUmVnaW9uYWwgQ2xpbWF0ZSBDaGFuZ2UgQXNzZXNzbWVudCBQcm9ncmFtIGRhdGFzZXQ8L3RpdGxlPjwvdGl0bGVzPjxwdWJsaXNoZXI+VUNBUi9OQ0FSPC9wdWJsaXNoZXI+PHB1YmxpY2F0aW9uWWVhcj4yMDA3PC9wdWJsaWNhdGlvblllYXI+PHN1YmplY3RzPjxzdWJqZWN0PkNsaW1hdGUgc2ltdWxhdGlvbnM8L3N1YmplY3Q+PC9zdWJqZWN0cz48Y29udHJpYnV0b3JzPjxjb250cmlidXRvciBjb250cmlidXRvclR5cGU9IkNvbnRhY3RQZXJzb24iPjxjb250cmlidXRvck5hbWU+TWNHaW5uaXMsIFNldGgsIG5hcmNjYXBAdWNhci5lZHU8L2NvbnRyaWJ1dG9yTmFtZT48L2NvbnRyaWJ1dG9yPjxjb250cmlidXRvciBjb250cmlidXRvclR5cGU9IkRhdGFNYW5hZ2VyIj48Y29udHJpYnV0b3JOYW1lPk1jR2lubmlzLCBTZXRoPC9jb250cmlidXRvck5hbWU+PC9jb250cmlidXRvcj48Y29udHJpYnV0b3IgY29udHJpYnV0b3JUeXBlPSJQcm9qZWN0TGVhZGVyIj48Y29udHJpYnV0b3JOYW1lPk1lYXJucywgTGluZGE8L2NvbnRyaWJ1dG9yTmFtZT48L2NvbnRyaWJ1dG9yPjxjb250cmlidXRvciBjb250cmlidXRvclR5cGU9Ikhvc3RpbmdJbnN0aXR1dGlvbiI+PGNvbnRyaWJ1dG9yTmFtZT5Vbml2ZXJzaXR5IENvcnBvcmF0aW9uIEZvciBBdG1vc3BoZXJpYyBSZXNlYXJjaCAoVUNBUik6TmF0aW9uYWwgQ2VudGVyIGZvciBBdG1vc3BoZXJpYyBSZXNlYXJjaCAoTkNBUik6Q29tcHV0YXRpb25hbCBhbmQgSW5mb3JtYXRpb24gU3lzdGVtcyBMYWJvcmF0b3J5IChDSVNMKTwvY29udHJpYnV0b3JOYW1lPjwvY29udHJpYnV0b3I+PC9jb250cmlidXRvcnM+PGRhdGVzPjxkYXRlIGRhdGVUeXBlPSJVcGRhdGVkIj4yMDEyPC9kYXRlPjwvZGF0ZXM+PGxhbmd1YWdlPmVuZzwvbGFuZ3VhZ2U+PHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ij5SZWdpb25hbCBjbGltYXRlIG1vZGVsIG91dHB1dDwvcmVzb3VyY2VUeXBlPjxzaXplcz48c2l6ZT5hcHByb3hpbWF0ZWx5IDQwIFRCPC9zaXplPjwvc2l6ZXM+PGZvcm1hdHM+PGZvcm1hdD5uZXRDREY8L2Zvcm1hdD48L2Zvcm1hdHM+PHJpZ2h0cz5GcmVlIGFjY2VzczsgcmVnaXN0cmF0aW9uIHJlcXVpcmVkLiBTdWJqZWN0IHRvIFVDQVIgdGVybXMgYW5kIGNvbmRpdGlvbnMgZGVzY3JpYmVkIGF0IGh0dHA6Ly93d3cyLnVjYXIuZWR1L3Rlcm1zLW9mLXVzZS48L3JpZ2h0cz48ZGVzY3JpcHRpb25zPjxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9Ik90aGVyIj5UaGUgTm9ydGggQW1lcmljYW4gUmVnaW9uYWwgQ2xpbWF0ZSBDaGFuZ2UgQXNzZXNzbWVudCBQcm9ncmFtIChOQVJDQ0FQKSBkYXRhc2V0IGNvbnRhaW5zIHNpbXVsYXRpb24gb3V0cHV0IGZyb20gc2l4IHJlZ2lvbmFsIGNsaW1hdGUgbW9kZWxzOiBDUkNNLCBFQ1BDLVJTTSwgSGFkUk0zLCBNTTUsIFJlZ0NNMywgYW5kIFdSRi4gTW9yZSB0aGFuIGZvcnR5IDItRCBhbmQgMy1EIG91dHB1dCB2YXJpYWJsZXMgYXJlIHN0b3JlZCB0byBzdXBwb3J0IGltcGFjdHMgYW5hbHlzaXMsIG1vZGVsIGV2YWx1YXRpb24sIGFuZCBmdXJ0aGVyIGR5bmFtaWNhbCBkb3duc2NhbGluZy4gQWxsIG1vZGVscyBhcmUgcnVuIGF0IDUwLWttIHNwYXRpYWwgcmVzb2x1dGlvbiwgd2l0aCBkYXRhIHN0b3JlZCBhdCAzLWhvdXJseSBpbnRlcnZhbHMuIFRoZSBzaW11bGF0aW9uIGRvbWFpbiBjb3ZlcnMgbW9zdCBvZiBOb3J0aCBBbWVyaWNhLCBpbmNsdWRpbmcgdGhlIGNvbnRlcm1pbm91cyBVbml0ZWQgU3RhdGVzLCBtb3N0IG9mIENhbmFkYSwgYW5kIHBhcnRzIG9mIE1leGljby4gRGF0YSBpcyBzdG9yZWQgaW4gQ0YtY29tcGxpYW50IG5ldENERiBmaWxlcy4gRWFjaCBSQ00gaXMgZm9yY2VkIHdpdGggYm91bmRhcnkgY29uZGl0aW9ucyBmcm9tIHRoZSBOQ0VQLTIgcmVhbmFseWlzIGZvciBhIDI1IGhpc3RvcmljYWwgcGVyaW9kIGZyb20gMTk4MC0yMDA0LiBFYWNoIFJDTSBpcyBhbHNvIGRyaXZlbiB3aXRoIGJvdW5kYXJ5IGNvbmRpdGlvbnMgZnJvbSB0d28gb2YgZm91ciBHQ01zIGZvciBhIDMwLXllYXIgY3VycmVudCBjbGltYXRlIHBlcmlvZCAoMTk3MS0yMDAwKSBhbmQgYSAzMC15ZWFyIGZ1dHVyZSBwZXJpb2QgKDIwNDEtMjA3MCkuIFRoZSBmb3VyIEdDTXMgYXJlIENDU00zLCBDR0NNMywgR0ZETCwgYW5kIEhhZENNMy4gVGhlIGZ1dHVyZSBHQ00gc2ltdWxhdGlvbnMgdXNlIHRoZSBTUkVTLUEyIGVtaXNzaW9ucyBzY2VuYXJpby4gVGhlcmUgYXJlIGFsc28gdHdvIHRpbWVzbGljZSBleHBlcmltZW50cyB1c2luZyB0aGUgQ0NTTTMgYW5kIEdGREwgR0NNcyBydW5uaW5nIHRoZSBhdG1vc3BoZXJpYyBjb21wb25lbnQgYWxvbmUgYXQgNTAta20gcmVzb2x1dGlvbi48L2Rlc2NyaXB0aW9uPjwvZGVzY3JpcHRpb25zPjwvcmVzb3VyY2U+"},"relationships":{"data-center":{"data":{"id":"cdl.ncar","type":"data-centers"}},"member":{"data":{"id":"cdl","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.13140/rg.2.2.32380.64640","type":"works","attributes":{"doi":"10.13140/rg.2.2.32380.64640","identifier":"https://doi.org/10.13140/rg.2.2.32380.64640","url":null,"author":[{"literal":"Farhad Khorsandi"}],"title":"Vulnerability and Adaptation Assessment of Agriculture, Livestock and Fisheries section in Iran Iran's Third National Communication to UNFCCC","container-title":"National Climate Change Project","description":null,"resource-type-subtype":"Technical Report","data-center-id":"rg.rg","member-id":"rg","resource-type-id":"text","version":null,"license":null,"schema-version":"4","results":[],"related-identifiers":[],"published":"2015","registered":"2017-07-12T12:53:33Z","checked":null,"updated":"2017-07-12T12:53:33Z","media":null,"xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxyZXNvdXJjZSB4c2k6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC00IGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTQvbWV0YWRhdGEueHNkIiB4bWxucz0iaHR0cDovL2RhdGFjaXRlLm9yZy9zY2hlbWEva2VybmVsLTQiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjEzMTQwL1JHLjIuMi4zMjM4MC42NDY0MDwvaWRlbnRpZmllcj48Y3JlYXRvcnM+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkZhcmhhZCBLaG9yc2FuZGk8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48L2NyZWF0b3JzPjx0aXRsZXM+PHRpdGxlPlZ1bG5lcmFiaWxpdHkgYW5kIEFkYXB0YXRpb24gQXNzZXNzbWVudCBvZiBBZ3JpY3VsdHVyZSwgTGl2ZXN0b2NrIGFuZCBGaXNoZXJpZXMgc2VjdGlvbiBpbiBJcmFuIElyYW4ncyBUaGlyZCBOYXRpb25hbCBDb21tdW5pY2F0aW9uIHRvIFVORkNDQzwvdGl0bGU+PC90aXRsZXM+PHB1Ymxpc2hlcj5OYXRpb25hbCBDbGltYXRlIENoYW5nZSBQcm9qZWN0PC9wdWJsaXNoZXI+PHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+PHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJUZXh0Ij5UZWNobmljYWwgUmVwb3J0PC9yZXNvdXJjZVR5cGU+PGxhbmd1YWdlPmVuPC9sYW5ndWFnZT48L3Jlc291cmNlPg=="},"relationships":{"data-center":{"data":{"id":"rg.rg","type":"data-centers"}},"member":{"data":{"id":"rg","type":"members"}},"resource-type":{"data":{"id":"text","type":"resource-types"}}}},{"id":"https://doi.org/10.3334/cdiac/spruce.017","type":"works","attributes":{"doi":"10.3334/cdiac/spruce.017","identifier":"https://doi.org/10.3334/cdiac/spruce.017","url":"http://mnspruce.ornl.gov/sites/default/files/Final_TESSFA_Proposal_27Feb2015Rev.pdf","author":[{"literal":"Paul J. Hanson"},{"literal":"Daniel M. Ricciuto"}],"title":"SCIENCE PLAN AND PROGRESS REPORT FOR THE TERRESTRIAL ECOSYSTEM SCIENCE ï¿½ SCIENTIFIC FOCUS AREA (TES SFA)","container-title":"Climate Change Science Institute","description":null,"resource-type-subtype":"Project Proposal","data-center-id":"cdl.ornl","member-id":"cdl","resource-type-id":"text","version":null,"license":null,"schema-version":"2.2","results":[],"related-identifiers":[],"published":"2015","registered":"2016-01-27T21:00:39Z","checked":null,"updated":"2016-10-10T15:22:46Z","media":null,"xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpOUzE9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBOUzE6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0yLjIgaHR0cDovL3NjaGVtYS5kYXRhY2l0ZS5vcmcvbWV0YS9rZXJuZWwtMi4yL21ldGFkYXRhLnhzZCI+CjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjMzMzQvQ0RJQUMvU1BSVUNFLjAxNzwvaWRlbnRpZmllcj48Y3JlYXRvcnM+CjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5QYXVsIEouIEhhbnNvbjwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPgo8Y3JlYXRvcj48Y3JlYXRvck5hbWU+RGFuaWVsIE0uIFJpY2NpdXRvPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+CjwvY3JlYXRvcnM+Cjx0aXRsZXM+PHRpdGxlPlNDSUVOQ0UgUExBTiBBTkQgUFJPR1JFU1MgUkVQT1JUIEZPUiBUSEUgVEVSUkVTVFJJQUwgRUNPU1lTVEVNIFNDSUVOQ0Ugw6/Cv8K9IFNDSUVOVElGSUMgRk9DVVMgQVJFQSAoVEVTIFNGQSk8L3RpdGxlPjwvdGl0bGVzPgo8cHVibGlzaGVyPkNsaW1hdGUgQ2hhbmdlIFNjaWVuY2UgSW5zdGl0dXRlPC9wdWJsaXNoZXI+CjxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPgo8Y29udHJpYnV0b3JzPgo8Y29udHJpYnV0b3IgY29udHJpYnV0b3JUeXBlPSJIb3N0aW5nSW5zdGl0dXRpb24iPjxjb250cmlidXRvck5hbWU+RW52aXJvbm1lbnRhbCBTY2llbmNlcyBEaXZpc2lvbiwgT2FrIFJpZGdlIE5hdGlvbmFsIExhYm9yYXRvcnk8L2NvbnRyaWJ1dG9yTmFtZT48L2NvbnRyaWJ1dG9yPgo8Y29udHJpYnV0b3IgY29udHJpYnV0b3JUeXBlPSJEYXRhTWFuYWdlciI+PGNvbnRyaWJ1dG9yTmFtZT5Ib29rLCBMZXMgQS48L2NvbnRyaWJ1dG9yTmFtZT48L2NvbnRyaWJ1dG9yPgo8L2NvbnRyaWJ1dG9ycz4KPGxhbmd1YWdlPmVuZzwvbGFuZ3VhZ2U+CjxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iVGV4dCI+UHJvamVjdCBQcm9wb3NhbDwvcmVzb3VyY2VUeXBlPjwvcmVzb3VyY2U+"},"relationships":{"data-center":{"data":{"id":"cdl.ornl","type":"data-centers"}},"member":{"data":{"id":"cdl","type":"members"}},"resource-type":{"data":{"id":"text","type":"resource-types"}}}},{"id":"https://doi.org/10.3334/cdiac/spruce.030","type":"works","attributes":{"doi":"10.3334/cdiac/spruce.030","identifier":"https://doi.org/10.3334/cdiac/spruce.030","url":null,"author":[{"literal":"Stephen D. Sebestyen"},{"literal":"Natalie A. Griffiths"}],"title":"SPRUCE Enclosure Corral and Sump System: Description, Operation, and Calibration","container-title":"Climate Change Science Institute","description":null,"resource-type-subtype":"Project Documentation","data-center-id":"cdl.ornl","member-id":"cdl","resource-type-id":"text","version":null,"license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2016","registered":"2016-08-31T16:42:50Z","checked":null,"updated":"2016-10-10T15:22:48Z","media":null,"xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6TlMxPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgTlMxOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjMzMzQvQ0RJQUMvU1BSVUNFLjAzMDwvaWRlbnRpZmllcj48Y3JlYXRvcnM+CjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5TdGVwaGVuIEQuIFNlYmVzdHllbjwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPgo8Y3JlYXRvcj48Y3JlYXRvck5hbWU+TmF0YWxpZSBBLiBHcmlmZml0aHM8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj4KPC9jcmVhdG9ycz4KPHRpdGxlcz48dGl0bGU+U1BSVUNFIEVuY2xvc3VyZSBDb3JyYWwgYW5kIFN1bXAgU3lzdGVtOiBEZXNjcmlwdGlvbiwgT3BlcmF0aW9uLCBhbmQgQ2FsaWJyYXRpb248L3RpdGxlPjwvdGl0bGVzPgo8cHVibGlzaGVyPkNsaW1hdGUgQ2hhbmdlIFNjaWVuY2UgSW5zdGl0dXRlPC9wdWJsaXNoZXI+CjxwdWJsaWNhdGlvblllYXI+MjAxNjwvcHVibGljYXRpb25ZZWFyPgo8Y29udHJpYnV0b3JzPgo8Y29udHJpYnV0b3IgY29udHJpYnV0b3JUeXBlPSJIb3N0aW5nSW5zdGl0dXRpb24iPjxjb250cmlidXRvck5hbWU+RW52aXJvbm1lbnRhbCBTY2llbmNlcyBEaXZpc2lvbiwgT2FrIFJpZGdlIE5hdGlvbmFsIExhYm9yYXRvcnk8L2NvbnRyaWJ1dG9yTmFtZT48L2NvbnRyaWJ1dG9yPgo8Y29udHJpYnV0b3IgY29udHJpYnV0b3JUeXBlPSJEYXRhQ3VyYXRvciI+PGNvbnRyaWJ1dG9yTmFtZT5MZXMgQS4gSG9vazwvY29udHJpYnV0b3JOYW1lPjwvY29udHJpYnV0b3I+CjwvY29udHJpYnV0b3JzPgo8bGFuZ3VhZ2U+ZW5nPC9sYW5ndWFnZT4KPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJUZXh0Ij5Qcm9qZWN0IERvY3VtZW50YXRpb248L3Jlc291cmNlVHlwZT48L3Jlc291cmNlPg=="},"relationships":{"data-center":{"data":{"id":"cdl.ornl","type":"data-centers"}},"member":{"data":{"id":"cdl","type":"members"}},"resource-type":{"data":{"id":"text","type":"resource-types"}}}},{"id":"https://doi.org/10.7892/boris.70297","type":"works","attributes":{"doi":"10.7892/boris.70297","identifier":"https://doi.org/10.7892/boris.70297","url":"http://boris.unibe.ch/70297/","author":[{"given":"Sarah","family":"Ogalleh"},{"given":"Ringpon Joseph","family":"Gwamzhi"},{"given":"Boniface","family":"Kiteme"},{"given":"Chinwe","family":"Ifejika Speranza"}],"title":"Assessment of indigenous knowledge to improve resilience to environmental and climate change: Case studies from Kenya and Nigeria","container-title":"Climate Change Research Centre","description":null,"resource-type-subtype":null,"data-center-id":"ethz.boris","member-id":"ethz","resource-type-id":"text","version":null,"license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2008","registered":"2015-07-23T04:00:16Z","checked":null,"updated":"2016-03-06T05:00:21Z","media":null,"xml":"PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz48cmVzb3VyY2UgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTMvbWV0YWRhdGEueHNkIj48aWRlbnRpZmllciBpZGVudGlmaWVyVHlwZT0iRE9JIj4xMC43ODkyL2JvcmlzLjcwMjk3PC9pZGVudGlmaWVyPjxjcmVhdG9ycz48Y3JlYXRvcj48Y3JlYXRvck5hbWU+T2dhbGxlaCwgU2FyYWg8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+R3dhbXpoaSwgUmluZ3BvbiBKb3NlcGg8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+S2l0ZW1lLCBCb25pZmFjZTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5JZmVqaWthIFNwZXJhbnphLCBDaGlud2U8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48L2NyZWF0b3JzPjx0aXRsZXM+PHRpdGxlPkFzc2Vzc21lbnQgb2YgaW5kaWdlbm91cyBrbm93bGVkZ2UgdG8gaW1wcm92ZSByZXNpbGllbmNlIHRvIGVudmlyb25tZW50YWwgYW5kIGNsaW1hdGUgY2hhbmdlOiBDYXNlIHN0dWRpZXMgZnJvbSBLZW55YSBhbmQgTmlnZXJpYTwvdGl0bGU+PC90aXRsZXM+PHB1Ymxpc2hlcj5DbGltYXRlIENoYW5nZSBSZXNlYXJjaCBDZW50cmU8L3B1Ymxpc2hlcj48cHVibGljYXRpb25ZZWFyPjIwMDg8L3B1YmxpY2F0aW9uWWVhcj48c3ViamVjdHM+PHN1YmplY3Q+MzMwIEVjb25vbWljczwvc3ViamVjdD48L3N1YmplY3RzPjxkYXRlcz48ZGF0ZSBkYXRlVHlwZT0iQXZhaWxhYmxlIj4yMDA4PC9kYXRlPjwvZGF0ZXM+PGxhbmd1YWdlPmVuZzwvbGFuZ3VhZ2U+PHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJUZXh0Ij48L3Jlc291cmNlVHlwZT48Zm9ybWF0cz48Zm9ybWF0PmFwcGxpY2F0aW9uL3BkZjwvZm9ybWF0PjwvZm9ybWF0cz48cmlnaHRzTGlzdD48cmlnaHRzPmluZm86ZXUtcmVwby9zZW1hbnRpY3Mvb3BlbkFjY2VzczwvcmlnaHRzPjwvcmlnaHRzTGlzdD48L3Jlc291cmNlPg=="},"relationships":{"data-center":{"data":{"id":"ethz.boris","type":"data-centers"}},"member":{"data":{"id":"ethz","type":"members"}},"resource-type":{"data":{"id":"text","type":"resource-types"}}}},{"id":"https://doi.org/10.15770/eum_saf_h_0001","type":"works","attributes":{"doi":"10.15770/eum_saf_h_0001","identifier":"https://doi.org/10.15770/eum_saf_h_0001","url":null,"author":[{"literal":"SAF On Support To Operational Hydrology And Water Management"},{"literal":"H-SAF"}],"title":"ASCAT Surface Soil Moisture CDR2014 time series 12.5 km sampling - Metop","container-title":"H-SAF","description":"The Metop ASCAT surface soil moisture product is based on a semi-empirical change detection method developed by TU Wien. The mulit-angle backscatter observation from Metop ASCAT are used to derive relative surface soil moisture information expressed in degree of saturation (0 - 100%). The product contains processing, correction and confidence flags to indicate the quaility of the product.","resource-type-subtype":"Climate Data Record","data-center-id":"tib.eumetsat","member-id":"tib","resource-type-id":"collection","version":null,"license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2017","registered":"2017-08-18T12:13:33Z","checked":null,"updated":"2017-08-18T12:13:33Z","media":null,"xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cmVzb3VyY2UgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTMvbWV0YWRhdGEueHNkIj48aWRlbnRpZmllciBpZGVudGlmaWVyVHlwZT0iRE9JIj4xMC4xNTc3MC9FVU1fU0FGX0hfMDAwMTwvaWRlbnRpZmllcj48Y3JlYXRvcnM+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPlNBRiBvbiBTdXBwb3J0IHRvIE9wZXJhdGlvbmFsIEh5ZHJvbG9neSBhbmQgV2F0ZXIgTWFuYWdlbWVudDwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5ILVNBRjwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjwvY3JlYXRvcnM+PHRpdGxlcz48dGl0bGUgeG1sOmxhbmc9ImVuIj5BU0NBVCBTdXJmYWNlIFNvaWwgTW9pc3R1cmUgQ0RSMjAxNCB0aW1lIHNlcmllcyAxMi41IGttIHNhbXBsaW5nIC0gTWV0b3A8L3RpdGxlPjx0aXRsZSB0aXRsZVR5cGU9IkFsdGVybmF0aXZlVGl0bGUiIHhtbDpsYW5nPSJlbiI+TWV0b3AgQVNDQVQgU1NNIENEUjIwMTQ8L3RpdGxlPjx0aXRsZSB0aXRsZVR5cGU9IkFsdGVybmF0aXZlVGl0bGUiIHhtbDpsYW5nPSJlbiI+SDI1PC90aXRsZT48L3RpdGxlcz48cHVibGlzaGVyPkgtU0FGPC9wdWJsaXNoZXI+PHB1YmxpY2F0aW9uWWVhcj4yMDE3PC9wdWJsaWNhdGlvblllYXI+PGRhdGVzPjxkYXRlIGRhdGVUeXBlPSJDcmVhdGVkIj4yMDE3LTAyLTI4PC9kYXRlPjxkYXRlIGRhdGVUeXBlPSJWYWxpZCI+MjAwNy0wMS0wMS8yMDE0LTEyLTMxPC9kYXRlPjwvZGF0ZXM+PHN1YmplY3RzPjxzdWJqZWN0IHN1YmplY3RTY2hlbWU9IkdFTUVUIC0gSU5TUElSRSB0aGVtZXMsIHZlcnNpb24gMS4wLCBwdWJsaWNhdGlvbjogMjAwOC0wNi0wMSIgeG1sOmxhbmc9ImVuIj5BdG1vc3BoZXJpYyBjb25kaXRpb25zPC9zdWJqZWN0PjxzdWJqZWN0IHNjaGVtZVVSST0iaHR0cDovL3N0YW5kYXJkcy5pc28ub3JnL2l0dGYvUHVibGljbHlBdmFpbGFibGVTdGFuZGFyZHMvSVNPXzE5MTM5X1NjaGVtYXMvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjTURfS2V5d29yZFR5cGVDb2RlIiBzdWJqZWN0U2NoZW1lPSJ0aGVtZSIgeG1sOmxhbmc9ImVuIj5Tb2lsIE1vaXN0dXJlPC9zdWJqZWN0PjxzdWJqZWN0IHNjaGVtZVVSST0iaHR0cDovL3N0YW5kYXJkcy5pc28ub3JnL2l0dGYvUHVibGljbHlBdmFpbGFibGVTdGFuZGFyZHMvSVNPXzE5MTM5X1NjaGVtYXMvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjTURfS2V5d29yZFR5cGVDb2RlIiBzdWJqZWN0U2NoZW1lPSJzb2NpYWxCZW5lZml0QXJlYSIgeG1sOmxhbmc9ImVuIj5PcGVyYXRpb25hbCBoeWRyb2xvZ2ljYWwgdW5pdHM8L3N1YmplY3Q+PHN1YmplY3Qgc2NoZW1lVVJJPSJodHRwOi8vc3RhbmRhcmRzLmlzby5vcmcvaXR0Zi9QdWJsaWNseUF2YWlsYWJsZVN0YW5kYXJkcy9JU09fMTkxMzlfU2NoZW1hcy9yZXNvdXJjZXMvQ29kZWxpc3QvZ214Q29kZWxpc3RzLnhtbCNNRF9LZXl3b3JkVHlwZUNvZGUiIHN1YmplY3RTY2hlbWU9InNvY2lhbEJlbmVmaXRBcmVhIiB4bWw6bGFuZz0iZW4iPkNsaW1hdG9sb2d5PC9zdWJqZWN0PjxzdWJqZWN0IHNjaGVtZVVSST0iaHR0cDovL3N0YW5kYXJkcy5pc28ub3JnL2l0dGYvUHVibGljbHlBdmFpbGFibGVTdGFuZGFyZHMvSVNPXzE5MTM5X1NjaGVtYXMvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjTURfS2V5d29yZFR5cGVDb2RlIiBzdWJqZWN0U2NoZW1lPSJzb2NpYWxCZW5lZml0QXJlYSIgeG1sOmxhbmc9ImVuIj5SZXNlYXJjaCAmYW1wOyBkZXZlbG9wbWVudCBhY3Rpdml0aWVzPC9zdWJqZWN0PjxzdWJqZWN0IHNjaGVtZVVSST0iaHR0cDovL3N0YW5kYXJkcy5pc28ub3JnL2l0dGYvUHVibGljbHlBdmFpbGFibGVTdGFuZGFyZHMvSVNPXzE5MTM5X1NjaGVtYXMvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjTURfS2V5d29yZFR5cGVDb2RlIiBzdWJqZWN0U2NoZW1lPSJwbGFjZSIgeG1sOmxhbmc9ImVuIj5TQUYgQXJjaGl2ZSAmYW1wOyBGVFA8L3N1YmplY3Q+PC9zdWJqZWN0cz48bGFuZ3VhZ2U+ZW48L2xhbmd1YWdlPjxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iQ29sbGVjdGlvbiI+Q2xpbWF0ZSBEYXRhIFJlY29yZDwvcmVzb3VyY2VUeXBlPjxyZWxhdGVkSWRlbnRpZmllcnM+PHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iVVJMIiByZWxhdGVkTWV0YWRhdGFTY2hlbWU9Imh0dHA6Ly9zY2hlbWFzLm9wZW5naXMubmV0L2lzby8xOTEzOS8yMDA2MDUwNC9nbWQvZ21kLnhzZCIgcmVsYXRpb25UeXBlPSJIYXNNZXRhZGF0YSIgc2NoZW1lVHlwZT0ieHNkIiBzY2hlbWVVUkk9Imh0dHA6Ly9zY2hlbWFzLm9wZW5naXMubmV0L2Nzdy8yLjAuMi9jc3cueHNkIj5odHRwOi8vbmF2aWdhdG9yLmV1bWV0c2F0LmludC9zb2FwU2VydmljZXMvQ1NXU3RhcnR1cD9zZXJ2aWNlPUNTVyZhbXA7dmVyc2lvbj0yLjAuMiZhbXA7cmVxdWVzdD1HZXRSZWNvcmRCeUlkJmFtcDtvdXRwdXRTY2hlbWE9aHR0cDovL3d3dy5pc290YzIxMS5vcmcvMjAwNS9nbWQmYW1wO0lkPUVPOkVVTTpEQVQ6TUVUT1A6SDI1PC9yZWxhdGVkSWRlbnRpZmllcj48cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJVUkwiIHJlbGF0aW9uVHlwZT0iSXNEb2N1bWVudGVkQnkiIHNjaGVtZVR5cGU9InRleHQvaHRtbCI+aHR0cDovL25hdmlnYXRvci5ldW1ldHNhdC5pbnQvZGlzY292ZXJ5L1N0YXJ0L0RpcmVjdFNlYXJjaC9EZXRhaWxSZXN1bHQuZG8/ZihyMCk9RU86RVVNOkRBVDpNRVRPUDpIMjU8L3JlbGF0ZWRJZGVudGlmaWVyPjwvcmVsYXRlZElkZW50aWZpZXJzPjxzaXplcz48c2l6ZT44IE1CPC9zaXplPjwvc2l6ZXM+PGZvcm1hdHM+PGZvcm1hdD5uZXRDREYgKHVzaW5nIENGIGNvbnZlbnRpb24pPC9mb3JtYXQ+PC9mb3JtYXRzPjxyaWdodHNMaXN0PjxyaWdodHM+Y29weXJpZ2h0PC9yaWdodHM+PC9yaWdodHNMaXN0PjxkZXNjcmlwdGlvbnM+PGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiPlRoZSBNZXRvcCBBU0NBVCBzdXJmYWNlIHNvaWwgbW9pc3R1cmUgcHJvZHVjdCBpcyBiYXNlZCBvbiBhIHNlbWktZW1waXJpY2FsIGNoYW5nZSBkZXRlY3Rpb24gbWV0aG9kIGRldmVsb3BlZCBieSBUVSBXaWVuLiBUaGUgbXVsaXQtYW5nbGUgYmFja3NjYXR0ZXIgb2JzZXJ2YXRpb24gZnJvbSBNZXRvcCBBU0NBVCBhcmUgdXNlZCB0byBkZXJpdmUgcmVsYXRpdmUgc3VyZmFjZSBzb2lsIG1vaXN0dXJlIGluZm9ybWF0aW9uIGV4cHJlc3NlZCBpbiBkZWdyZWUgb2Ygc2F0dXJhdGlvbiAoMCAtIDEwMCUpLiBUaGUgcHJvZHVjdCBjb250YWlucyBwcm9jZXNzaW5nLCBjb3JyZWN0aW9uIGFuZCBjb25maWRlbmNlIGZsYWdzIHRvIGluZGljYXRlIHRoZSBxdWFpbGl0eSBvZiB0aGUgcHJvZHVjdC48L2Rlc2NyaXB0aW9uPjwvZGVzY3JpcHRpb25zPjxnZW9Mb2NhdGlvbnM+PGdlb0xvY2F0aW9uPjxnZW9Mb2NhdGlvbkJveD4tNjAgLTE4MCA4MCAxODA8L2dlb0xvY2F0aW9uQm94PjwvZ2VvTG9jYXRpb24+PGdlb0xvY2F0aW9uPjxnZW9Mb2NhdGlvblBsYWNlPkdsb2JhbCBMYW5kPC9nZW9Mb2NhdGlvblBsYWNlPjwvZ2VvTG9jYXRpb24+PC9nZW9Mb2NhdGlvbnM+PC9yZXNvdXJjZT4="},"relationships":{"data-center":{"data":{"id":"tib.eumetsat","type":"data-centers"}},"member":{"data":{"id":"tib","type":"members"}},"resource-type":{"data":{"id":"collection","type":"resource-types"}}}},{"id":"https://doi.org/10.15770/eum_saf_h_0002","type":"works","attributes":{"doi":"10.15770/eum_saf_h_0002","identifier":"https://doi.org/10.15770/eum_saf_h_0002","url":null,"author":[{"literal":"SAF On Support To Operational Hydrology And Water Management"},{"literal":"H-SAF"}],"title":"ASCAT Surface Soil Moisture CDR2015 time series 12.5 km sampling - Metop","container-title":"H-SAF","description":"The Metop ASCAT surface soil moisture product is based on a semi-empirical change detection method developed by TU Wien. The mulit-angle backscatter observation from Metop ASCAT are used to derive relative surface soil moisture information expressed in degree of saturation (0 - 100%). The product contains processing, correction and confidence flags to indicate the quaility of the product.  The following changes have been introduced w.r.t. H25 Metop ASCAT SSM CDR2014: (1) Add Metop-B Level 1b input data, (2) Inter-beam calibration using stable backscatter targets, (3) New method to estimate slope and curvature parameters, (4) Derivation of new empirical model parameters. Data from Metop-A (2007-01-01 - 2015-12-31) &amp; Metop-B (2013-01-01 - 2015-12-31).","resource-type-subtype":"Climate Data Record","data-center-id":"tib.eumetsat","member-id":"tib","resource-type-id":"collection","version":null,"license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2017","registered":"2017-08-18T12:11:57Z","checked":null,"updated":"2017-08-18T12:11:57Z","media":null,"xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cmVzb3VyY2UgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTMvbWV0YWRhdGEueHNkIj48aWRlbnRpZmllciBpZGVudGlmaWVyVHlwZT0iRE9JIj4xMC4xNTc3MC9FVU1fU0FGX0hfMDAwMjwvaWRlbnRpZmllcj48Y3JlYXRvcnM+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPlNBRiBvbiBTdXBwb3J0IHRvIE9wZXJhdGlvbmFsIEh5ZHJvbG9neSBhbmQgV2F0ZXIgTWFuYWdlbWVudDwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5ILVNBRjwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjwvY3JlYXRvcnM+PHRpdGxlcz48dGl0bGUgeG1sOmxhbmc9ImVuIj5BU0NBVCBTdXJmYWNlIFNvaWwgTW9pc3R1cmUgQ0RSMjAxNSB0aW1lIHNlcmllcyAxMi41IGttIHNhbXBsaW5nIC0gTWV0b3A8L3RpdGxlPjx0aXRsZSB0aXRsZVR5cGU9IkFsdGVybmF0aXZlVGl0bGUiIHhtbDpsYW5nPSJlbiI+TWV0b3AgQVNDQVQgU1NNIENEUjIwMTU8L3RpdGxlPjx0aXRsZSB0aXRsZVR5cGU9IkFsdGVybmF0aXZlVGl0bGUiIHhtbDpsYW5nPSJlbiI+SDEwOTwvdGl0bGU+PC90aXRsZXM+PHB1Ymxpc2hlcj5ILVNBRjwvcHVibGlzaGVyPjxwdWJsaWNhdGlvblllYXI+MjAxNzwvcHVibGljYXRpb25ZZWFyPjxkYXRlcz48ZGF0ZSBkYXRlVHlwZT0iQ3JlYXRlZCI+MjAxNy0wMi0yODwvZGF0ZT48ZGF0ZSBkYXRlVHlwZT0iVmFsaWQiPjIwMDctMDEtMDEvMjAxNS0xMi0zMTwvZGF0ZT48L2RhdGVzPjxzdWJqZWN0cz48c3ViamVjdCBzdWJqZWN0U2NoZW1lPSJHRU1FVCAtIElOU1BJUkUgdGhlbWVzLCB2ZXJzaW9uIDEuMCwgcHVibGljYXRpb246IDIwMDgtMDYtMDEiIHhtbDpsYW5nPSJlbiI+QXRtb3NwaGVyaWMgY29uZGl0aW9uczwvc3ViamVjdD48c3ViamVjdCBzY2hlbWVVUkk9Imh0dHA6Ly9zdGFuZGFyZHMuaXNvLm9yZy9pdHRmL1B1YmxpY2x5QXZhaWxhYmxlU3RhbmRhcmRzL0lTT18xOTEzOV9TY2hlbWFzL3Jlc291cmNlcy9Db2RlbGlzdC9nbXhDb2RlbGlzdHMueG1sI01EX0tleXdvcmRUeXBlQ29kZSIgc3ViamVjdFNjaGVtZT0idGhlbWUiIHhtbDpsYW5nPSJlbiI+U29pbCBNb2lzdHVyZTwvc3ViamVjdD48c3ViamVjdCBzY2hlbWVVUkk9Imh0dHA6Ly9zdGFuZGFyZHMuaXNvLm9yZy9pdHRmL1B1YmxpY2x5QXZhaWxhYmxlU3RhbmRhcmRzL0lTT18xOTEzOV9TY2hlbWFzL3Jlc291cmNlcy9Db2RlbGlzdC9nbXhDb2RlbGlzdHMueG1sI01EX0tleXdvcmRUeXBlQ29kZSIgc3ViamVjdFNjaGVtZT0ic29jaWFsQmVuZWZpdEFyZWEiIHhtbDpsYW5nPSJlbiI+T3BlcmF0aW9uYWwgaHlkcm9sb2dpY2FsIHVuaXRzPC9zdWJqZWN0PjxzdWJqZWN0IHNjaGVtZVVSST0iaHR0cDovL3N0YW5kYXJkcy5pc28ub3JnL2l0dGYvUHVibGljbHlBdmFpbGFibGVTdGFuZGFyZHMvSVNPXzE5MTM5X1NjaGVtYXMvcmVzb3VyY2VzL0NvZGVsaXN0L2dteENvZGVsaXN0cy54bWwjTURfS2V5d29yZFR5cGVDb2RlIiBzdWJqZWN0U2NoZW1lPSJzb2NpYWxCZW5lZml0QXJlYSIgeG1sOmxhbmc9ImVuIj5DbGltYXRvbG9neTwvc3ViamVjdD48c3ViamVjdCBzY2hlbWVVUkk9Imh0dHA6Ly9zdGFuZGFyZHMuaXNvLm9yZy9pdHRmL1B1YmxpY2x5QXZhaWxhYmxlU3RhbmRhcmRzL0lTT18xOTEzOV9TY2hlbWFzL3Jlc291cmNlcy9Db2RlbGlzdC9nbXhDb2RlbGlzdHMueG1sI01EX0tleXdvcmRUeXBlQ29kZSIgc3ViamVjdFNjaGVtZT0ic29jaWFsQmVuZWZpdEFyZWEiIHhtbDpsYW5nPSJlbiI+UmVzZWFyY2ggJmFtcDsgZGV2ZWxvcG1lbnQgYWN0aXZpdGllczwvc3ViamVjdD48c3ViamVjdCBzY2hlbWVVUkk9Imh0dHA6Ly9zdGFuZGFyZHMuaXNvLm9yZy9pdHRmL1B1YmxpY2x5QXZhaWxhYmxlU3RhbmRhcmRzL0lTT18xOTEzOV9TY2hlbWFzL3Jlc291cmNlcy9Db2RlbGlzdC9nbXhDb2RlbGlzdHMueG1sI01EX0tleXdvcmRUeXBlQ29kZSIgc3ViamVjdFNjaGVtZT0icGxhY2UiIHhtbDpsYW5nPSJlbiI+U0FGIEFyY2hpdmUgJmFtcDsgRlRQPC9zdWJqZWN0Pjwvc3ViamVjdHM+PGxhbmd1YWdlPmVuPC9sYW5ndWFnZT48cmVzb3VyY2VUeXBlIHJlc291cmNlVHlwZUdlbmVyYWw9IkNvbGxlY3Rpb24iPkNsaW1hdGUgRGF0YSBSZWNvcmQ8L3Jlc291cmNlVHlwZT48cmVsYXRlZElkZW50aWZpZXJzPjxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IlVSTCIgcmVsYXRlZE1ldGFkYXRhU2NoZW1lPSJodHRwOi8vc2NoZW1hcy5vcGVuZ2lzLm5ldC9pc28vMTkxMzkvMjAwNjA1MDQvZ21kL2dtZC54c2QiIHJlbGF0aW9uVHlwZT0iSGFzTWV0YWRhdGEiIHNjaGVtZVR5cGU9InhzZCIgc2NoZW1lVVJJPSJodHRwOi8vc2NoZW1hcy5vcGVuZ2lzLm5ldC9jc3cvMi4wLjIvY3N3LnhzZCI+aHR0cDovL25hdmlnYXRvci5ldW1ldHNhdC5pbnQvc29hcFNlcnZpY2VzL0NTV1N0YXJ0dXA/c2VydmljZT1DU1cmYW1wO3ZlcnNpb249Mi4wLjImYW1wO3JlcXVlc3Q9R2V0UmVjb3JkQnlJZCZhbXA7b3V0cHV0U2NoZW1hPWh0dHA6Ly93d3cuaXNvdGMyMTEub3JnLzIwMDUvZ21kJmFtcDtJZD1FTzpFVU06REFUOk1FVE9QOkgxMDk8L3JlbGF0ZWRJZGVudGlmaWVyPjxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IlVSTCIgcmVsYXRpb25UeXBlPSJJc0RvY3VtZW50ZWRCeSIgc2NoZW1lVHlwZT0idGV4dC9odG1sIj5odHRwOi8vbmF2aWdhdG9yLmV1bWV0c2F0LmludC9kaXNjb3ZlcnkvU3RhcnQvRGlyZWN0U2VhcmNoL0RldGFpbFJlc3VsdC5kbz9mKHIwKT1FTzpFVU06REFUOk1FVE9QOkgxMDk8L3JlbGF0ZWRJZGVudGlmaWVyPjwvcmVsYXRlZElkZW50aWZpZXJzPjxzaXplcz48c2l6ZT4xNCBNQjwvc2l6ZT48L3NpemVzPjxmb3JtYXRzPjxmb3JtYXQ+bmV0Q0RGPC9mb3JtYXQ+PC9mb3JtYXRzPjxyaWdodHNMaXN0PjxyaWdodHM+Y29weXJpZ2h0PC9yaWdodHM+PC9yaWdodHNMaXN0PjxkZXNjcmlwdGlvbnM+PGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiPlRoZSBNZXRvcCBBU0NBVCBzdXJmYWNlIHNvaWwgbW9pc3R1cmUgcHJvZHVjdCBpcyBiYXNlZCBvbiBhIHNlbWktZW1waXJpY2FsIGNoYW5nZSBkZXRlY3Rpb24gbWV0aG9kIGRldmVsb3BlZCBieSBUVSBXaWVuLiBUaGUgbXVsaXQtYW5nbGUgYmFja3NjYXR0ZXIgb2JzZXJ2YXRpb24gZnJvbSBNZXRvcCBBU0NBVCBhcmUgdXNlZCB0byBkZXJpdmUgcmVsYXRpdmUgc3VyZmFjZSBzb2lsIG1vaXN0dXJlIGluZm9ybWF0aW9uIGV4cHJlc3NlZCBpbiBkZWdyZWUgb2Ygc2F0dXJhdGlvbiAoMCAtIDEwMCUpLiBUaGUgcHJvZHVjdCBjb250YWlucyBwcm9jZXNzaW5nLCBjb3JyZWN0aW9uIGFuZCBjb25maWRlbmNlIGZsYWdzIHRvIGluZGljYXRlIHRoZSBxdWFpbGl0eSBvZiB0aGUgcHJvZHVjdC4gIFRoZSBmb2xsb3dpbmcgY2hhbmdlcyBoYXZlIGJlZW4gaW50cm9kdWNlZCB3LnIudC4gSDI1IE1ldG9wIEFTQ0FUIFNTTSBDRFIyMDE0OiAoMSkgQWRkIE1ldG9wLUIgTGV2ZWwgMWIgaW5wdXQgZGF0YSwgKDIpIEludGVyLWJlYW0gY2FsaWJyYXRpb24gdXNpbmcgc3RhYmxlIGJhY2tzY2F0dGVyIHRhcmdldHMsICgzKSBOZXcgbWV0aG9kIHRvIGVzdGltYXRlIHNsb3BlIGFuZCBjdXJ2YXR1cmUgcGFyYW1ldGVycywgKDQpIERlcml2YXRpb24gb2YgbmV3IGVtcGlyaWNhbCBtb2RlbCBwYXJhbWV0ZXJzLiBEYXRhIGZyb20gTWV0b3AtQSAoMjAwNy0wMS0wMSAtIDIwMTUtMTItMzEpICZhbXA7IE1ldG9wLUIgKDIwMTMtMDEtMDEgLSAyMDE1LTEyLTMxKS48L2Rlc2NyaXB0aW9uPjwvZGVzY3JpcHRpb25zPjxnZW9Mb2NhdGlvbnM+PGdlb0xvY2F0aW9uPjxnZW9Mb2NhdGlvbkJveD4tNjAgLTE4MCA4MCAxODA8L2dlb0xvY2F0aW9uQm94PjwvZ2VvTG9jYXRpb24+PGdlb0xvY2F0aW9uPjxnZW9Mb2NhdGlvblBsYWNlPkdsb2JhbCBMYW5kPC9nZW9Mb2NhdGlvblBsYWNlPjwvZ2VvTG9jYXRpb24+PC9nZW9Mb2NhdGlvbnM+PC9yZXNvdXJjZT4="},"relationships":{"data-center":{"data":{"id":"tib.eumetsat","type":"data-centers"}},"member":{"data":{"id":"tib","type":"members"}},"resource-type":{"data":{"id":"collection","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/348504f1-43a6-4e0c-aee5-fc470b1dc888","type":"works","attributes":{"doi":"10.18164/348504f1-43a6-4e0c-aee5-fc470b1dc888","identifier":"https://doi.org/10.18164/348504f1-43a6-4e0c-aee5-fc470b1dc888","url":null,"author":[{"literal":"Paulo Costa"},{"literal":"NPRI HelpDesk"}],"title":"National Pollutant Release Inventory (NPRI) - Pollutant Release and Transfer Data Reported by Facilities, Single Year Tabular Format","container-title":"Environment and Climate Change Canada","description":"The National Pollutant Release Inventory (NPRI) is Canada's public inventory of pollutant releases (to air, water and land), disposals and transfers for recycling.  \n\nThis file contains the most commonly used NPRI data fields, within a simplified tabular format, including all facility-reported pollutant releases, disposals and transfers for recycling for a given year, listed by facility and substance. \n\nThere are important factors that should be considered prior to the use and interpretation of NPRI data. \n\nAdditional NPRI datasets and mapping products are available here: https://www.canada.ca/en/environment-climate-change/services/national-pollutant-release-inventory/tools-resources-data/access.html","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2017","registered":"2018-01-09T17:48:55Z","checked":null,"updated":"2018-01-09T17:48:55Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0LzM0ODUwNGYxLTQzYTYtNGUwYy1hZWU1LWZjNDcwYjFkYzg4ODwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPlBhdWxvIENvc3RhPC9jcmVhdG9yTmFtZT4NCiAgICA8L2NyZWF0b3I+DQogICAgPGNyZWF0b3I+DQogICAgICA8Y3JlYXRvck5hbWU+TlBSSSBIZWxwRGVzazwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5OYXRpb25hbCBQb2xsdXRhbnQgUmVsZWFzZSBJbnZlbnRvcnkgKE5QUkkpIC0gUG9sbHV0YW50IFJlbGVhc2UgYW5kIFRyYW5zZmVyIERhdGEgUmVwb3J0ZWQgYnkgRmFjaWxpdGllcywgU2luZ2xlIFllYXIgVGFidWxhciBGb3JtYXQ8L3RpdGxlPg0KICA8L3RpdGxlcz4NCiAgPHB1Ymxpc2hlcj5FbnZpcm9ubWVudCBhbmQgQ2xpbWF0ZSBDaGFuZ2UgQ2FuYWRhPC9wdWJsaXNoZXI+DQogIDxwdWJsaWNhdGlvblllYXI+MjAxNzwvcHVibGljYXRpb25ZZWFyPg0KICA8c3ViamVjdHM+DQogICAgPHN1YmplY3Q+bnByaSwgaW52ZW50b3J5LCBwb2xsdXRhbnQsIHBvbGx1dGlvbiwgZW1pc3Npb25zLCBlbnZpcm9ubWVudCwgcmVjeWNsaW5nLCBkaXNwb3NhbCwgaW5kdXN0cnksIGNoZW1pY2FsLCBzdWJzdGFuY2UsIHRveGljLCBhaXIgcG9sbHV0aW9uLCB3YXRlciBwb2xsdXRpb24sIGxhbmQsIGNoZW1pY2FsIHNwaWxsLCB3YXN0ZSwgdW5kZXJncm91bmQgaW5qZWN0aW9uLCBsYW5kZmlsbCwgZW5lcmd5IHJlY292ZXJ5LCBvem9uZSwgc21vZywgcGFydGljdWxhdGUgbWF0dGVyLCBlbWlzc2lvbnMsIHZvbGF0aWxlIG9yZ2FuaWMgY29tcG91bmQsIG5pdHJvZ2VuIG94aWRlcywgc3VscGh1ciBveGlkZSwgYW1tb25pYSwgZmFjaWxpdGllcywgZW52aXJvbm1lbnRhbCBwZXJmb3JtYW5jZSwgYnVzaW5lc3MsIHJlbGVhc2UsIG1hcCwgc2VjdG9yPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlBvbGx1dGlvbiBhbmQgV2FzdGU8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+TmF0aW9uYWwgKENBKTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5BaXI8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+V2F0ZXI8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+QWlyIC0gUXVhbGl0eTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5XYXRlciAtIFF1YW50aXR5PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkFzc2VzcyBUb3hpY2l0eSwgTWFuYWdlIGFuZCBNb25pdG9yIGZvciBFbnZpcm9ubWVudGFsIFByZXNlbmNlIG9mIEhhemFyZG91cyBTdWJzdGFuY2VzIGFuZCBXYXN0ZTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5QbGFucyBhbmQgUmVwb3J0cyBmb3IgSGF6YXJkb3VzIFN1YnN0YW5jZXM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UG9sbHV0aW9uPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlBvbGx1dGlvbiBwcmV2ZW50aW9uPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkVudmlyb25tZW50YWwgcHJvZ3JhbXM8L3N1YmplY3Q+DQogIDwvc3ViamVjdHM+DQogIDxsYW5ndWFnZT5lbmc8L2xhbmd1YWdlPg0KICA8cmVzb3VyY2VUeXBlIHJlc291cmNlVHlwZUdlbmVyYWw9IkRhdGFzZXQiPkRhdGFzZXQ8L3Jlc291cmNlVHlwZT4NCiAgPHZlcnNpb24+MTwvdmVyc2lvbj4NCiAgPHJpZ2h0c0xpc3Q+DQogICAgPHJpZ2h0cz5PcGVuIEdvdmVybm1lbnQgTGljZW5jZSAtIENhbmFkYSAoaHR0cDovL29wZW4uY2FuYWRhLmNhL2VuL29wZW4tZ292ZXJubWVudC1saWNlbmNlLWNhbmFkYSk8L3JpZ2h0cz4NCiAgPC9yaWdodHNMaXN0Pg0KICA8ZGVzY3JpcHRpb25zPg0KICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0Ij5UaGUgTmF0aW9uYWwgUG9sbHV0YW50IFJlbGVhc2UgSW52ZW50b3J5IChOUFJJKSBpcyBDYW5hZGEncyBwdWJsaWMgaW52ZW50b3J5IG9mIHBvbGx1dGFudCByZWxlYXNlcyAodG8gYWlyLCB3YXRlciBhbmQgbGFuZCksIGRpc3Bvc2FscyBhbmQgdHJhbnNmZXJzIGZvciByZWN5Y2xpbmcuICANCg0KVGhpcyBmaWxlIGNvbnRhaW5zIHRoZSBtb3N0IGNvbW1vbmx5IHVzZWQgTlBSSSBkYXRhIGZpZWxkcywgd2l0aGluIGEgc2ltcGxpZmllZCB0YWJ1bGFyIGZvcm1hdCwgaW5jbHVkaW5nIGFsbCBmYWNpbGl0eS1yZXBvcnRlZCBwb2xsdXRhbnQgcmVsZWFzZXMsIGRpc3Bvc2FscyBhbmQgdHJhbnNmZXJzIGZvciByZWN5Y2xpbmcgZm9yIGEgZ2l2ZW4geWVhciwgbGlzdGVkIGJ5IGZhY2lsaXR5IGFuZCBzdWJzdGFuY2UuIA0KDQpUaGVyZSBhcmUgaW1wb3J0YW50IGZhY3RvcnMgdGhhdCBzaG91bGQgYmUgY29uc2lkZXJlZCBwcmlvciB0byB0aGUgdXNlIGFuZCBpbnRlcnByZXRhdGlvbiBvZiBOUFJJIGRhdGEuIA0KDQpBZGRpdGlvbmFsIE5QUkkgZGF0YXNldHMgYW5kIG1hcHBpbmcgcHJvZHVjdHMgYXJlIGF2YWlsYWJsZSBoZXJlOiBodHRwczovL3d3dy5jYW5hZGEuY2EvZW4vZW52aXJvbm1lbnQtY2xpbWF0ZS1jaGFuZ2Uvc2VydmljZXMvbmF0aW9uYWwtcG9sbHV0YW50LXJlbGVhc2UtaW52ZW50b3J5L3Rvb2xzLXJlc291cmNlcy1kYXRhL2FjY2Vzcy5odG1sPC9kZXNjcmlwdGlvbj4NCiAgPC9kZXNjcmlwdGlvbnM+DQogIDxnZW9Mb2NhdGlvbnM+DQogICAgPGdlb0xvY2F0aW9uPg0KICAgICAgPGdlb0xvY2F0aW9uQm94Pi0xNDEuMDAzIDQxLjY3NTUgLTUyLjYxNzQgLTUyLjYxNzQ8L2dlb0xvY2F0aW9uQm94Pg0KICAgIDwvZ2VvTG9jYXRpb24+DQogIDwvZ2VvTG9jYXRpb25zPg0KPC9yZXNvdXJjZT4="},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/80298f8d-b23e-4f29-9f03-661a95949d0f","type":"works","attributes":{"doi":"10.18164/80298f8d-b23e-4f29-9f03-661a95949d0f","identifier":"https://doi.org/10.18164/80298f8d-b23e-4f29-9f03-661a95949d0f","url":null,"author":[{"literal":"Paulo Costa"},{"literal":"NPRI HelpDesk"}],"title":"National Pollutant Release Inventory (NPRI) - Pollutant Release Data Aggregated by Province, Industry Type and Substance, Five-Year Tabular Format","container-title":"Environment and Climate Change Canada","description":"The National Pollutant Release Inventory (NPRI) is Canada's public inventory of pollutant releases (to air, water and land), disposals and transfers for recycling.  \n\nThese files contain NPRI release data for the past five years in CSV format, aggregated by Province, Industry Type and Substance, and disaggregated by media (air, water and land). The number of reporting facilities represented by each aggregated data point is included*. The results can be further broken down using the pre-defined queries available in the online NPRI Facility Search.\n\nThere are important factors that should be considered prior to the use and interpretation of NPRI data. Additional information is available on the NPRI web site.  \n\n*The number of facilities returned by the online NPRI data search may differ from the number contained in the download files.  The online results take into account the facility’s reported releases, disposals and transfers, but do not distinguish between media.  They also include facilities reporting only under Ontario Regulation 127/01 and facilities submitting “did not meet criteria” reports.\n\nMore NPRI datasets and mapping products are available here: https://www.canada.ca/en/environment-climate-change/services/national-pollutant-release-inventory/tools-resources-data/access.html","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2017","registered":"2018-01-09T17:52:55Z","checked":null,"updated":"2018-01-09T17:52:55Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0LzgwMjk4ZjhkLWIyM2UtNGYyOS05ZjAzLTY2MWE5NTk0OWQwZjwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPlBhdWxvIENvc3RhPC9jcmVhdG9yTmFtZT4NCiAgICA8L2NyZWF0b3I+DQogICAgPGNyZWF0b3I+DQogICAgICA8Y3JlYXRvck5hbWU+TlBSSSBIZWxwRGVzazwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5OYXRpb25hbCBQb2xsdXRhbnQgUmVsZWFzZSBJbnZlbnRvcnkgKE5QUkkpIC0gUG9sbHV0YW50IFJlbGVhc2UgRGF0YSBBZ2dyZWdhdGVkIGJ5IFByb3ZpbmNlLCBJbmR1c3RyeSBUeXBlIGFuZCBTdWJzdGFuY2UsIEZpdmUtWWVhciBUYWJ1bGFyIEZvcm1hdDwvdGl0bGU+DQogIDwvdGl0bGVzPg0KICA8cHVibGlzaGVyPkVudmlyb25tZW50IGFuZCBDbGltYXRlIENoYW5nZSBDYW5hZGE8L3B1Ymxpc2hlcj4NCiAgPHB1YmxpY2F0aW9uWWVhcj4yMDE3PC9wdWJsaWNhdGlvblllYXI+DQogIDxzdWJqZWN0cz4NCiAgICA8c3ViamVjdD5ucHJpLCBpbnZlbnRvcnksIHBvbGx1dGFudCwgcG9sbHV0aW9uLCBlbWlzc2lvbnMsIGVudmlyb25tZW50LCByZWN5Y2xpbmcsIGRpc3Bvc2FsLCBpbmR1c3RyeSwgY2hlbWljYWwsIHN1YnN0YW5jZSwgdG94aWMsIGFpciBwb2xsdXRpb24sIHdhdGVyIHBvbGx1dGlvbiwgbGFuZCwgY2hlbWljYWwgc3BpbGwsIHdhc3RlLCB1bmRlcmdyb3VuZCBpbmplY3Rpb24sIGxhbmRmaWxsLCBlbmVyZ3kgcmVjb3ZlcnksIG96b25lLCBzbW9nLCBwYXJ0aWN1bGF0ZSBtYXR0ZXIsIGVtaXNzaW9ucywgdm9sYXRpbGUgb3JnYW5pYyBjb21wb3VuZCwgbml0cm9nZW4gb3hpZGVzLCBzdWxwaHVyIG94aWRlLCBhbW1vbmlhLCBmYWNpbGl0aWVzLCBlbnZpcm9ubWVudGFsIHBlcmZvcm1hbmNlLCBidXNpbmVzcywgcmVsZWFzZSwgbWFwLCBzZWN0b3I8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UG9sbHV0aW9uIGFuZCBXYXN0ZTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5OYXRpb25hbCAoQ0EpPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkFpcjwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5XYXRlcjwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5BaXIgLSBRdWFsaXR5PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PldhdGVyIC0gUXVhbnRpdHk8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+QXNzZXNzIFRveGljaXR5LCBNYW5hZ2UgYW5kIE1vbml0b3IgZm9yIEVudmlyb25tZW50YWwgUHJlc2VuY2Ugb2YgSGF6YXJkb3VzIFN1YnN0YW5jZXMgYW5kIFdhc3RlPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlBsYW5zIGFuZCBSZXBvcnRzIGZvciBIYXphcmRvdXMgU3Vic3RhbmNlczwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5FbnZpcm9ubWVudDwvc3ViamVjdD4NCiAgPC9zdWJqZWN0cz4NCiAgPGxhbmd1YWdlPmVuZzwvbGFuZ3VhZ2U+DQogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YXNldDwvcmVzb3VyY2VUeXBlPg0KICA8dmVyc2lvbj4xPC92ZXJzaW9uPg0KICA8cmlnaHRzTGlzdD4NCiAgICA8cmlnaHRzPk9wZW4gR292ZXJubWVudCBMaWNlbmNlIC0gQ2FuYWRhIChodHRwOi8vb3Blbi5jYW5hZGEuY2EvZW4vb3Blbi1nb3Zlcm5tZW50LWxpY2VuY2UtY2FuYWRhKTwvcmlnaHRzPg0KICA8L3JpZ2h0c0xpc3Q+DQogIDxkZXNjcmlwdGlvbnM+DQogICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiPlRoZSBOYXRpb25hbCBQb2xsdXRhbnQgUmVsZWFzZSBJbnZlbnRvcnkgKE5QUkkpIGlzIENhbmFkYSdzIHB1YmxpYyBpbnZlbnRvcnkgb2YgcG9sbHV0YW50IHJlbGVhc2VzICh0byBhaXIsIHdhdGVyIGFuZCBsYW5kKSwgZGlzcG9zYWxzIGFuZCB0cmFuc2ZlcnMgZm9yIHJlY3ljbGluZy4gIA0KDQpUaGVzZSBmaWxlcyBjb250YWluIE5QUkkgcmVsZWFzZSBkYXRhIGZvciB0aGUgcGFzdCBmaXZlIHllYXJzIGluIENTViBmb3JtYXQsIGFnZ3JlZ2F0ZWQgYnkgUHJvdmluY2UsIEluZHVzdHJ5IFR5cGUgYW5kIFN1YnN0YW5jZSwgYW5kIGRpc2FnZ3JlZ2F0ZWQgYnkgbWVkaWEgKGFpciwgd2F0ZXIgYW5kIGxhbmQpLiBUaGUgbnVtYmVyIG9mIHJlcG9ydGluZyBmYWNpbGl0aWVzIHJlcHJlc2VudGVkIGJ5IGVhY2ggYWdncmVnYXRlZCBkYXRhIHBvaW50IGlzIGluY2x1ZGVkKi4gVGhlIHJlc3VsdHMgY2FuIGJlIGZ1cnRoZXIgYnJva2VuIGRvd24gdXNpbmcgdGhlIHByZS1kZWZpbmVkIHF1ZXJpZXMgYXZhaWxhYmxlIGluIHRoZSBvbmxpbmUgTlBSSSBGYWNpbGl0eSBTZWFyY2guDQoNClRoZXJlIGFyZSBpbXBvcnRhbnQgZmFjdG9ycyB0aGF0IHNob3VsZCBiZSBjb25zaWRlcmVkIHByaW9yIHRvIHRoZSB1c2UgYW5kIGludGVycHJldGF0aW9uIG9mIE5QUkkgZGF0YS4gQWRkaXRpb25hbCBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUgb24gdGhlIE5QUkkgd2ViIHNpdGUuICANCg0KKlRoZSBudW1iZXIgb2YgZmFjaWxpdGllcyByZXR1cm5lZCBieSB0aGUgb25saW5lIE5QUkkgZGF0YSBzZWFyY2ggbWF5IGRpZmZlciBmcm9tIHRoZSBudW1iZXIgY29udGFpbmVkIGluIHRoZSBkb3dubG9hZCBmaWxlcy4gIFRoZSBvbmxpbmUgcmVzdWx0cyB0YWtlIGludG8gYWNjb3VudCB0aGUgZmFjaWxpdHnigJlzIHJlcG9ydGVkIHJlbGVhc2VzLCBkaXNwb3NhbHMgYW5kIHRyYW5zZmVycywgYnV0IGRvIG5vdCBkaXN0aW5ndWlzaCBiZXR3ZWVuIG1lZGlhLiAgVGhleSBhbHNvIGluY2x1ZGUgZmFjaWxpdGllcyByZXBvcnRpbmcgb25seSB1bmRlciBPbnRhcmlvIFJlZ3VsYXRpb24gMTI3LzAxIGFuZCBmYWNpbGl0aWVzIHN1Ym1pdHRpbmcg4oCcZGlkIG5vdCBtZWV0IGNyaXRlcmlh4oCdIHJlcG9ydHMuDQoNCk1vcmUgTlBSSSBkYXRhc2V0cyBhbmQgbWFwcGluZyBwcm9kdWN0cyBhcmUgYXZhaWxhYmxlIGhlcmU6IGh0dHBzOi8vd3d3LmNhbmFkYS5jYS9lbi9lbnZpcm9ubWVudC1jbGltYXRlLWNoYW5nZS9zZXJ2aWNlcy9uYXRpb25hbC1wb2xsdXRhbnQtcmVsZWFzZS1pbnZlbnRvcnkvdG9vbHMtcmVzb3VyY2VzLWRhdGEvYWNjZXNzLmh0bWw8L2Rlc2NyaXB0aW9uPg0KICA8L2Rlc2NyaXB0aW9ucz4NCiAgPGdlb0xvY2F0aW9ucz4NCiAgICA8Z2VvTG9jYXRpb24+DQogICAgICA8Z2VvTG9jYXRpb25Cb3g+LTE0MS4wMDMgNDEuNjc1NSAtNTIuNjE3NCAtNTIuNjE3NDwvZ2VvTG9jYXRpb25Cb3g+DQogICAgPC9nZW9Mb2NhdGlvbj4NCiAgPC9nZW9Mb2NhdGlvbnM+DQo8L3Jlc291cmNlPg=="},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/004f6b03-ac84-4c7c-90cb-35949e6260bc","type":"works","attributes":{"doi":"10.18164/004f6b03-ac84-4c7c-90cb-35949e6260bc","identifier":"https://doi.org/10.18164/004f6b03-ac84-4c7c-90cb-35949e6260bc","url":null,"author":[{"literal":"Paulo Costa"},{"literal":"NPRI HelpDesk / Service De Dépannage De L'INRP"}],"title":"National Pollutant Release Inventory (NPRI) - Geographic Distribution of NPRI-Reporting Facilities - Virtual Globe Format","container-title":"Environment and Climate Change Canada","description":"These files contain the NPRI map layers in KMZ format for use in Google Earth™ and other “virtual globe” software. Facilities visualized can be filtered by province and by industry type. When selected, each facility generates its own summary report of their releases, disposals and transfers, with hyperlinks directing to the NPRI query site.\n\nThe National Pollutant Release Inventory (NPRI) is Canada's public inventory of pollutant releases (to air, water and land), disposals and transfers for recycling. Under the authority of the Canadian Environmental Protection Act, 1999 (CEPA 1999), owners or operators of facilities in Canada that meet the published reporting requirements are required to report to the NPRI.  Reported pollutants include toxic substances, air pollutants and other substances of concern.\n\n\nMore NPRI datasets and mapping products are available here: https://www.canada.ca/en/environment-climate-change/services/national-pollutant-release-inventory/tools-resources-data/access.html","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2017","registered":"2018-01-09T18:46:17Z","checked":null,"updated":"2018-01-26T18:17:52Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0LzAwNGY2YjAzLWFjODQtNGM3Yy05MGNiLTM1OTQ5ZTYyNjBiYzwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPlBhdWxvIENvc3RhPC9jcmVhdG9yTmFtZT4NCiAgICA8L2NyZWF0b3I+DQogICAgPGNyZWF0b3I+DQogICAgICA8Y3JlYXRvck5hbWU+TlBSSSBIZWxwRGVzayAvIFNlcnZpY2UgZGUgZMOpcGFubmFnZSBkZSBsJ0lOUlA8L2NyZWF0b3JOYW1lPg0KICAgIDwvY3JlYXRvcj4NCiAgPC9jcmVhdG9ycz4NCiAgPHRpdGxlcz4NCiAgICA8dGl0bGU+TmF0aW9uYWwgUG9sbHV0YW50IFJlbGVhc2UgSW52ZW50b3J5IChOUFJJKSAtIEdlb2dyYXBoaWMgRGlzdHJpYnV0aW9uIG9mIE5QUkktUmVwb3J0aW5nIEZhY2lsaXRpZXMgLSBWaXJ0dWFsIEdsb2JlIEZvcm1hdDwvdGl0bGU+DQogIDwvdGl0bGVzPg0KICA8cHVibGlzaGVyPkVudmlyb25tZW50IGFuZCBDbGltYXRlIENoYW5nZSBDYW5hZGE8L3B1Ymxpc2hlcj4NCiAgPHB1YmxpY2F0aW9uWWVhcj4yMDE3PC9wdWJsaWNhdGlvblllYXI+DQogIDxzdWJqZWN0cz4NCiAgICA8c3ViamVjdD5ucHJpLCBpbnZlbnRvcnksIHBvbGx1dGFudCwgcG9sbHV0aW9uLCBlbWlzc2lvbnMsIGVudmlyb25tZW50LCByZWN5Y2xpbmcsIGRpc3Bvc2FsLCBpbmR1c3RyeSwgY2hlbWljYWwsIHN1YnN0YW5jZSwgdG94aWMsIGFpciBwb2xsdXRpb24sIHdhdGVyIHBvbGx1dGlvbiwgbGFuZCwgY2hlbWljYWwgc3BpbGwsIHdhc3RlLCB1bmRlcmdyb3VuZCBpbmplY3Rpb24sIGxhbmRmaWxsLCBlbmVyZ3kgcmVjb3ZlcnksIG96b25lLCBzbW9nLCBwYXJ0aWN1bGF0ZSBtYXR0ZXIsIGVtaXNzaW9ucywgdm9sYXRpbGUgb3JnYW5pYyBjb21wb3VuZCwgbml0cm9nZW4gb3hpZGVzLCBzdWxwaHVyIG94aWRlLCBhbW1vbmlhLCBmYWNpbGl0aWVzLCBlbnZpcm9ubWVudGFsIHBlcmZvcm1hbmNlLCBidXNpbmVzcywgcmVsZWFzZSwgbWFwLCBzZWN0b3IsIHNoYXBlZmlsZSwgZ2Vvc3BhdGlhbCwgbWFwcGluZzwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5Qb2xsdXRpb248L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+QWlyPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0Pk5hdGlvbmFsIChDQSk8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+RmFjaWxpdHk8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UG9sbHV0aW9uIGFuZCBXYXN0ZTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5XYXRlcjwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5Mb2NhdGlvbjwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5Bc3Nlc3MgVG94aWNpdHksIE1hbmFnZSBhbmQgTW9uaXRvciBmb3IgRW52aXJvbm1lbnRhbCBQcmVzZW5jZSBvZiBIYXphcmRvdXMgU3Vic3RhbmNlcyBhbmQgV2FzdGU8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UGxhbnMgYW5kIFJlcG9ydHMgZm9yIEhhemFyZG91cyBTdWJzdGFuY2VzPC9zdWJqZWN0Pg0KICA8L3N1YmplY3RzPg0KICA8bGFuZ3VhZ2U+ZW5nPC9sYW5ndWFnZT4NCiAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ij5EYXRhc2V0PC9yZXNvdXJjZVR5cGU+DQogIDx2ZXJzaW9uPjE8L3ZlcnNpb24+DQogIDxyaWdodHNMaXN0Pg0KICAgIDxyaWdodHM+T3BlbiBHb3Zlcm5tZW50IExpY2VuY2UgLSBDYW5hZGEgKGh0dHA6Ly9vcGVuLmNhbmFkYS5jYS9lbi9vcGVuLWdvdmVybm1lbnQtbGljZW5jZS1jYW5hZGEpPC9yaWdodHM+DQogIDwvcmlnaHRzTGlzdD4NCiAgPGRlc2NyaXB0aW9ucz4NCiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCI+VGhlc2UgZmlsZXMgY29udGFpbiB0aGUgTlBSSSBtYXAgbGF5ZXJzIGluIEtNWiBmb3JtYXQgZm9yIHVzZSBpbiBHb29nbGUgRWFydGjihKIgYW5kIG90aGVyIOKAnHZpcnR1YWwgZ2xvYmXigJ0gc29mdHdhcmUuIEZhY2lsaXRpZXMgdmlzdWFsaXplZCBjYW4gYmUgZmlsdGVyZWQgYnkgcHJvdmluY2UgYW5kIGJ5IGluZHVzdHJ5IHR5cGUuIFdoZW4gc2VsZWN0ZWQsIGVhY2ggZmFjaWxpdHkgZ2VuZXJhdGVzIGl0cyBvd24gc3VtbWFyeSByZXBvcnQgb2YgdGhlaXIgcmVsZWFzZXMsIGRpc3Bvc2FscyBhbmQgdHJhbnNmZXJzLCB3aXRoIGh5cGVybGlua3MgZGlyZWN0aW5nIHRvIHRoZSBOUFJJIHF1ZXJ5IHNpdGUuDQoNClRoZSBOYXRpb25hbCBQb2xsdXRhbnQgUmVsZWFzZSBJbnZlbnRvcnkgKE5QUkkpIGlzIENhbmFkYSdzIHB1YmxpYyBpbnZlbnRvcnkgb2YgcG9sbHV0YW50IHJlbGVhc2VzICh0byBhaXIsIHdhdGVyIGFuZCBsYW5kKSwgZGlzcG9zYWxzIGFuZCB0cmFuc2ZlcnMgZm9yIHJlY3ljbGluZy4gVW5kZXIgdGhlIGF1dGhvcml0eSBvZiB0aGUgQ2FuYWRpYW4gRW52aXJvbm1lbnRhbCBQcm90ZWN0aW9uIEFjdCwgMTk5OSAoQ0VQQSAxOTk5KSwgb3duZXJzIG9yIG9wZXJhdG9ycyBvZiBmYWNpbGl0aWVzIGluIENhbmFkYSB0aGF0IG1lZXQgdGhlIHB1Ymxpc2hlZCByZXBvcnRpbmcgcmVxdWlyZW1lbnRzIGFyZSByZXF1aXJlZCB0byByZXBvcnQgdG8gdGhlIE5QUkkuICBSZXBvcnRlZCBwb2xsdXRhbnRzIGluY2x1ZGUgdG94aWMgc3Vic3RhbmNlcywgYWlyIHBvbGx1dGFudHMgYW5kIG90aGVyIHN1YnN0YW5jZXMgb2YgY29uY2Vybi4NCg0KDQpNb3JlIE5QUkkgZGF0YXNldHMgYW5kIG1hcHBpbmcgcHJvZHVjdHMgYXJlIGF2YWlsYWJsZSBoZXJlOiBodHRwczovL3d3dy5jYW5hZGEuY2EvZW4vZW52aXJvbm1lbnQtY2xpbWF0ZS1jaGFuZ2Uvc2VydmljZXMvbmF0aW9uYWwtcG9sbHV0YW50LXJlbGVhc2UtaW52ZW50b3J5L3Rvb2xzLXJlc291cmNlcy1kYXRhL2FjY2Vzcy5odG1sPC9kZXNjcmlwdGlvbj4NCiAgPC9kZXNjcmlwdGlvbnM+DQogIDxnZW9Mb2NhdGlvbnM+DQogICAgPGdlb0xvY2F0aW9uPg0KICAgICAgPGdlb0xvY2F0aW9uQm94Pi0xNTUuMzIxMjAxIDM5LjIyNjM1MSAtMzAuOTI5NTQ1IC0zMC45Mjk1NDU8L2dlb0xvY2F0aW9uQm94Pg0KICAgIDwvZ2VvTG9jYXRpb24+DQogIDwvZ2VvTG9jYXRpb25zPg0KPC9yZXNvdXJjZT4="},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/2bb38813-5cd0-40e9-a729-7c3ab460d2f5","type":"works","attributes":{"doi":"10.18164/2bb38813-5cd0-40e9-a729-7c3ab460d2f5","identifier":"https://doi.org/10.18164/2bb38813-5cd0-40e9-a729-7c3ab460d2f5","url":"http://data.ec.gc.ca/data/sites/scientificknowledge/land-cover-mapping-of-lake-brome-using-landsat-etm-and-radarsat-1-imagery-2007","author":[{"literal":"Matthieu Allard"}],"title":"Cartographie de l'occupation du sol du lac Brome à partir d'imagerie Landsat-ETM et RADARSAT-1, 2007","container-title":"Environment and Climate Change Canada","description":"Classification de l'occupation du sol à partir d'images multidates Landsat-ETM et Radarsat-1. La classification est basée sur la segmentation des images en objets avec l'utilisation du logiciel Definiens Earth (anciennement eCognition©). La classification orientée objet combine la logique floue basée sur des attributs spectraux, spatiaux et contextuels (fonctions statistiques d'appartenance) ainsi que l'identification manuelle des objets en dernier recours lorsque la classification automatique est moins performante pour certains objets. Les classes ciblées pour l'occupation du sol sont l'agriculture (annuelle et pérenne), le réseau routier (autoroute, route, chemin forestier), le réseau hydrographique (cours d'eau permanents et non permanents ainsi que les étangs non permanents sous couvert forestier), les terres humides, la trame urbaine et le milieu forestier. La classification multi-échelle du haut vers le bas, basée sur l'approche développée par le Service canadien de la faune de la région du Québec dans le cadre de l'Inventaire canadien des terres humides (ICTH) a été adaptée pour l'application à l'occupation du sol. Les détails méthodologiques de l'approche classification sont publiés dans Grenier et al. 2007.\n\nGrenier, M., Demers, A.-M., Labrecque, S., Benoit, M., Fournier R., and Drolet B. 2007. An object-oriented method to map wetland using RADARSAT-1 and Landsat-ETM images: test case on two sites in Quebec, Canada. Canadian Journal of Remote Sensing, Vol. 33, Suppl. 1, pp. S28-S45.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2018","registered":"2018-05-10T13:10:34Z","checked":null,"updated":"2018-05-10T13:10:34Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0LzJiYjM4ODEzLTVjZDAtNDBlOS1hNzI5LTdjM2FiNDYwZDJmNTwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPk1hdHRoaWV1IEFsbGFyZDwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5DYXJ0b2dyYXBoaWUgZGUgbCdvY2N1cGF0aW9uIGR1IHNvbCBkdSBsYWMgQnJvbWUgw6AgcGFydGlyIGQnaW1hZ2VyaWUgTGFuZHNhdC1FVE0gZXQgUkFEQVJTQVQtMSwgMjAwNzwvdGl0bGU+DQogIDwvdGl0bGVzPg0KICA8cHVibGlzaGVyPkVudmlyb25tZW50IGFuZCBDbGltYXRlIENoYW5nZSBDYW5hZGE8L3B1Ymxpc2hlcj4NCiAgPHB1YmxpY2F0aW9uWWVhcj4yMDE4PC9wdWJsaWNhdGlvblllYXI+DQogIDxzdWJqZWN0cz4NCiAgICA8c3ViamVjdD5PY2N1cGF0aW9uIGR1IHNvbDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5OYXR1cmUgZXQgYmlvZGl2ZXJzaXTDqSAtIGhhYml0YXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UXXDqWJlYyAoUUMpPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PsOJbMOpbWVudCBnw6lvZ3JhcGhpcXVlPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkxhbmRzYXQtRVRNPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlJBREFSU0FULTE8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+TGFjIEJyb21lPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkNsYXNzaWZpY2F0aW9uIGJhc8OpZSBvYmpldDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5Uw6lsw6lkw6l0ZWN0aW9uPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkfDqW9ncmFwaGllPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlN1cGVydmlzZXIgZXQgZ8OpcmVyIGwnw6l0YXQgZGVzIHNpdGVzPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkFwcHJvZm9uZGlyIGxlcyBjb25uYWlzc2FuY2VzIHNjaWVudGlmaXF1ZXMgZXQgZm9ybXVsZXIgZGUgbm91dmVsbGVzIG3DqXRob2RlcyBwb3VyIGfDqXJlciwgcHJvdMOpZ2VyIGV0IHLDqXRhYmxpciBsZXMgZXNww6hjZXM8L3N1YmplY3Q+DQogIDwvc3ViamVjdHM+DQogIDxsYW5ndWFnZT5lbmc8L2xhbmd1YWdlPg0KICA8cmVzb3VyY2VUeXBlIHJlc291cmNlVHlwZUdlbmVyYWw9IkRhdGFzZXQiPkRhdGFzZXQ8L3Jlc291cmNlVHlwZT4NCiAgPHZlcnNpb24+MTwvdmVyc2lvbj4NCiAgPHJpZ2h0c0xpc3Q+DQogICAgPHJpZ2h0cz5MaWNlbmNlIGR1IGdvdXZlcm5lbWVudCBvdXZlcnQgLSBDYW5hZGEgKGh0dHA6Ly9vdXZlcnQuY2FuYWRhLmNhL2ZyL2xpY2VuY2UtZHUtZ291dmVybmVtZW50LW91dmVydC1jYW5hZGEpPC9yaWdodHM+DQogIDwvcmlnaHRzTGlzdD4NCiAgPGRlc2NyaXB0aW9ucz4NCiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCI+Q2xhc3NpZmljYXRpb24gZGUgbCdvY2N1cGF0aW9uIGR1IHNvbCDDoCBwYXJ0aXIgZCdpbWFnZXMgbXVsdGlkYXRlcyBMYW5kc2F0LUVUTSBldCBSYWRhcnNhdC0xLiBMYSBjbGFzc2lmaWNhdGlvbiBlc3QgYmFzw6llIHN1ciBsYSBzZWdtZW50YXRpb24gZGVzIGltYWdlcyBlbiBvYmpldHMgYXZlYyBsJ3V0aWxpc2F0aW9uIGR1IGxvZ2ljaWVsIERlZmluaWVucyBFYXJ0aCAoYW5jaWVubmVtZW50IGVDb2duaXRpb27CqSkuIExhIGNsYXNzaWZpY2F0aW9uIG9yaWVudMOpZSBvYmpldCBjb21iaW5lIGxhIGxvZ2lxdWUgZmxvdWUgYmFzw6llIHN1ciBkZXMgYXR0cmlidXRzIHNwZWN0cmF1eCwgc3BhdGlhdXggZXQgY29udGV4dHVlbHMgKGZvbmN0aW9ucyBzdGF0aXN0aXF1ZXMgZCdhcHBhcnRlbmFuY2UpIGFpbnNpIHF1ZSBsJ2lkZW50aWZpY2F0aW9uIG1hbnVlbGxlIGRlcyBvYmpldHMgZW4gZGVybmllciByZWNvdXJzIGxvcnNxdWUgbGEgY2xhc3NpZmljYXRpb24gYXV0b21hdGlxdWUgZXN0IG1vaW5zIHBlcmZvcm1hbnRlIHBvdXIgY2VydGFpbnMgb2JqZXRzLiBMZXMgY2xhc3NlcyBjaWJsw6llcyBwb3VyIGwnb2NjdXBhdGlvbiBkdSBzb2wgc29udCBsJ2FncmljdWx0dXJlIChhbm51ZWxsZSBldCBww6lyZW5uZSksIGxlIHLDqXNlYXUgcm91dGllciAoYXV0b3JvdXRlLCByb3V0ZSwgY2hlbWluIGZvcmVzdGllciksIGxlIHLDqXNlYXUgaHlkcm9ncmFwaGlxdWUgKGNvdXJzIGQnZWF1IHBlcm1hbmVudHMgZXQgbm9uIHBlcm1hbmVudHMgYWluc2kgcXVlIGxlcyDDqXRhbmdzIG5vbiBwZXJtYW5lbnRzIHNvdXMgY291dmVydCBmb3Jlc3RpZXIpLCBsZXMgdGVycmVzIGh1bWlkZXMsIGxhIHRyYW1lIHVyYmFpbmUgZXQgbGUgbWlsaWV1IGZvcmVzdGllci4gTGEgY2xhc3NpZmljYXRpb24gbXVsdGktw6ljaGVsbGUgZHUgaGF1dCB2ZXJzIGxlIGJhcywgYmFzw6llIHN1ciBsJ2FwcHJvY2hlIGTDqXZlbG9wcMOpZSBwYXIgbGUgU2VydmljZSBjYW5hZGllbiBkZSBsYSBmYXVuZSBkZSBsYSByw6lnaW9uIGR1IFF1w6liZWMgZGFucyBsZSBjYWRyZSBkZSBsJ0ludmVudGFpcmUgY2FuYWRpZW4gZGVzIHRlcnJlcyBodW1pZGVzIChJQ1RIKSBhIMOpdMOpIGFkYXB0w6llIHBvdXIgbCdhcHBsaWNhdGlvbiDDoCBsJ29jY3VwYXRpb24gZHUgc29sLiBMZXMgZMOpdGFpbHMgbcOpdGhvZG9sb2dpcXVlcyBkZSBsJ2FwcHJvY2hlIGNsYXNzaWZpY2F0aW9uIHNvbnQgcHVibGnDqXMgZGFucyBHcmVuaWVyIGV0IGFsLiAyMDA3Lg0KDQpHcmVuaWVyLCBNLiwgRGVtZXJzLCBBLi1NLiwgTGFicmVjcXVlLCBTLiwgQmVub2l0LCBNLiwgRm91cm5pZXIgUi4sIGFuZCBEcm9sZXQgQi4gMjAwNy4gQW4gb2JqZWN0LW9yaWVudGVkIG1ldGhvZCB0byBtYXAgd2V0bGFuZCB1c2luZyBSQURBUlNBVC0xIGFuZCBMYW5kc2F0LUVUTSBpbWFnZXM6IHRlc3QgY2FzZSBvbiB0d28gc2l0ZXMgaW4gUXVlYmVjLCBDYW5hZGEuIENhbmFkaWFuIEpvdXJuYWwgb2YgUmVtb3RlIFNlbnNpbmcsIFZvbC4gMzMsIFN1cHBsLiAxLCBwcC4gUzI4LVM0NS48L2Rlc2NyaXB0aW9uPg0KICA8L2Rlc2NyaXB0aW9ucz4NCiAgPGdlb0xvY2F0aW9ucz4NCiAgICA8Z2VvTG9jYXRpb24+DQogICAgICA8Z2VvTG9jYXRpb25Cb3g+LTcyLjc4MzA2ODEzMzg3NDI0IDQ1LjE2OTkzMTI3Mzg5NDQ4NCAtNzIuMjM1Mjc2ODQ2Mjc1NTggLTcyLjIzNTI3Njg0NjI3NTU4PC9nZW9Mb2NhdGlvbkJveD4NCiAgICA8L2dlb0xvY2F0aW9uPg0KICA8L2dlb0xvY2F0aW9ucz4NCjwvcmVzb3VyY2U+"},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/54703bc5-a2da-475b-a815-8f644499a322","type":"works","attributes":{"doi":"10.18164/54703bc5-a2da-475b-a815-8f644499a322","identifier":"https://doi.org/10.18164/54703bc5-a2da-475b-a815-8f644499a322","url":"http://data.ec.gc.ca/data/sites/plansreports/conservation-atlas-of-woodlands-in-agricultural-landscape","author":[{"literal":"Martine Benoit"},{"literal":"Renée Langevin"}],"title":"Atlas de conservation des boisés en paysage agricole","container-title":"Environment and Climate Change Canada","description":"L'agriculture très diversifiée qui se pratiquait jadis au Québec a été graduellement remplacée par des pratiques agricoles plus spécialisées visant une production à grande échelle. Ces changements ont provoqué la disparition d’une proportion très importante des boisés présents sur les fermes dans le sud du Québec.\n\nOn constate de plus en plus aujourd'hui que ceux-ci remplissaient plusieurs fonctions écologiques et agronomiques importantes pour l'écosystème et qu'ils assuraient la conservation des espèces indigènes animales et végétales en paysage agricole. Il est donc crucial maintenant de favoriser la conservation des îlots boisés toujours présents, tout particulièrement dans les secteurs du Québec où l'agriculture a été intensive au cours des dernières décennies. \n\nConscient des enjeux actuels du maintien de la biodiversité dans ces agro-écosystèmes, le Service canadien de la faune d'Environnement Canada a élaboré au cours des dernières années, un Atlas de conservation des boisés en paysage agricole (Atlas) qui vise en tout premier lieu, à dresser un portrait de la situation des boisés et de la fragmentation forestière dans le sud du Québec. De plus, en se basant sur les connaissances acquises sur l'utilisation de ce type d'habitat par les oiseaux, un groupe dont plusieurs espèces sont très vulnérables à la fragmentation du paysage, l'Atlas se veut, en complément des informations déjà disponibles sur la présence de certaines espèces fauniques ou floristiques, un outil d'aide à la décision pour les gestionnaires du territoire et les groupes de conservation.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2015","registered":"2018-05-10T13:10:43Z","checked":null,"updated":"2018-05-10T13:10:43Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0LzU0NzAzYmM1LWEyZGEtNDc1Yi1hODE1LThmNjQ0NDk5YTMyMjwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPk1hcnRpbmUgQmVub2l0PC9jcmVhdG9yTmFtZT4NCiAgICA8L2NyZWF0b3I+DQogICAgPGNyZWF0b3I+DQogICAgICA8Y3JlYXRvck5hbWU+UmVuw6llIExhbmdldmluPC9jcmVhdG9yTmFtZT4NCiAgICA8L2NyZWF0b3I+DQogIDwvY3JlYXRvcnM+DQogIDx0aXRsZXM+DQogICAgPHRpdGxlPkF0bGFzIGRlIGNvbnNlcnZhdGlvbiBkZXMgYm9pc8OpcyBlbiBwYXlzYWdlIGFncmljb2xlPC90aXRsZT4NCiAgPC90aXRsZXM+DQogIDxwdWJsaXNoZXI+RW52aXJvbm1lbnQgYW5kIENsaW1hdGUgQ2hhbmdlIENhbmFkYTwvcHVibGlzaGVyPg0KICA8cHVibGljYXRpb25ZZWFyPjIwMTU8L3B1YmxpY2F0aW9uWWVhcj4NCiAgPHN1YmplY3RzPg0KICAgIDxzdWJqZWN0Pk5hdHVyZSBldCBiaW9kaXZlcnNpdMOpIC0gaGFiaXRhdDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5RdcOpYmVjIChRQyk8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UGF5c2FnZSBhZ3JpY29sZTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5Cb2lzw6k8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+U3VkIGR1IFF1w6liZWM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+RnJhZ21lbnRhdGlvbjwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5TdXBlcnZpc2VyIGV0IGfDqXJlciBsJ8OpdGF0IGRlcyBzaXRlczwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5QbGFucyBldCByYXBwb3J0cyBjb25jZXJuYW50IGwnw6l0YXQgZGVzIHNpdGVzPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkhhYml0YXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+Rm9yw6p0PC9zdWJqZWN0Pg0KICA8L3N1YmplY3RzPg0KICA8bGFuZ3VhZ2U+ZW5nPC9sYW5ndWFnZT4NCiAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ij5EYXRhc2V0PC9yZXNvdXJjZVR5cGU+DQogIDx2ZXJzaW9uPjE8L3ZlcnNpb24+DQogIDxyaWdodHNMaXN0Pg0KICAgIDxyaWdodHM+TGljZW5jZSBkdSBnb3V2ZXJuZW1lbnQgb3V2ZXJ0IC0gQ2FuYWRhIChodHRwOi8vb3V2ZXJ0LmNhbmFkYS5jYS9mci9saWNlbmNlLWR1LWdvdXZlcm5lbWVudC1vdXZlcnQtY2FuYWRhKTwvcmlnaHRzPg0KICA8L3JpZ2h0c0xpc3Q+DQogIDxkZXNjcmlwdGlvbnM+DQogICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiPkwnYWdyaWN1bHR1cmUgdHLDqHMgZGl2ZXJzaWZpw6llIHF1aSBzZSBwcmF0aXF1YWl0IGphZGlzIGF1IFF1w6liZWMgYSDDqXTDqSBncmFkdWVsbGVtZW50IHJlbXBsYWPDqWUgcGFyIGRlcyBwcmF0aXF1ZXMgYWdyaWNvbGVzIHBsdXMgc3DDqWNpYWxpc8OpZXMgdmlzYW50IHVuZSBwcm9kdWN0aW9uIMOgIGdyYW5kZSDDqWNoZWxsZS4gQ2VzIGNoYW5nZW1lbnRzIG9udCBwcm92b3F1w6kgbGEgZGlzcGFyaXRpb24gZOKAmXVuZSBwcm9wb3J0aW9uIHRyw6hzIGltcG9ydGFudGUgZGVzIGJvaXPDqXMgcHLDqXNlbnRzIHN1ciBsZXMgZmVybWVzIGRhbnMgbGUgc3VkIGR1IFF1w6liZWMuDQoNCk9uIGNvbnN0YXRlIGRlIHBsdXMgZW4gcGx1cyBhdWpvdXJkJ2h1aSBxdWUgY2V1eC1jaSByZW1wbGlzc2FpZW50IHBsdXNpZXVycyBmb25jdGlvbnMgw6ljb2xvZ2lxdWVzIGV0IGFncm9ub21pcXVlcyBpbXBvcnRhbnRlcyBwb3VyIGwnw6ljb3N5c3TDqG1lIGV0IHF1J2lscyBhc3N1cmFpZW50IGxhIGNvbnNlcnZhdGlvbiBkZXMgZXNww6hjZXMgaW5kaWfDqG5lcyBhbmltYWxlcyBldCB2w6lnw6l0YWxlcyBlbiBwYXlzYWdlIGFncmljb2xlLiBJbCBlc3QgZG9uYyBjcnVjaWFsIG1haW50ZW5hbnQgZGUgZmF2b3Jpc2VyIGxhIGNvbnNlcnZhdGlvbiBkZXMgw65sb3RzIGJvaXPDqXMgdG91am91cnMgcHLDqXNlbnRzLCB0b3V0IHBhcnRpY3VsacOocmVtZW50IGRhbnMgbGVzIHNlY3RldXJzIGR1IFF1w6liZWMgb8O5IGwnYWdyaWN1bHR1cmUgYSDDqXTDqSBpbnRlbnNpdmUgYXUgY291cnMgZGVzIGRlcm5pw6hyZXMgZMOpY2Vubmllcy4gDQoNCkNvbnNjaWVudCBkZXMgZW5qZXV4IGFjdHVlbHMgZHUgbWFpbnRpZW4gZGUgbGEgYmlvZGl2ZXJzaXTDqSBkYW5zIGNlcyBhZ3JvLcOpY29zeXN0w6htZXMsIGxlIFNlcnZpY2UgY2FuYWRpZW4gZGUgbGEgZmF1bmUgZCdFbnZpcm9ubmVtZW50IENhbmFkYSBhIMOpbGFib3LDqSBhdSBjb3VycyBkZXMgZGVybmnDqHJlcyBhbm7DqWVzLCB1biBBdGxhcyBkZSBjb25zZXJ2YXRpb24gZGVzIGJvaXPDqXMgZW4gcGF5c2FnZSBhZ3JpY29sZSAoQXRsYXMpIHF1aSB2aXNlIGVuIHRvdXQgcHJlbWllciBsaWV1LCDDoCBkcmVzc2VyIHVuIHBvcnRyYWl0IGRlIGxhIHNpdHVhdGlvbiBkZXMgYm9pc8OpcyBldCBkZSBsYSBmcmFnbWVudGF0aW9uIGZvcmVzdGnDqHJlIGRhbnMgbGUgc3VkIGR1IFF1w6liZWMuIERlIHBsdXMsIGVuIHNlIGJhc2FudCBzdXIgbGVzIGNvbm5haXNzYW5jZXMgYWNxdWlzZXMgc3VyIGwndXRpbGlzYXRpb24gZGUgY2UgdHlwZSBkJ2hhYml0YXQgcGFyIGxlcyBvaXNlYXV4LCB1biBncm91cGUgZG9udCBwbHVzaWV1cnMgZXNww6hjZXMgc29udCB0csOocyB2dWxuw6lyYWJsZXMgw6AgbGEgZnJhZ21lbnRhdGlvbiBkdSBwYXlzYWdlLCBsJ0F0bGFzIHNlIHZldXQsIGVuIGNvbXBsw6ltZW50IGRlcyBpbmZvcm1hdGlvbnMgZMOpasOgIGRpc3BvbmlibGVzIHN1ciBsYSBwcsOpc2VuY2UgZGUgY2VydGFpbmVzIGVzcMOoY2VzIGZhdW5pcXVlcyBvdSBmbG9yaXN0aXF1ZXMsIHVuIG91dGlsIGQnYWlkZSDDoCBsYSBkw6ljaXNpb24gcG91ciBsZXMgZ2VzdGlvbm5haXJlcyBkdSB0ZXJyaXRvaXJlIGV0IGxlcyBncm91cGVzIGRlIGNvbnNlcnZhdGlvbi48L2Rlc2NyaXB0aW9uPg0KICA8L2Rlc2NyaXB0aW9ucz4NCiAgPGdlb0xvY2F0aW9ucz4NCiAgICA8Z2VvTG9jYXRpb24+DQogICAgICA8Z2VvTG9jYXRpb25Cb3g+LTc2LjAxNzE0MDczMjQ5NjM0IDQ0LjgyMDQzNjg4NDM3MjI5IC02OC45NTUzNzgzODAxODYwMiAtNjguOTU1Mzc4MzgwMTg2MDI8L2dlb0xvY2F0aW9uQm94Pg0KICAgIDwvZ2VvTG9jYXRpb24+DQogIDwvZ2VvTG9jYXRpb25zPg0KPC9yZXNvdXJjZT4="},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/632b3d23-8440-4d77-9769-62770ad22dc1","type":"works","attributes":{"doi":"10.18164/632b3d23-8440-4d77-9769-62770ad22dc1","identifier":"https://doi.org/10.18164/632b3d23-8440-4d77-9769-62770ad22dc1","url":"http://data.ec.gc.ca/data/sites/systems/canadian-wetland-inventory-cwi-montmagny-region","author":[{"literal":"Matthieu Allard"}],"title":"Inventaire canadien des terres humides (ICTH) ; Région de Montmagny","container-title":"Environment and Climate Change Canada","description":"Données de l'Inventaire canadien des terres humides (ICTH) pour la région de Montmagny et créées selon la méthode développée par le Service canadien de la faune - région du Québec.\n\nLe Service canadien de la faune d’Environnement Canada, région du Québec (SCF-Qc) a produit entre 2003 et 2007 la cartographie des milieux humides pour plusieurs sites au Québec.  Ces cartographies ont été réalisées dans le cadre de l’Inventaire canadien des terres humides (ICTH) initié en 2002, visant la classification des cinq grandes classes de milieux humides selon le Système de canadien de classification des milieux humides, soit bog, fen, marais, marécage et eau peu profonde.  L’approche choisie combine l’utilisation des images satellites Landsat-TM/ETM et RADARSAT-1 ainsi que la classification d’images basée sur les objets.\n\nLes sites qui ont été cartographiés sont répartis dans plusieurs écozones et représentent différents types de paysages et d’écosystèmes.  Ces sites sont le lac Saint-Pierre, le lac Brome, la Montérégie, le lac Saint-François (Appalaches), la Grande-Plée-Bleue, Montmagny, le cap Tourmente, la baie de l’Isle-Verte, le parc national de la Mauricie, les Iles-de-la-Madeleine, Radisson et Eastmain.  La superficie couverte par les douze sites est de 4 % du territoire québécois.  De plus, la méthode a été testé pour un site en Colombie-Britannique (Vancouver) ainsi qu'aux Territoires du Nord-Ouest (Kendall Island).\n\nAu total pour les douze sites, 8 % du territoire est couvert par les milieux humides.  Le pourcentage pour chacun des sites varie entre 2 % et 15 %.  La validation des classifications a été faite selon une méthode développée par le SCF-Qc basée sur l’interprétation visuelle des composés colorés Landsat.  La validation a été faite sur deux niveaux, soit entre le milieu humide par rapport au milieu sec, et soit entre les cinq types de milieux humides.  L’exactitude globale pour le premier niveau de validation varie entre 61 et 91 %, et entre 47 et 98 % pour le deuxième niveau.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2015","registered":"2018-05-10T13:11:03Z","checked":null,"updated":"2018-05-10T13:11:03Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0LzYzMmIzZDIzLTg0NDAtNGQ3Ny05NzY5LTYyNzcwYWQyMmRjMTwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPk1hdHRoaWV1IEFsbGFyZDwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5JbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgOyBSw6lnaW9uIGRlIE1vbnRtYWdueTwvdGl0bGU+DQogIDwvdGl0bGVzPg0KICA8cHVibGlzaGVyPkVudmlyb25tZW50IGFuZCBDbGltYXRlIENoYW5nZSBDYW5hZGE8L3B1Ymxpc2hlcj4NCiAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+DQogIDxzdWJqZWN0cz4NCiAgICA8c3ViamVjdD5NaWxpZXUgaHVtaWRlPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0Pk5hdHVyZSBldCBiaW9kaXZlcnNpdMOpIC0gaGFiaXRhdDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5RdcOpYmVjIChRQyk8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UXXDqWJlYzwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5Nb250bWFnbnk8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+SXNsZS1hdXgtR3J1ZXM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+Q2xhc3NpZmljYXRpb24gb3JpZW50w6llIG9iamV0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkxhbmRzYXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UmFkYXJzYXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+T2NjdXBhdGlvbiBkdSBzb2w8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+SGFiaXRhdDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5TdXBlcnZpc2VyIGV0IGfDqXJlciBsJ8OpdGF0IGRlcyBzaXRlczwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5TeXN0w6htZXMgZCdpbmZvcm1hdGlvbiBzdXIgIGwnw6l0YXQgZGVzIHNpdGVzPC9zdWJqZWN0Pg0KICA8L3N1YmplY3RzPg0KICA8bGFuZ3VhZ2U+ZW5nPC9sYW5ndWFnZT4NCiAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ij5EYXRhc2V0PC9yZXNvdXJjZVR5cGU+DQogIDx2ZXJzaW9uPjE8L3ZlcnNpb24+DQogIDxyaWdodHNMaXN0Pg0KICAgIDxyaWdodHM+TGljZW5jZSBkdSBnb3V2ZXJuZW1lbnQgb3V2ZXJ0IC0gQ2FuYWRhIChodHRwOi8vb3V2ZXJ0LmNhbmFkYS5jYS9mci9saWNlbmNlLWR1LWdvdXZlcm5lbWVudC1vdXZlcnQtY2FuYWRhKTwvcmlnaHRzPg0KICA8L3JpZ2h0c0xpc3Q+DQogIDxkZXNjcmlwdGlvbnM+DQogICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiPkRvbm7DqWVzIGRlIGwnSW52ZW50YWlyZSBjYW5hZGllbiBkZXMgdGVycmVzIGh1bWlkZXMgKElDVEgpIHBvdXIgbGEgcsOpZ2lvbiBkZSBNb250bWFnbnkgZXQgY3LDqcOpZXMgc2Vsb24gbGEgbcOpdGhvZGUgZMOpdmVsb3Bww6llIHBhciBsZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIC0gcsOpZ2lvbiBkdSBRdcOpYmVjLg0KDQpMZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIGTigJlFbnZpcm9ubmVtZW50IENhbmFkYSwgcsOpZ2lvbiBkdSBRdcOpYmVjIChTQ0YtUWMpIGEgcHJvZHVpdCBlbnRyZSAyMDAzIGV0IDIwMDcgbGEgY2FydG9ncmFwaGllIGRlcyBtaWxpZXV4IGh1bWlkZXMgcG91ciBwbHVzaWV1cnMgc2l0ZXMgYXUgUXXDqWJlYy4gIENlcyBjYXJ0b2dyYXBoaWVzIG9udCDDqXTDqSByw6lhbGlzw6llcyBkYW5zIGxlIGNhZHJlIGRlIGzigJlJbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgaW5pdGnDqSBlbiAyMDAyLCB2aXNhbnQgbGEgY2xhc3NpZmljYXRpb24gZGVzIGNpbnEgZ3JhbmRlcyBjbGFzc2VzIGRlIG1pbGlldXggaHVtaWRlcyBzZWxvbiBsZSBTeXN0w6htZSBkZSBjYW5hZGllbiBkZSBjbGFzc2lmaWNhdGlvbiBkZXMgbWlsaWV1eCBodW1pZGVzLCBzb2l0IGJvZywgZmVuLCBtYXJhaXMsIG1hcsOpY2FnZSBldCBlYXUgcGV1IHByb2ZvbmRlLiAgTOKAmWFwcHJvY2hlIGNob2lzaWUgY29tYmluZSBs4oCZdXRpbGlzYXRpb24gZGVzIGltYWdlcyBzYXRlbGxpdGVzIExhbmRzYXQtVE0vRVRNIGV0IFJBREFSU0FULTEgYWluc2kgcXVlIGxhIGNsYXNzaWZpY2F0aW9uIGTigJlpbWFnZXMgYmFzw6llIHN1ciBsZXMgb2JqZXRzLg0KDQpMZXMgc2l0ZXMgcXVpIG9udCDDqXTDqSBjYXJ0b2dyYXBoacOpcyBzb250IHLDqXBhcnRpcyBkYW5zIHBsdXNpZXVycyDDqWNvem9uZXMgZXQgcmVwcsOpc2VudGVudCBkaWZmw6lyZW50cyB0eXBlcyBkZSBwYXlzYWdlcyBldCBk4oCZw6ljb3N5c3TDqG1lcy4gIENlcyBzaXRlcyBzb250IGxlIGxhYyBTYWludC1QaWVycmUsIGxlIGxhYyBCcm9tZSwgbGEgTW9udMOpcsOpZ2llLCBsZSBsYWMgU2FpbnQtRnJhbsOnb2lzIChBcHBhbGFjaGVzKSwgbGEgR3JhbmRlLVBsw6llLUJsZXVlLCBNb250bWFnbnksIGxlIGNhcCBUb3VybWVudGUsIGxhIGJhaWUgZGUgbOKAmUlzbGUtVmVydGUsIGxlIHBhcmMgbmF0aW9uYWwgZGUgbGEgTWF1cmljaWUsIGxlcyBJbGVzLWRlLWxhLU1hZGVsZWluZSwgUmFkaXNzb24gZXQgRWFzdG1haW4uICBMYSBzdXBlcmZpY2llIGNvdXZlcnRlIHBhciBsZXMgZG91emUgc2l0ZXMgZXN0IGRlIDQgJSBkdSB0ZXJyaXRvaXJlIHF1w6liw6ljb2lzLiAgRGUgcGx1cywgbGEgbcOpdGhvZGUgYSDDqXTDqSB0ZXN0w6kgcG91ciB1biBzaXRlIGVuIENvbG9tYmllLUJyaXRhbm5pcXVlIChWYW5jb3V2ZXIpIGFpbnNpIHF1J2F1eCBUZXJyaXRvaXJlcyBkdSBOb3JkLU91ZXN0IChLZW5kYWxsIElzbGFuZCkuDQoNCkF1IHRvdGFsIHBvdXIgbGVzIGRvdXplIHNpdGVzLCA4ICUgZHUgdGVycml0b2lyZSBlc3QgY291dmVydCBwYXIgbGVzIG1pbGlldXggaHVtaWRlcy4gIExlIHBvdXJjZW50YWdlIHBvdXIgY2hhY3VuIGRlcyBzaXRlcyB2YXJpZSBlbnRyZSAyICUgZXQgMTUgJS4gIExhIHZhbGlkYXRpb24gZGVzIGNsYXNzaWZpY2F0aW9ucyBhIMOpdMOpIGZhaXRlIHNlbG9uIHVuZSBtw6l0aG9kZSBkw6l2ZWxvcHDDqWUgcGFyIGxlIFNDRi1RYyBiYXPDqWUgc3VyIGzigJlpbnRlcnByw6l0YXRpb24gdmlzdWVsbGUgZGVzIGNvbXBvc8OpcyBjb2xvcsOpcyBMYW5kc2F0LiAgTGEgdmFsaWRhdGlvbiBhIMOpdMOpIGZhaXRlIHN1ciBkZXV4IG5pdmVhdXgsIHNvaXQgZW50cmUgbGUgbWlsaWV1IGh1bWlkZSBwYXIgcmFwcG9ydCBhdSBtaWxpZXUgc2VjLCBldCBzb2l0IGVudHJlIGxlcyBjaW5xIHR5cGVzIGRlIG1pbGlldXggaHVtaWRlcy4gIEzigJlleGFjdGl0dWRlIGdsb2JhbGUgcG91ciBsZSBwcmVtaWVyIG5pdmVhdSBkZSB2YWxpZGF0aW9uIHZhcmllIGVudHJlIDYxIGV0IDkxICUsIGV0IGVudHJlIDQ3IGV0IDk4ICUgcG91ciBsZSBkZXV4acOobWUgbml2ZWF1LjwvZGVzY3JpcHRpb24+DQogIDwvZGVzY3JpcHRpb25zPg0KICA8Z2VvTG9jYXRpb25zPg0KICAgIDxnZW9Mb2NhdGlvbj4NCiAgICAgIDxnZW9Mb2NhdGlvbkJveD4tNzAuNjUzNzcgNDYuODczIC03MC4zMSAtNzAuMzE8L2dlb0xvY2F0aW9uQm94Pg0KICAgIDwvZ2VvTG9jYXRpb24+DQogIDwvZ2VvTG9jYXRpb25zPg0KPC9yZXNvdXJjZT4="},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/58a1a991-2995-4cd7-ab5b-cc15d5e9f945","type":"works","attributes":{"doi":"10.18164/58a1a991-2995-4cd7-ab5b-cc15d5e9f945","identifier":"https://doi.org/10.18164/58a1a991-2995-4cd7-ab5b-cc15d5e9f945","url":"http://data.ec.gc.ca/data/sites/systems/canadian-wetland-inventory-cwi-mont-r-gie","author":[{"literal":"Matthieu Allard"}],"title":"Inventaire canadien des terres humides (ICTH) ; Montérégie","container-title":"Environment and Climate Change Canada","description":"Données de l'Inventaire canadien des terres humides (ICTH) pour la Montérégie et créées selon la méthode développée par le Service canadien de la faune - région du Québec.\n\nLe Service canadien de la faune d’Environnement Canada, région du Québec (SCF-Qc) a produit entre 2003 et 2007 la cartographie des milieux humides pour plusieurs sites au Québec.  Ces cartographies ont été réalisées dans le cadre de l’Inventaire canadien des terres humides (ICTH) initié en 2002, visant la classification des cinq grandes classes de milieux humides selon le Système de canadien de classification des milieux humides, soit bog, fen, marais, marécage et eau peu profonde.  L’approche choisie combine l’utilisation des images satellites Landsat-TM/ETM et RADARSAT-1 ainsi que la classification d’images basée sur les objets.\n\nLes sites qui ont été cartographiés sont répartis dans plusieurs écozones et représentent différents types de paysages et d’écosystèmes.  Ces sites sont le lac Saint-Pierre, le lac Brome, la Montérégie, le lac Saint-François (Appalaches), la Grande-Plée-Bleue, Montmagny, le cap Tourmente, la baie de l’Isle-Verte, le parc national de la Mauricie, les Iles-de-la-Madeleine, Radisson et Eastmain.  La superficie couverte par les douze sites est de 4 % du territoire québécois.  De plus, la méthode a été testé pour un site en Colombie-Britannique (Vancouver) ainsi qu'aux Territoires du Nord-Ouest (Kendall Island).\n\nAu total pour les douze sites, 8 % du territoire est couvert par les milieux humides.  Le pourcentage pour chacun des sites varie entre 2 % et 15 %.  La validation des classifications a été faite selon une méthode développée par le SCF-Qc basée sur l’interprétation visuelle des composés colorés Landsat.  La validation a été faite sur deux niveaux, soit entre le milieu humide par rapport au milieu sec, et soit entre les cinq types de milieux humides.  L’exactitude globale pour le premier niveau de validation varie entre 61 et 91 %, et entre 47 et 98 % pour le deuxième niveau.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2015","registered":"2018-05-10T13:11:23Z","checked":null,"updated":"2018-05-10T13:11:23Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0LzU4YTFhOTkxLTI5OTUtNGNkNy1hYjViLWNjMTVkNWU5Zjk0NTwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPk1hdHRoaWV1IEFsbGFyZDwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5JbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgOyBNb250w6lyw6lnaWU8L3RpdGxlPg0KICA8L3RpdGxlcz4NCiAgPHB1Ymxpc2hlcj5FbnZpcm9ubWVudCBhbmQgQ2xpbWF0ZSBDaGFuZ2UgQ2FuYWRhPC9wdWJsaXNoZXI+DQogIDxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPg0KICA8c3ViamVjdHM+DQogICAgPHN1YmplY3Q+TWlsaWV1IGh1bWlkZTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5OYXR1cmUgZXQgYmlvZGl2ZXJzaXTDqSAtIGhhYml0YXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UXXDqWJlYyAoUUMpPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlF1w6liZWM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+TW9udMOpcsOpZ2llPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkNsYXNzaWZpY2F0aW9uIG9yaWVudMOpZSBvYmpldDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5MYW5kc2F0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlJhZGFyc2F0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0Pk9jY3VwYXRpb24gZHUgc29sPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkhhYml0YXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+U3VwZXJ2aXNlciBldCBnw6lyZXIgbCfDqXRhdCBkZXMgc2l0ZXM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+U3lzdMOobWVzIGQnaW5mb3JtYXRpb24gc3VyICBsJ8OpdGF0IGRlcyBzaXRlczwvc3ViamVjdD4NCiAgPC9zdWJqZWN0cz4NCiAgPGxhbmd1YWdlPmVuZzwvbGFuZ3VhZ2U+DQogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YXNldDwvcmVzb3VyY2VUeXBlPg0KICA8dmVyc2lvbj4xPC92ZXJzaW9uPg0KICA8cmlnaHRzTGlzdD4NCiAgICA8cmlnaHRzPkxpY2VuY2UgZHUgZ291dmVybmVtZW50IG91dmVydCAtIENhbmFkYSAoaHR0cDovL291dmVydC5jYW5hZGEuY2EvZnIvbGljZW5jZS1kdS1nb3V2ZXJuZW1lbnQtb3V2ZXJ0LWNhbmFkYSk8L3JpZ2h0cz4NCiAgPC9yaWdodHNMaXN0Pg0KICA8ZGVzY3JpcHRpb25zPg0KICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0Ij5Eb25uw6llcyBkZSBsJ0ludmVudGFpcmUgY2FuYWRpZW4gZGVzIHRlcnJlcyBodW1pZGVzIChJQ1RIKSBwb3VyIGxhIE1vbnTDqXLDqWdpZSBldCBjcsOpw6llcyBzZWxvbiBsYSBtw6l0aG9kZSBkw6l2ZWxvcHDDqWUgcGFyIGxlIFNlcnZpY2UgY2FuYWRpZW4gZGUgbGEgZmF1bmUgLSByw6lnaW9uIGR1IFF1w6liZWMuDQoNCkxlIFNlcnZpY2UgY2FuYWRpZW4gZGUgbGEgZmF1bmUgZOKAmUVudmlyb25uZW1lbnQgQ2FuYWRhLCByw6lnaW9uIGR1IFF1w6liZWMgKFNDRi1RYykgYSBwcm9kdWl0IGVudHJlIDIwMDMgZXQgMjAwNyBsYSBjYXJ0b2dyYXBoaWUgZGVzIG1pbGlldXggaHVtaWRlcyBwb3VyIHBsdXNpZXVycyBzaXRlcyBhdSBRdcOpYmVjLiAgQ2VzIGNhcnRvZ3JhcGhpZXMgb250IMOpdMOpIHLDqWFsaXPDqWVzIGRhbnMgbGUgY2FkcmUgZGUgbOKAmUludmVudGFpcmUgY2FuYWRpZW4gZGVzIHRlcnJlcyBodW1pZGVzIChJQ1RIKSBpbml0acOpIGVuIDIwMDIsIHZpc2FudCBsYSBjbGFzc2lmaWNhdGlvbiBkZXMgY2lucSBncmFuZGVzIGNsYXNzZXMgZGUgbWlsaWV1eCBodW1pZGVzIHNlbG9uIGxlIFN5c3TDqG1lIGRlIGNhbmFkaWVuIGRlIGNsYXNzaWZpY2F0aW9uIGRlcyBtaWxpZXV4IGh1bWlkZXMsIHNvaXQgYm9nLCBmZW4sIG1hcmFpcywgbWFyw6ljYWdlIGV0IGVhdSBwZXUgcHJvZm9uZGUuICBM4oCZYXBwcm9jaGUgY2hvaXNpZSBjb21iaW5lIGzigJl1dGlsaXNhdGlvbiBkZXMgaW1hZ2VzIHNhdGVsbGl0ZXMgTGFuZHNhdC1UTS9FVE0gZXQgUkFEQVJTQVQtMSBhaW5zaSBxdWUgbGEgY2xhc3NpZmljYXRpb24gZOKAmWltYWdlcyBiYXPDqWUgc3VyIGxlcyBvYmpldHMuDQoNCkxlcyBzaXRlcyBxdWkgb250IMOpdMOpIGNhcnRvZ3JhcGhpw6lzIHNvbnQgcsOpcGFydGlzIGRhbnMgcGx1c2lldXJzIMOpY296b25lcyBldCByZXByw6lzZW50ZW50IGRpZmbDqXJlbnRzIHR5cGVzIGRlIHBheXNhZ2VzIGV0IGTigJnDqWNvc3lzdMOobWVzLiAgQ2VzIHNpdGVzIHNvbnQgbGUgbGFjIFNhaW50LVBpZXJyZSwgbGUgbGFjIEJyb21lLCBsYSBNb250w6lyw6lnaWUsIGxlIGxhYyBTYWludC1GcmFuw6dvaXMgKEFwcGFsYWNoZXMpLCBsYSBHcmFuZGUtUGzDqWUtQmxldWUsIE1vbnRtYWdueSwgbGUgY2FwIFRvdXJtZW50ZSwgbGEgYmFpZSBkZSBs4oCZSXNsZS1WZXJ0ZSwgbGUgcGFyYyBuYXRpb25hbCBkZSBsYSBNYXVyaWNpZSwgbGVzIElsZXMtZGUtbGEtTWFkZWxlaW5lLCBSYWRpc3NvbiBldCBFYXN0bWFpbi4gIExhIHN1cGVyZmljaWUgY291dmVydGUgcGFyIGxlcyBkb3V6ZSBzaXRlcyBlc3QgZGUgNCAlIGR1IHRlcnJpdG9pcmUgcXXDqWLDqWNvaXMuICBEZSBwbHVzLCBsYSBtw6l0aG9kZSBhIMOpdMOpIHRlc3TDqSBwb3VyIHVuIHNpdGUgZW4gQ29sb21iaWUtQnJpdGFubmlxdWUgKFZhbmNvdXZlcikgYWluc2kgcXUnYXV4IFRlcnJpdG9pcmVzIGR1IE5vcmQtT3Vlc3QgKEtlbmRhbGwgSXNsYW5kKS4NCg0KQXUgdG90YWwgcG91ciBsZXMgZG91emUgc2l0ZXMsIDggJSBkdSB0ZXJyaXRvaXJlIGVzdCBjb3V2ZXJ0IHBhciBsZXMgbWlsaWV1eCBodW1pZGVzLiAgTGUgcG91cmNlbnRhZ2UgcG91ciBjaGFjdW4gZGVzIHNpdGVzIHZhcmllIGVudHJlIDIgJSBldCAxNSAlLiAgTGEgdmFsaWRhdGlvbiBkZXMgY2xhc3NpZmljYXRpb25zIGEgw6l0w6kgZmFpdGUgc2Vsb24gdW5lIG3DqXRob2RlIGTDqXZlbG9wcMOpZSBwYXIgbGUgU0NGLVFjIGJhc8OpZSBzdXIgbOKAmWludGVycHLDqXRhdGlvbiB2aXN1ZWxsZSBkZXMgY29tcG9zw6lzIGNvbG9yw6lzIExhbmRzYXQuICBMYSB2YWxpZGF0aW9uIGEgw6l0w6kgZmFpdGUgc3VyIGRldXggbml2ZWF1eCwgc29pdCBlbnRyZSBsZSBtaWxpZXUgaHVtaWRlIHBhciByYXBwb3J0IGF1IG1pbGlldSBzZWMsIGV0IHNvaXQgZW50cmUgbGVzIGNpbnEgdHlwZXMgZGUgbWlsaWV1eCBodW1pZGVzLiAgTOKAmWV4YWN0aXR1ZGUgZ2xvYmFsZSBwb3VyIGxlIHByZW1pZXIgbml2ZWF1IGRlIHZhbGlkYXRpb24gdmFyaWUgZW50cmUgNjEgZXQgOTEgJSwgZXQgZW50cmUgNDcgZXQgOTggJSBwb3VyIGxlIGRldXhpw6htZSBuaXZlYXUuPC9kZXNjcmlwdGlvbj4NCiAgPC9kZXNjcmlwdGlvbnM+DQogIDxnZW9Mb2NhdGlvbnM+DQogICAgPGdlb0xvY2F0aW9uPg0KICAgICAgPGdlb0xvY2F0aW9uQm94Pi03NC42ODMxIDQ1LjAwOTY0IC03Mi4zNjg5IC03Mi4zNjg5PC9nZW9Mb2NhdGlvbkJveD4NCiAgICA8L2dlb0xvY2F0aW9uPg0KICA8L2dlb0xvY2F0aW9ucz4NCjwvcmVzb3VyY2U+"},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/2b404cf7-e1c0-4675-8714-96508cf78e9c","type":"works","attributes":{"doi":"10.18164/2b404cf7-e1c0-4675-8714-96508cf78e9c","identifier":"https://doi.org/10.18164/2b404cf7-e1c0-4675-8714-96508cf78e9c","url":"http://data.ec.gc.ca/data/sites/systems/canadian-wetland-inventory-cwi-baie-de-l-isle-verte-region","author":[{"literal":"Matthieu Allard"}],"title":"Inventaire canadien des terres humides (ICTH) ; Région de la Baie de l'Isle-Verte","container-title":"Environment and Climate Change Canada","description":"Données de l'Inventaire canadien des terres humides (ICTH) pour la région de Baie de l'Isle-Verte et créées selon la méthode développée par le Service canadien de la faune - région du Québec.\n\nLe Service canadien de la faune d’Environnement Canada, région du Québec (SCF-Qc) a produit entre 2003 et 2007 la cartographie des milieux humides pour plusieurs sites au Québec.  Ces cartographies ont été réalisées dans le cadre de l’Inventaire canadien des terres humides (ICTH) initié en 2002, visant la classification des cinq grandes classes de milieux humides selon le Système de canadien de classification des milieux humides, soit bog, fen, marais, marécage et eau peu profonde.  L’approche choisie combine l’utilisation des images satellites Landsat-TM/ETM et RADARSAT-1 ainsi que la classification d’images basée sur les objets.\n\nLes sites qui ont été cartographiés sont répartis dans plusieurs écozones et représentent différents types de paysages et d’écosystèmes.  Ces sites sont le lac Saint-Pierre, le lac Brome, la Montérégie, le lac Saint-François (Appalaches), la Grande-Plée-Bleue, Montmagny, le cap Tourmente, la baie de l’Isle-Verte, le parc national de la Mauricie, les Iles-de-la-Madeleine, Radisson et Eastmain.  La superficie couverte par les douze sites est de 4 % du territoire québécois.  De plus, la méthode a été testé pour un site en Colombie-Britannique (Vancouver) ainsi qu'aux Territoires du Nord-Ouest (Kendall Island).\n\nAu total pour les douze sites, 8 % du territoire est couvert par les milieux humides.  Le pourcentage pour chacun des sites varie entre 2 % et 15 %.  La validation des classifications a été faite selon une méthode développée par le SCF-Qc basée sur l’interprétation visuelle des composés colorés Landsat.  La validation a été faite sur deux niveaux, soit entre le milieu humide par rapport au milieu sec, et soit entre les cinq types de milieux humides.  L’exactitude globale pour le premier niveau de validation varie entre 61 et 91 %, et entre 47 et 98 % pour le deuxième niveau.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2015","registered":"2018-05-10T13:11:33Z","checked":null,"updated":"2018-05-10T13:11:33Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0LzJiNDA0Y2Y3LWUxYzAtNDY3NS04NzE0LTk2NTA4Y2Y3OGU5YzwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPk1hdHRoaWV1IEFsbGFyZDwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5JbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgOyBSw6lnaW9uIGRlIGxhIEJhaWUgZGUgbCdJc2xlLVZlcnRlPC90aXRsZT4NCiAgPC90aXRsZXM+DQogIDxwdWJsaXNoZXI+RW52aXJvbm1lbnQgYW5kIENsaW1hdGUgQ2hhbmdlIENhbmFkYTwvcHVibGlzaGVyPg0KICA8cHVibGljYXRpb25ZZWFyPjIwMTU8L3B1YmxpY2F0aW9uWWVhcj4NCiAgPHN1YmplY3RzPg0KICAgIDxzdWJqZWN0Pk1pbGlldSBodW1pZGU8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+TmF0dXJlIGV0IGJpb2RpdmVyc2l0w6kgLSBoYWJpdGF0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlF1w6liZWMgKFFDKTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5RdcOpYmVjPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PklzbGUtVmVydGU8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+Q2xhc3NpZmljYXRpb24gb3JpZW50w6llIG9iamV0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0Pk9jY3VwYXRpb24gZHUgc29sPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkhhYml0YXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+U3VwZXJ2aXNlciBldCBnw6lyZXIgbCfDqXRhdCBkZXMgc2l0ZXM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+U3lzdMOobWVzIGQnaW5mb3JtYXRpb24gc3VyICBsJ8OpdGF0IGRlcyBzaXRlczwvc3ViamVjdD4NCiAgPC9zdWJqZWN0cz4NCiAgPGxhbmd1YWdlPmVuZzwvbGFuZ3VhZ2U+DQogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YXNldDwvcmVzb3VyY2VUeXBlPg0KICA8dmVyc2lvbj4xPC92ZXJzaW9uPg0KICA8cmlnaHRzTGlzdD4NCiAgICA8cmlnaHRzPkxpY2VuY2UgZHUgZ291dmVybmVtZW50IG91dmVydCAtIENhbmFkYSAoaHR0cDovL291dmVydC5jYW5hZGEuY2EvZnIvbGljZW5jZS1kdS1nb3V2ZXJuZW1lbnQtb3V2ZXJ0LWNhbmFkYSk8L3JpZ2h0cz4NCiAgPC9yaWdodHNMaXN0Pg0KICA8ZGVzY3JpcHRpb25zPg0KICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0Ij5Eb25uw6llcyBkZSBsJ0ludmVudGFpcmUgY2FuYWRpZW4gZGVzIHRlcnJlcyBodW1pZGVzIChJQ1RIKSBwb3VyIGxhIHLDqWdpb24gZGUgQmFpZSBkZSBsJ0lzbGUtVmVydGUgZXQgY3LDqcOpZXMgc2Vsb24gbGEgbcOpdGhvZGUgZMOpdmVsb3Bww6llIHBhciBsZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIC0gcsOpZ2lvbiBkdSBRdcOpYmVjLg0KDQpMZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIGTigJlFbnZpcm9ubmVtZW50IENhbmFkYSwgcsOpZ2lvbiBkdSBRdcOpYmVjIChTQ0YtUWMpIGEgcHJvZHVpdCBlbnRyZSAyMDAzIGV0IDIwMDcgbGEgY2FydG9ncmFwaGllIGRlcyBtaWxpZXV4IGh1bWlkZXMgcG91ciBwbHVzaWV1cnMgc2l0ZXMgYXUgUXXDqWJlYy4gIENlcyBjYXJ0b2dyYXBoaWVzIG9udCDDqXTDqSByw6lhbGlzw6llcyBkYW5zIGxlIGNhZHJlIGRlIGzigJlJbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgaW5pdGnDqSBlbiAyMDAyLCB2aXNhbnQgbGEgY2xhc3NpZmljYXRpb24gZGVzIGNpbnEgZ3JhbmRlcyBjbGFzc2VzIGRlIG1pbGlldXggaHVtaWRlcyBzZWxvbiBsZSBTeXN0w6htZSBkZSBjYW5hZGllbiBkZSBjbGFzc2lmaWNhdGlvbiBkZXMgbWlsaWV1eCBodW1pZGVzLCBzb2l0IGJvZywgZmVuLCBtYXJhaXMsIG1hcsOpY2FnZSBldCBlYXUgcGV1IHByb2ZvbmRlLiAgTOKAmWFwcHJvY2hlIGNob2lzaWUgY29tYmluZSBs4oCZdXRpbGlzYXRpb24gZGVzIGltYWdlcyBzYXRlbGxpdGVzIExhbmRzYXQtVE0vRVRNIGV0IFJBREFSU0FULTEgYWluc2kgcXVlIGxhIGNsYXNzaWZpY2F0aW9uIGTigJlpbWFnZXMgYmFzw6llIHN1ciBsZXMgb2JqZXRzLg0KDQpMZXMgc2l0ZXMgcXVpIG9udCDDqXTDqSBjYXJ0b2dyYXBoacOpcyBzb250IHLDqXBhcnRpcyBkYW5zIHBsdXNpZXVycyDDqWNvem9uZXMgZXQgcmVwcsOpc2VudGVudCBkaWZmw6lyZW50cyB0eXBlcyBkZSBwYXlzYWdlcyBldCBk4oCZw6ljb3N5c3TDqG1lcy4gIENlcyBzaXRlcyBzb250IGxlIGxhYyBTYWludC1QaWVycmUsIGxlIGxhYyBCcm9tZSwgbGEgTW9udMOpcsOpZ2llLCBsZSBsYWMgU2FpbnQtRnJhbsOnb2lzIChBcHBhbGFjaGVzKSwgbGEgR3JhbmRlLVBsw6llLUJsZXVlLCBNb250bWFnbnksIGxlIGNhcCBUb3VybWVudGUsIGxhIGJhaWUgZGUgbOKAmUlzbGUtVmVydGUsIGxlIHBhcmMgbmF0aW9uYWwgZGUgbGEgTWF1cmljaWUsIGxlcyBJbGVzLWRlLWxhLU1hZGVsZWluZSwgUmFkaXNzb24gZXQgRWFzdG1haW4uICBMYSBzdXBlcmZpY2llIGNvdXZlcnRlIHBhciBsZXMgZG91emUgc2l0ZXMgZXN0IGRlIDQgJSBkdSB0ZXJyaXRvaXJlIHF1w6liw6ljb2lzLiAgRGUgcGx1cywgbGEgbcOpdGhvZGUgYSDDqXTDqSB0ZXN0w6kgcG91ciB1biBzaXRlIGVuIENvbG9tYmllLUJyaXRhbm5pcXVlIChWYW5jb3V2ZXIpIGFpbnNpIHF1J2F1eCBUZXJyaXRvaXJlcyBkdSBOb3JkLU91ZXN0IChLZW5kYWxsIElzbGFuZCkuDQoNCkF1IHRvdGFsIHBvdXIgbGVzIGRvdXplIHNpdGVzLCA4ICUgZHUgdGVycml0b2lyZSBlc3QgY291dmVydCBwYXIgbGVzIG1pbGlldXggaHVtaWRlcy4gIExlIHBvdXJjZW50YWdlIHBvdXIgY2hhY3VuIGRlcyBzaXRlcyB2YXJpZSBlbnRyZSAyICUgZXQgMTUgJS4gIExhIHZhbGlkYXRpb24gZGVzIGNsYXNzaWZpY2F0aW9ucyBhIMOpdMOpIGZhaXRlIHNlbG9uIHVuZSBtw6l0aG9kZSBkw6l2ZWxvcHDDqWUgcGFyIGxlIFNDRi1RYyBiYXPDqWUgc3VyIGzigJlpbnRlcnByw6l0YXRpb24gdmlzdWVsbGUgZGVzIGNvbXBvc8OpcyBjb2xvcsOpcyBMYW5kc2F0LiAgTGEgdmFsaWRhdGlvbiBhIMOpdMOpIGZhaXRlIHN1ciBkZXV4IG5pdmVhdXgsIHNvaXQgZW50cmUgbGUgbWlsaWV1IGh1bWlkZSBwYXIgcmFwcG9ydCBhdSBtaWxpZXUgc2VjLCBldCBzb2l0IGVudHJlIGxlcyBjaW5xIHR5cGVzIGRlIG1pbGlldXggaHVtaWRlcy4gIEzigJlleGFjdGl0dWRlIGdsb2JhbGUgcG91ciBsZSBwcmVtaWVyIG5pdmVhdSBkZSB2YWxpZGF0aW9uIHZhcmllIGVudHJlIDYxIGV0IDkxICUsIGV0IGVudHJlIDQ3IGV0IDk4ICUgcG91ciBsZSBkZXV4acOobWUgbml2ZWF1LjwvZGVzY3JpcHRpb24+DQogIDwvZGVzY3JpcHRpb25zPg0KICA8Z2VvTG9jYXRpb25zPg0KICAgIDxnZW9Mb2NhdGlvbj4NCiAgICAgIDxnZW9Mb2NhdGlvbkJveD4tNjkuNzcwMjA1MDk3ODk3NTQgNDcuNjA5MTg2NzQzOTcyNDUgLTY4LjkwODQyMTcwODk3NTk4IC02OC45MDg0MjE3MDg5NzU5ODwvZ2VvTG9jYXRpb25Cb3g+DQogICAgPC9nZW9Mb2NhdGlvbj4NCiAgPC9nZW9Mb2NhdGlvbnM+DQo8L3Jlc291cmNlPg=="},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/5c60c271-8388-47e6-ba31-2b24241fdafd","type":"works","attributes":{"doi":"10.18164/5c60c271-8388-47e6-ba31-2b24241fdafd","identifier":"https://doi.org/10.18164/5c60c271-8388-47e6-ba31-2b24241fdafd","url":"http://data.ec.gc.ca/data/sites/systems/canadian-wetland-inventory-cwi-grande-pl-e-bleue-region","author":[{"literal":"Matthieu Allard"}],"title":"Inventaire canadien des terres humides (ICTH) ; Grande plée Bleue","container-title":"Environment and Climate Change Canada","description":"Données de l'Inventaire canadien des terres humides (ICTH) pour la région de la Grande plée Bleue et créées selon la méthode développée par le Service canadien de la faune - région du Québec.\n\nLe Service canadien de la faune d’Environnement Canada, région du Québec (SCF-Qc) a produit entre 2003 et 2007 la cartographie des milieux humides pour plusieurs sites au Québec.  Ces cartographies ont été réalisées dans le cadre de l’Inventaire canadien des terres humides (ICTH) initié en 2002, visant la classification des cinq grandes classes de milieux humides selon le Système de canadien de classification des milieux humides, soit bog, fen, marais, marécage et eau peu profonde.  L’approche choisie combine l’utilisation des images satellites Landsat-TM/ETM et RADARSAT-1 ainsi que la classification d’images basée sur les objets.\n\nLes sites qui ont été cartographiés sont répartis dans plusieurs écozones et représentent différents types de paysages et d’écosystèmes.  Ces sites sont le lac Saint-Pierre, le lac Brome, la Montérégie, le lac Saint-François (Appalaches), la Grande-Plée-Bleue, Montmagny, le cap Tourmente, la baie de l’Isle-Verte, le parc national de la Mauricie, les Iles-de-la-Madeleine, Radisson et Eastmain.  La superficie couverte par les douze sites est de 4 % du territoire québécois.  De plus, la méthode a été testé pour un site en Colombie-Britannique (Vancouver) ainsi qu'aux Territoires du Nord-Ouest (Kendall Island).\n\nAu total pour les douze sites, 8 % du territoire est couvert par les milieux humides.  Le pourcentage pour chacun des sites varie entre 2 % et 15 %.  La validation des classifications a été faite selon une méthode développée par le SCF-Qc basée sur l’interprétation visuelle des composés colorés Landsat.  La validation a été faite sur deux niveaux, soit entre le milieu humide par rapport au milieu sec, et soit entre les cinq types de milieux humides.  L’exactitude globale pour le premier niveau de validation varie entre 61 et 91 %, et entre 47 et 98 % pour le deuxième niveau.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2015","registered":"2018-05-10T13:11:43Z","checked":null,"updated":"2018-05-10T13:11:43Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0LzVjNjBjMjcxLTgzODgtNDdlNi1iYTMxLTJiMjQyNDFmZGFmZDwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPk1hdHRoaWV1IEFsbGFyZDwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5JbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgOyBHcmFuZGUgcGzDqWUgQmxldWU8L3RpdGxlPg0KICA8L3RpdGxlcz4NCiAgPHB1Ymxpc2hlcj5FbnZpcm9ubWVudCBhbmQgQ2xpbWF0ZSBDaGFuZ2UgQ2FuYWRhPC9wdWJsaXNoZXI+DQogIDxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPg0KICA8c3ViamVjdHM+DQogICAgPHN1YmplY3Q+TWlsaWV1IGh1bWlkZTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5OYXR1cmUgZXQgYmlvZGl2ZXJzaXTDqSAtIGhhYml0YXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UXXDqWJlYyAoUUMpPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlF1w6liZWM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+Q2xhc3NpZmljYXRpb24gb3JpZW50w6llIG9iamV0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkxhbmRzYXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UmFkYXJzYXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+T2NjdXBhdGlvbiBkdSBzb2w8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+SGFiaXRhdDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5TdXBlcnZpc2VyIGV0IGfDqXJlciBsJ8OpdGF0IGRlcyBzaXRlczwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5TeXN0w6htZXMgZCdpbmZvcm1hdGlvbiBzdXIgIGwnw6l0YXQgZGVzIHNpdGVzPC9zdWJqZWN0Pg0KICA8L3N1YmplY3RzPg0KICA8bGFuZ3VhZ2U+ZW5nPC9sYW5ndWFnZT4NCiAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ij5EYXRhc2V0PC9yZXNvdXJjZVR5cGU+DQogIDx2ZXJzaW9uPjE8L3ZlcnNpb24+DQogIDxyaWdodHNMaXN0Pg0KICAgIDxyaWdodHM+TGljZW5jZSBkdSBnb3V2ZXJuZW1lbnQgb3V2ZXJ0IC0gQ2FuYWRhIChodHRwOi8vb3V2ZXJ0LmNhbmFkYS5jYS9mci9saWNlbmNlLWR1LWdvdXZlcm5lbWVudC1vdXZlcnQtY2FuYWRhKTwvcmlnaHRzPg0KICA8L3JpZ2h0c0xpc3Q+DQogIDxkZXNjcmlwdGlvbnM+DQogICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiPkRvbm7DqWVzIGRlIGwnSW52ZW50YWlyZSBjYW5hZGllbiBkZXMgdGVycmVzIGh1bWlkZXMgKElDVEgpIHBvdXIgbGEgcsOpZ2lvbiBkZSBsYSBHcmFuZGUgcGzDqWUgQmxldWUgZXQgY3LDqcOpZXMgc2Vsb24gbGEgbcOpdGhvZGUgZMOpdmVsb3Bww6llIHBhciBsZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIC0gcsOpZ2lvbiBkdSBRdcOpYmVjLg0KDQpMZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIGTigJlFbnZpcm9ubmVtZW50IENhbmFkYSwgcsOpZ2lvbiBkdSBRdcOpYmVjIChTQ0YtUWMpIGEgcHJvZHVpdCBlbnRyZSAyMDAzIGV0IDIwMDcgbGEgY2FydG9ncmFwaGllIGRlcyBtaWxpZXV4IGh1bWlkZXMgcG91ciBwbHVzaWV1cnMgc2l0ZXMgYXUgUXXDqWJlYy4gIENlcyBjYXJ0b2dyYXBoaWVzIG9udCDDqXTDqSByw6lhbGlzw6llcyBkYW5zIGxlIGNhZHJlIGRlIGzigJlJbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgaW5pdGnDqSBlbiAyMDAyLCB2aXNhbnQgbGEgY2xhc3NpZmljYXRpb24gZGVzIGNpbnEgZ3JhbmRlcyBjbGFzc2VzIGRlIG1pbGlldXggaHVtaWRlcyBzZWxvbiBsZSBTeXN0w6htZSBkZSBjYW5hZGllbiBkZSBjbGFzc2lmaWNhdGlvbiBkZXMgbWlsaWV1eCBodW1pZGVzLCBzb2l0IGJvZywgZmVuLCBtYXJhaXMsIG1hcsOpY2FnZSBldCBlYXUgcGV1IHByb2ZvbmRlLiAgTOKAmWFwcHJvY2hlIGNob2lzaWUgY29tYmluZSBs4oCZdXRpbGlzYXRpb24gZGVzIGltYWdlcyBzYXRlbGxpdGVzIExhbmRzYXQtVE0vRVRNIGV0IFJBREFSU0FULTEgYWluc2kgcXVlIGxhIGNsYXNzaWZpY2F0aW9uIGTigJlpbWFnZXMgYmFzw6llIHN1ciBsZXMgb2JqZXRzLg0KDQpMZXMgc2l0ZXMgcXVpIG9udCDDqXTDqSBjYXJ0b2dyYXBoacOpcyBzb250IHLDqXBhcnRpcyBkYW5zIHBsdXNpZXVycyDDqWNvem9uZXMgZXQgcmVwcsOpc2VudGVudCBkaWZmw6lyZW50cyB0eXBlcyBkZSBwYXlzYWdlcyBldCBk4oCZw6ljb3N5c3TDqG1lcy4gIENlcyBzaXRlcyBzb250IGxlIGxhYyBTYWludC1QaWVycmUsIGxlIGxhYyBCcm9tZSwgbGEgTW9udMOpcsOpZ2llLCBsZSBsYWMgU2FpbnQtRnJhbsOnb2lzIChBcHBhbGFjaGVzKSwgbGEgR3JhbmRlLVBsw6llLUJsZXVlLCBNb250bWFnbnksIGxlIGNhcCBUb3VybWVudGUsIGxhIGJhaWUgZGUgbOKAmUlzbGUtVmVydGUsIGxlIHBhcmMgbmF0aW9uYWwgZGUgbGEgTWF1cmljaWUsIGxlcyBJbGVzLWRlLWxhLU1hZGVsZWluZSwgUmFkaXNzb24gZXQgRWFzdG1haW4uICBMYSBzdXBlcmZpY2llIGNvdXZlcnRlIHBhciBsZXMgZG91emUgc2l0ZXMgZXN0IGRlIDQgJSBkdSB0ZXJyaXRvaXJlIHF1w6liw6ljb2lzLiAgRGUgcGx1cywgbGEgbcOpdGhvZGUgYSDDqXTDqSB0ZXN0w6kgcG91ciB1biBzaXRlIGVuIENvbG9tYmllLUJyaXRhbm5pcXVlIChWYW5jb3V2ZXIpIGFpbnNpIHF1J2F1eCBUZXJyaXRvaXJlcyBkdSBOb3JkLU91ZXN0IChLZW5kYWxsIElzbGFuZCkuDQoNCkF1IHRvdGFsIHBvdXIgbGVzIGRvdXplIHNpdGVzLCA4ICUgZHUgdGVycml0b2lyZSBlc3QgY291dmVydCBwYXIgbGVzIG1pbGlldXggaHVtaWRlcy4gIExlIHBvdXJjZW50YWdlIHBvdXIgY2hhY3VuIGRlcyBzaXRlcyB2YXJpZSBlbnRyZSAyICUgZXQgMTUgJS4gIExhIHZhbGlkYXRpb24gZGVzIGNsYXNzaWZpY2F0aW9ucyBhIMOpdMOpIGZhaXRlIHNlbG9uIHVuZSBtw6l0aG9kZSBkw6l2ZWxvcHDDqWUgcGFyIGxlIFNDRi1RYyBiYXPDqWUgc3VyIGzigJlpbnRlcnByw6l0YXRpb24gdmlzdWVsbGUgZGVzIGNvbXBvc8OpcyBjb2xvcsOpcyBMYW5kc2F0LiAgTGEgdmFsaWRhdGlvbiBhIMOpdMOpIGZhaXRlIHN1ciBkZXV4IG5pdmVhdXgsIHNvaXQgZW50cmUgbGUgbWlsaWV1IGh1bWlkZSBwYXIgcmFwcG9ydCBhdSBtaWxpZXUgc2VjLCBldCBzb2l0IGVudHJlIGxlcyBjaW5xIHR5cGVzIGRlIG1pbGlldXggaHVtaWRlcy4gIEzigJlleGFjdGl0dWRlIGdsb2JhbGUgcG91ciBsZSBwcmVtaWVyIG5pdmVhdSBkZSB2YWxpZGF0aW9uIHZhcmllIGVudHJlIDYxIGV0IDkxICUsIGV0IGVudHJlIDQ3IGV0IDk4ICUgcG91ciBsZSBkZXV4acOobWUgbml2ZWF1LjwvZGVzY3JpcHRpb24+DQogIDwvZGVzY3JpcHRpb25zPg0KICA8Z2VvTG9jYXRpb25zPg0KICAgIDxnZW9Mb2NhdGlvbj4NCiAgICAgIDxnZW9Mb2NhdGlvbkJveD4tNzEuNTQ1ODE5MjI1NzI0MjcgNDYuNTI0NjM3NjEwMzYwMSAtNzAuNTE2NzMzMjU0NzU1MTYgLTcwLjUxNjczMzI1NDc1NTE2PC9nZW9Mb2NhdGlvbkJveD4NCiAgICA8L2dlb0xvY2F0aW9uPg0KICA8L2dlb0xvY2F0aW9ucz4NCjwvcmVzb3VyY2U+"},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/3f9148a1-7d6d-412d-a0b9-ccddcc5298de","type":"works","attributes":{"doi":"10.18164/3f9148a1-7d6d-412d-a0b9-ccddcc5298de","identifier":"https://doi.org/10.18164/3f9148a1-7d6d-412d-a0b9-ccddcc5298de","url":"http://data.ec.gc.ca/data/sites/systems/canadian-wetland-inventory-cwi-radisson-region","author":[{"literal":"Matthieu Allard"}],"title":"Inventaire canadien des terres humides (ICTH) ; Région de Radisson","container-title":"Environment and Climate Change Canada","description":"Données de l'Inventaire canadien des terres humides (ICTH) pour la region de Radisson et créées selon la méthode développée par le Service canadien de la faune - région du Québec.\n\nLe Service canadien de la faune d’Environnement Canada, région du Québec (SCF-Qc) a produit entre 2003 et 2007 la cartographie des milieux humides pour plusieurs sites au Québec.  Ces cartographies ont été réalisées dans le cadre de l’Inventaire canadien des terres humides (ICTH) initié en 2002, visant la classification des cinq grandes classes de milieux humides selon le Système de canadien de classification des milieux humides, soit bog, fen, marais, marécage et eau peu profonde.  L’approche choisie combine l’utilisation des images satellites Landsat-TM/ETM et RADARSAT-1 ainsi que la classification d’images basée sur les objets.\n\nLes sites qui ont été cartographiés sont répartis dans plusieurs écozones et représentent différents types de paysages et d’écosystèmes.  Ces sites sont le lac Saint-Pierre, le lac Brome, la Montérégie, le lac Saint-François (Appalaches), la Grande-Plée-Bleue, Montmagny, le cap Tourmente, la baie de l’Isle-Verte, le parc national de la Mauricie, les Iles-de-la-Madeleine, Radisson et Eastmain.  La superficie couverte par les douze sites est de 4 % du territoire québécois.  De plus, la méthode a été testé pour un site en Colombie-Britannique (Vancouver) ainsi qu'aux Territoires du Nord-Ouest (Kendall Island).\n\nAu total pour les douze sites, 8 % du territoire est couvert par les milieux humides.  Le pourcentage pour chacun des sites varie entre 2 % et 15 %.  La validation des classifications a été faite selon une méthode développée par le SCF-Qc basée sur l’interprétation visuelle des composés colorés Landsat.  La validation a été faite sur deux niveaux, soit entre le milieu humide par rapport au milieu sec, et soit entre les cinq types de milieux humides.  L’exactitude globale pour le premier niveau de validation varie entre 61 et 91 %, et entre 47 et 98 % pour le deuxième niveau.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2015","registered":"2018-05-10T13:11:55Z","checked":null,"updated":"2018-05-10T13:11:55Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0LzNmOTE0OGExLTdkNmQtNDEyZC1hMGI5LWNjZGRjYzUyOThkZTwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPk1hdHRoaWV1IEFsbGFyZDwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5JbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgOyBSw6lnaW9uIGRlIFJhZGlzc29uPC90aXRsZT4NCiAgPC90aXRsZXM+DQogIDxwdWJsaXNoZXI+RW52aXJvbm1lbnQgYW5kIENsaW1hdGUgQ2hhbmdlIENhbmFkYTwvcHVibGlzaGVyPg0KICA8cHVibGljYXRpb25ZZWFyPjIwMTU8L3B1YmxpY2F0aW9uWWVhcj4NCiAgPHN1YmplY3RzPg0KICAgIDxzdWJqZWN0Pk1pbGlldSBodW1pZGU8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+TmF0dXJlIGV0IGJpb2RpdmVyc2l0w6kgLSBoYWJpdGF0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlF1w6liZWMgKFFDKTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5FbXBsYWNlbWVudDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5RdcOpYmVjPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlJhZGlzc29uPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkNsYXNzaWZpY2F0aW9uIG9yaWVudMOpZSBvYmpldDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5PY2N1cGF0aW9uIGR1IHNvbDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5IYWJpdGF0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlN1cGVydmlzZXIgZXQgZ8OpcmVyIGwnw6l0YXQgZGVzIHNpdGVzPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlN5c3TDqG1lcyBkJ2luZm9ybWF0aW9uIHN1ciAgbCfDqXRhdCBkZXMgc2l0ZXM8L3N1YmplY3Q+DQogIDwvc3ViamVjdHM+DQogIDxsYW5ndWFnZT5lbmc8L2xhbmd1YWdlPg0KICA8cmVzb3VyY2VUeXBlIHJlc291cmNlVHlwZUdlbmVyYWw9IkRhdGFzZXQiPkRhdGFzZXQ8L3Jlc291cmNlVHlwZT4NCiAgPHZlcnNpb24+MTwvdmVyc2lvbj4NCiAgPHJpZ2h0c0xpc3Q+DQogICAgPHJpZ2h0cz5MaWNlbmNlIGR1IGdvdXZlcm5lbWVudCBvdXZlcnQgLSBDYW5hZGEgKGh0dHA6Ly9vdXZlcnQuY2FuYWRhLmNhL2ZyL2xpY2VuY2UtZHUtZ291dmVybmVtZW50LW91dmVydC1jYW5hZGEpPC9yaWdodHM+DQogIDwvcmlnaHRzTGlzdD4NCiAgPGRlc2NyaXB0aW9ucz4NCiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCI+RG9ubsOpZXMgZGUgbCdJbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgcG91ciBsYSByZWdpb24gZGUgUmFkaXNzb24gZXQgY3LDqcOpZXMgc2Vsb24gbGEgbcOpdGhvZGUgZMOpdmVsb3Bww6llIHBhciBsZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIC0gcsOpZ2lvbiBkdSBRdcOpYmVjLg0KDQpMZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIGTigJlFbnZpcm9ubmVtZW50IENhbmFkYSwgcsOpZ2lvbiBkdSBRdcOpYmVjIChTQ0YtUWMpIGEgcHJvZHVpdCBlbnRyZSAyMDAzIGV0IDIwMDcgbGEgY2FydG9ncmFwaGllIGRlcyBtaWxpZXV4IGh1bWlkZXMgcG91ciBwbHVzaWV1cnMgc2l0ZXMgYXUgUXXDqWJlYy4gIENlcyBjYXJ0b2dyYXBoaWVzIG9udCDDqXTDqSByw6lhbGlzw6llcyBkYW5zIGxlIGNhZHJlIGRlIGzigJlJbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgaW5pdGnDqSBlbiAyMDAyLCB2aXNhbnQgbGEgY2xhc3NpZmljYXRpb24gZGVzIGNpbnEgZ3JhbmRlcyBjbGFzc2VzIGRlIG1pbGlldXggaHVtaWRlcyBzZWxvbiBsZSBTeXN0w6htZSBkZSBjYW5hZGllbiBkZSBjbGFzc2lmaWNhdGlvbiBkZXMgbWlsaWV1eCBodW1pZGVzLCBzb2l0IGJvZywgZmVuLCBtYXJhaXMsIG1hcsOpY2FnZSBldCBlYXUgcGV1IHByb2ZvbmRlLiAgTOKAmWFwcHJvY2hlIGNob2lzaWUgY29tYmluZSBs4oCZdXRpbGlzYXRpb24gZGVzIGltYWdlcyBzYXRlbGxpdGVzIExhbmRzYXQtVE0vRVRNIGV0IFJBREFSU0FULTEgYWluc2kgcXVlIGxhIGNsYXNzaWZpY2F0aW9uIGTigJlpbWFnZXMgYmFzw6llIHN1ciBsZXMgb2JqZXRzLg0KDQpMZXMgc2l0ZXMgcXVpIG9udCDDqXTDqSBjYXJ0b2dyYXBoacOpcyBzb250IHLDqXBhcnRpcyBkYW5zIHBsdXNpZXVycyDDqWNvem9uZXMgZXQgcmVwcsOpc2VudGVudCBkaWZmw6lyZW50cyB0eXBlcyBkZSBwYXlzYWdlcyBldCBk4oCZw6ljb3N5c3TDqG1lcy4gIENlcyBzaXRlcyBzb250IGxlIGxhYyBTYWludC1QaWVycmUsIGxlIGxhYyBCcm9tZSwgbGEgTW9udMOpcsOpZ2llLCBsZSBsYWMgU2FpbnQtRnJhbsOnb2lzIChBcHBhbGFjaGVzKSwgbGEgR3JhbmRlLVBsw6llLUJsZXVlLCBNb250bWFnbnksIGxlIGNhcCBUb3VybWVudGUsIGxhIGJhaWUgZGUgbOKAmUlzbGUtVmVydGUsIGxlIHBhcmMgbmF0aW9uYWwgZGUgbGEgTWF1cmljaWUsIGxlcyBJbGVzLWRlLWxhLU1hZGVsZWluZSwgUmFkaXNzb24gZXQgRWFzdG1haW4uICBMYSBzdXBlcmZpY2llIGNvdXZlcnRlIHBhciBsZXMgZG91emUgc2l0ZXMgZXN0IGRlIDQgJSBkdSB0ZXJyaXRvaXJlIHF1w6liw6ljb2lzLiAgRGUgcGx1cywgbGEgbcOpdGhvZGUgYSDDqXTDqSB0ZXN0w6kgcG91ciB1biBzaXRlIGVuIENvbG9tYmllLUJyaXRhbm5pcXVlIChWYW5jb3V2ZXIpIGFpbnNpIHF1J2F1eCBUZXJyaXRvaXJlcyBkdSBOb3JkLU91ZXN0IChLZW5kYWxsIElzbGFuZCkuDQoNCkF1IHRvdGFsIHBvdXIgbGVzIGRvdXplIHNpdGVzLCA4ICUgZHUgdGVycml0b2lyZSBlc3QgY291dmVydCBwYXIgbGVzIG1pbGlldXggaHVtaWRlcy4gIExlIHBvdXJjZW50YWdlIHBvdXIgY2hhY3VuIGRlcyBzaXRlcyB2YXJpZSBlbnRyZSAyICUgZXQgMTUgJS4gIExhIHZhbGlkYXRpb24gZGVzIGNsYXNzaWZpY2F0aW9ucyBhIMOpdMOpIGZhaXRlIHNlbG9uIHVuZSBtw6l0aG9kZSBkw6l2ZWxvcHDDqWUgcGFyIGxlIFNDRi1RYyBiYXPDqWUgc3VyIGzigJlpbnRlcnByw6l0YXRpb24gdmlzdWVsbGUgZGVzIGNvbXBvc8OpcyBjb2xvcsOpcyBMYW5kc2F0LiAgTGEgdmFsaWRhdGlvbiBhIMOpdMOpIGZhaXRlIHN1ciBkZXV4IG5pdmVhdXgsIHNvaXQgZW50cmUgbGUgbWlsaWV1IGh1bWlkZSBwYXIgcmFwcG9ydCBhdSBtaWxpZXUgc2VjLCBldCBzb2l0IGVudHJlIGxlcyBjaW5xIHR5cGVzIGRlIG1pbGlldXggaHVtaWRlcy4gIEzigJlleGFjdGl0dWRlIGdsb2JhbGUgcG91ciBsZSBwcmVtaWVyIG5pdmVhdSBkZSB2YWxpZGF0aW9uIHZhcmllIGVudHJlIDYxIGV0IDkxICUsIGV0IGVudHJlIDQ3IGV0IDk4ICUgcG91ciBsZSBkZXV4acOobWUgbml2ZWF1LjwvZGVzY3JpcHRpb24+DQogIDwvZGVzY3JpcHRpb25zPg0KICA8Z2VvTG9jYXRpb25zPg0KICAgIDxnZW9Mb2NhdGlvbj4NCiAgICAgIDxnZW9Mb2NhdGlvbkJveD4tNzcuNDkwNTA1Nzc3ODQ4MDEgNTMuMDk2NDAxMDY3NjgzMzQgLTc2LjAwMTMxODY5MTUzMTYyIC03Ni4wMDEzMTg2OTE1MzE2MjwvZ2VvTG9jYXRpb25Cb3g+DQogICAgPC9nZW9Mb2NhdGlvbj4NCiAgPC9nZW9Mb2NhdGlvbnM+DQo8L3Jlc291cmNlPg=="},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/cb10a7f6-f68d-40ef-aed7-417a69322e44","type":"works","attributes":{"doi":"10.18164/cb10a7f6-f68d-40ef-aed7-417a69322e44","identifier":"https://doi.org/10.18164/cb10a7f6-f68d-40ef-aed7-417a69322e44","url":"http://data.ec.gc.ca/data/sites/systems/canadian-wetland-inventory-cwi-les-de-la-madeleine","author":[{"literal":"Matthieu Allard"}],"title":"Inventaire canadien des terres humides (ICTH) ; Îles de la Madeleine","container-title":"Environment and Climate Change Canada","description":"Données de l'Inventaire canadien des terres humides (ICTH) pour les Îles de la Madeleine et créées selon la méthode développée par le Service canadien de la faune - région du Québec.\n\nLe Service canadien de la faune d’Environnement Canada, région du Québec (SCF-Qc) a produit entre 2003 et 2007 la cartographie des milieux humides pour plusieurs sites au Québec.  Ces cartographies ont été réalisées dans le cadre de l’Inventaire canadien des terres humides (ICTH) initié en 2002, visant la classification des cinq grandes classes de milieux humides selon le Système de canadien de classification des milieux humides, soit bog, fen, marais, marécage et eau peu profonde.  L’approche choisie combine l’utilisation des images satellites Landsat-TM/ETM et RADARSAT-1 ainsi que la classification d’images basée sur les objets.\n\nLes sites qui ont été cartographiés sont répartis dans plusieurs écozones et représentent différents types de paysages et d’écosystèmes.  Ces sites sont le lac Saint-Pierre, le lac Brome, la Montérégie, le lac Saint-François (Appalaches), la Grande-Plée-Bleue, Montmagny, le cap Tourmente, la baie de l’Isle-Verte, le parc national de la Mauricie, les Iles-de-la-Madeleine, Radisson et Eastmain.  La superficie couverte par les douze sites est de 4 % du territoire québécois.  De plus, la méthode a été testé pour un site en Colombie-Britannique (Vancouver) ainsi qu'aux Territoires du Nord-Ouest (Kendall Island).\n\nAu total pour les douze sites, 8 % du territoire est couvert par les milieux humides.  Le pourcentage pour chacun des sites varie entre 2 % et 15 %.  La validation des classifications a été faite selon une méthode développée par le SCF-Qc basée sur l’interprétation visuelle des composés colorés Landsat.  La validation a été faite sur deux niveaux, soit entre le milieu humide par rapport au milieu sec, et soit entre les cinq types de milieux humides.  L’exactitude globale pour le premier niveau de validation varie entre 61 et 91 %, et entre 47 et 98 % pour le deuxième niveau.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2015","registered":"2018-05-10T13:12:02Z","checked":null,"updated":"2018-05-10T13:12:02Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0L2NiMTBhN2Y2LWY2OGQtNDBlZi1hZWQ3LTQxN2E2OTMyMmU0NDwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPk1hdHRoaWV1IEFsbGFyZDwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5JbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgOyDDjmxlcyBkZSBsYSBNYWRlbGVpbmU8L3RpdGxlPg0KICA8L3RpdGxlcz4NCiAgPHB1Ymxpc2hlcj5FbnZpcm9ubWVudCBhbmQgQ2xpbWF0ZSBDaGFuZ2UgQ2FuYWRhPC9wdWJsaXNoZXI+DQogIDxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPg0KICA8c3ViamVjdHM+DQogICAgPHN1YmplY3Q+TWlsaWV1IGh1bWlkZTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5OYXR1cmUgZXQgYmlvZGl2ZXJzaXTDqSAtIGhhYml0YXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UXXDqWJlYyAoUUMpPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlF1w6liZWM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+w45sZXMgZGUgbGEgTWFkZWxlaW5lPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkNsYXNzaWZpY2F0aW9uIG9yaWVudMOpZSBvYmpldDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5MYW5kc2F0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlJhZGFyc2F0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0Pk9jY3VwYXRpb24gZHUgc29sPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkhhYml0YXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+U3VwZXJ2aXNlciBldCBnw6lyZXIgbCfDqXRhdCBkZXMgc2l0ZXM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+U3lzdMOobWVzIGQnaW5mb3JtYXRpb24gc3VyICBsJ8OpdGF0IGRlcyBzaXRlczwvc3ViamVjdD4NCiAgPC9zdWJqZWN0cz4NCiAgPGxhbmd1YWdlPmVuZzwvbGFuZ3VhZ2U+DQogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YXNldDwvcmVzb3VyY2VUeXBlPg0KICA8dmVyc2lvbj4xPC92ZXJzaW9uPg0KICA8cmlnaHRzTGlzdD4NCiAgICA8cmlnaHRzPkxpY2VuY2UgZHUgZ291dmVybmVtZW50IG91dmVydCAtIENhbmFkYSAoaHR0cDovL291dmVydC5jYW5hZGEuY2EvZnIvbGljZW5jZS1kdS1nb3V2ZXJuZW1lbnQtb3V2ZXJ0LWNhbmFkYSk8L3JpZ2h0cz4NCiAgPC9yaWdodHNMaXN0Pg0KICA8ZGVzY3JpcHRpb25zPg0KICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0Ij5Eb25uw6llcyBkZSBsJ0ludmVudGFpcmUgY2FuYWRpZW4gZGVzIHRlcnJlcyBodW1pZGVzIChJQ1RIKSBwb3VyIGxlcyDDjmxlcyBkZSBsYSBNYWRlbGVpbmUgZXQgY3LDqcOpZXMgc2Vsb24gbGEgbcOpdGhvZGUgZMOpdmVsb3Bww6llIHBhciBsZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIC0gcsOpZ2lvbiBkdSBRdcOpYmVjLg0KDQpMZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIGTigJlFbnZpcm9ubmVtZW50IENhbmFkYSwgcsOpZ2lvbiBkdSBRdcOpYmVjIChTQ0YtUWMpIGEgcHJvZHVpdCBlbnRyZSAyMDAzIGV0IDIwMDcgbGEgY2FydG9ncmFwaGllIGRlcyBtaWxpZXV4IGh1bWlkZXMgcG91ciBwbHVzaWV1cnMgc2l0ZXMgYXUgUXXDqWJlYy4gIENlcyBjYXJ0b2dyYXBoaWVzIG9udCDDqXTDqSByw6lhbGlzw6llcyBkYW5zIGxlIGNhZHJlIGRlIGzigJlJbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgaW5pdGnDqSBlbiAyMDAyLCB2aXNhbnQgbGEgY2xhc3NpZmljYXRpb24gZGVzIGNpbnEgZ3JhbmRlcyBjbGFzc2VzIGRlIG1pbGlldXggaHVtaWRlcyBzZWxvbiBsZSBTeXN0w6htZSBkZSBjYW5hZGllbiBkZSBjbGFzc2lmaWNhdGlvbiBkZXMgbWlsaWV1eCBodW1pZGVzLCBzb2l0IGJvZywgZmVuLCBtYXJhaXMsIG1hcsOpY2FnZSBldCBlYXUgcGV1IHByb2ZvbmRlLiAgTOKAmWFwcHJvY2hlIGNob2lzaWUgY29tYmluZSBs4oCZdXRpbGlzYXRpb24gZGVzIGltYWdlcyBzYXRlbGxpdGVzIExhbmRzYXQtVE0vRVRNIGV0IFJBREFSU0FULTEgYWluc2kgcXVlIGxhIGNsYXNzaWZpY2F0aW9uIGTigJlpbWFnZXMgYmFzw6llIHN1ciBsZXMgb2JqZXRzLg0KDQpMZXMgc2l0ZXMgcXVpIG9udCDDqXTDqSBjYXJ0b2dyYXBoacOpcyBzb250IHLDqXBhcnRpcyBkYW5zIHBsdXNpZXVycyDDqWNvem9uZXMgZXQgcmVwcsOpc2VudGVudCBkaWZmw6lyZW50cyB0eXBlcyBkZSBwYXlzYWdlcyBldCBk4oCZw6ljb3N5c3TDqG1lcy4gIENlcyBzaXRlcyBzb250IGxlIGxhYyBTYWludC1QaWVycmUsIGxlIGxhYyBCcm9tZSwgbGEgTW9udMOpcsOpZ2llLCBsZSBsYWMgU2FpbnQtRnJhbsOnb2lzIChBcHBhbGFjaGVzKSwgbGEgR3JhbmRlLVBsw6llLUJsZXVlLCBNb250bWFnbnksIGxlIGNhcCBUb3VybWVudGUsIGxhIGJhaWUgZGUgbOKAmUlzbGUtVmVydGUsIGxlIHBhcmMgbmF0aW9uYWwgZGUgbGEgTWF1cmljaWUsIGxlcyBJbGVzLWRlLWxhLU1hZGVsZWluZSwgUmFkaXNzb24gZXQgRWFzdG1haW4uICBMYSBzdXBlcmZpY2llIGNvdXZlcnRlIHBhciBsZXMgZG91emUgc2l0ZXMgZXN0IGRlIDQgJSBkdSB0ZXJyaXRvaXJlIHF1w6liw6ljb2lzLiAgRGUgcGx1cywgbGEgbcOpdGhvZGUgYSDDqXTDqSB0ZXN0w6kgcG91ciB1biBzaXRlIGVuIENvbG9tYmllLUJyaXRhbm5pcXVlIChWYW5jb3V2ZXIpIGFpbnNpIHF1J2F1eCBUZXJyaXRvaXJlcyBkdSBOb3JkLU91ZXN0IChLZW5kYWxsIElzbGFuZCkuDQoNCkF1IHRvdGFsIHBvdXIgbGVzIGRvdXplIHNpdGVzLCA4ICUgZHUgdGVycml0b2lyZSBlc3QgY291dmVydCBwYXIgbGVzIG1pbGlldXggaHVtaWRlcy4gIExlIHBvdXJjZW50YWdlIHBvdXIgY2hhY3VuIGRlcyBzaXRlcyB2YXJpZSBlbnRyZSAyICUgZXQgMTUgJS4gIExhIHZhbGlkYXRpb24gZGVzIGNsYXNzaWZpY2F0aW9ucyBhIMOpdMOpIGZhaXRlIHNlbG9uIHVuZSBtw6l0aG9kZSBkw6l2ZWxvcHDDqWUgcGFyIGxlIFNDRi1RYyBiYXPDqWUgc3VyIGzigJlpbnRlcnByw6l0YXRpb24gdmlzdWVsbGUgZGVzIGNvbXBvc8OpcyBjb2xvcsOpcyBMYW5kc2F0LiAgTGEgdmFsaWRhdGlvbiBhIMOpdMOpIGZhaXRlIHN1ciBkZXV4IG5pdmVhdXgsIHNvaXQgZW50cmUgbGUgbWlsaWV1IGh1bWlkZSBwYXIgcmFwcG9ydCBhdSBtaWxpZXUgc2VjLCBldCBzb2l0IGVudHJlIGxlcyBjaW5xIHR5cGVzIGRlIG1pbGlldXggaHVtaWRlcy4gIEzigJlleGFjdGl0dWRlIGdsb2JhbGUgcG91ciBsZSBwcmVtaWVyIG5pdmVhdSBkZSB2YWxpZGF0aW9uIHZhcmllIGVudHJlIDYxIGV0IDkxICUsIGV0IGVudHJlIDQ3IGV0IDk4ICUgcG91ciBsZSBkZXV4acOobWUgbml2ZWF1LjwvZGVzY3JpcHRpb24+DQogIDwvZGVzY3JpcHRpb25zPg0KICA8Z2VvTG9jYXRpb25zPg0KICAgIDxnZW9Mb2NhdGlvbj4NCiAgICAgIDxnZW9Mb2NhdGlvbkJveD4tNjIuMDUwNjk1MDM2MDM0MzIgNDcuMTQ1OTY4ODU3Nzk3ODU0IC02MS4zODg5MTgwNjY3MTE5NSAtNjEuMzg4OTE4MDY2NzExOTU8L2dlb0xvY2F0aW9uQm94Pg0KICAgIDwvZ2VvTG9jYXRpb24+DQogIDwvZ2VvTG9jYXRpb25zPg0KPC9yZXNvdXJjZT4="},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/e0b95ead-bccb-4078-85a2-4b1d7b1db897","type":"works","attributes":{"doi":"10.18164/e0b95ead-bccb-4078-85a2-4b1d7b1db897","identifier":"https://doi.org/10.18164/e0b95ead-bccb-4078-85a2-4b1d7b1db897","url":"http://data.ec.gc.ca/data/sites/systems/canadian-wetland-inventory-cwi-cap-tourmente-region","author":[{"literal":"Matthieu Allard"}],"title":"Inventaire canadien des terres humides (ICTH) ; Région du cap Tourmente","container-title":"Environment and Climate Change Canada","description":"Données de l'Inventaire canadien des terres humides (ICTH) pour la région du cap Tourmente et créées selon la méthode développée par le Service canadien de la faune - région du Québec.\n\nLe Service canadien de la faune d’Environnement Canada, région du Québec (SCF-Qc) a produit entre 2003 et 2007 la cartographie des milieux humides pour plusieurs sites au Québec.  Ces cartographies ont été réalisées dans le cadre de l’Inventaire canadien des terres humides (ICTH) initié en 2002, visant la classification des cinq grandes classes de milieux humides selon le Système de canadien de classification des milieux humides, soit bog, fen, marais, marécage et eau peu profonde.  L’approche choisie combine l’utilisation des images satellites Landsat-TM/ETM et RADARSAT-1 ainsi que la classification d’images basée sur les objets.\n\nLes sites qui ont été cartographiés sont répartis dans plusieurs écozones et représentent différents types de paysages et d’écosystèmes.  Ces sites sont le lac Saint-Pierre, le lac Brome, la Montérégie, le lac Saint-François (Appalaches), la Grande-Plée-Bleue, Montmagny, le cap Tourmente, la baie de l’Isle-Verte, le parc national de la Mauricie, les Iles-de-la-Madeleine, Radisson et Eastmain.  La superficie couverte par les douze sites est de 4 % du territoire québécois.  De plus, la méthode a été testé pour un site en Colombie-Britannique (Vancouver) ainsi qu'aux Territoires du Nord-Ouest (Kendall Island).\n\nAu total pour les douze sites, 8 % du territoire est couvert par les milieux humides.  Le pourcentage pour chacun des sites varie entre 2 % et 15 %.  La validation des classifications a été faite selon une méthode développée par le SCF-Qc basée sur l’interprétation visuelle des composés colorés Landsat.  La validation a été faite sur deux niveaux, soit entre le milieu humide par rapport au milieu sec, et soit entre les cinq types de milieux humides.  L’exactitude globale pour le premier niveau de validation varie entre 61 et 91 %, et entre 47 et 98 % pour le deuxième niveau.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2015","registered":"2018-05-10T13:12:09Z","checked":null,"updated":"2018-05-10T13:12:09Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0L2UwYjk1ZWFkLWJjY2ItNDA3OC04NWEyLTRiMWQ3YjFkYjg5NzwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPk1hdHRoaWV1IEFsbGFyZDwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5JbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgOyBSw6lnaW9uIGR1IGNhcCBUb3VybWVudGU8L3RpdGxlPg0KICA8L3RpdGxlcz4NCiAgPHB1Ymxpc2hlcj5FbnZpcm9ubWVudCBhbmQgQ2xpbWF0ZSBDaGFuZ2UgQ2FuYWRhPC9wdWJsaXNoZXI+DQogIDxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPg0KICA8c3ViamVjdHM+DQogICAgPHN1YmplY3Q+TWlsaWV1IGh1bWlkZTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5OYXR1cmUgZXQgYmlvZGl2ZXJzaXTDqSAtIGhhYml0YXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UXXDqWJlYyAoUUMpPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlF1w6liZWM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+Q2FwIFRvdXJtZW50ZTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5DbGFzc2lmaWNhdGlvbiBvcmllbnTDqWUgb2JqZXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+TGFuZHNhdDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5SYWRhcnNhdDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5PY2N1cGF0aW9uIGR1IHNvbDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5IYWJpdGF0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlN1cGVydmlzZXIgZXQgZ8OpcmVyIGwnw6l0YXQgZGVzIHNpdGVzPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlN5c3TDqG1lcyBkJ2luZm9ybWF0aW9uIHN1ciAgbCfDqXRhdCBkZXMgc2l0ZXM8L3N1YmplY3Q+DQogIDwvc3ViamVjdHM+DQogIDxsYW5ndWFnZT5lbmc8L2xhbmd1YWdlPg0KICA8cmVzb3VyY2VUeXBlIHJlc291cmNlVHlwZUdlbmVyYWw9IkRhdGFzZXQiPkRhdGFzZXQ8L3Jlc291cmNlVHlwZT4NCiAgPHZlcnNpb24+MTwvdmVyc2lvbj4NCiAgPHJpZ2h0c0xpc3Q+DQogICAgPHJpZ2h0cz5MaWNlbmNlIGR1IGdvdXZlcm5lbWVudCBvdXZlcnQgLSBDYW5hZGEgKGh0dHA6Ly9vdXZlcnQuY2FuYWRhLmNhL2ZyL2xpY2VuY2UtZHUtZ291dmVybmVtZW50LW91dmVydC1jYW5hZGEpPC9yaWdodHM+DQogIDwvcmlnaHRzTGlzdD4NCiAgPGRlc2NyaXB0aW9ucz4NCiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCI+RG9ubsOpZXMgZGUgbCdJbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgcG91ciBsYSByw6lnaW9uIGR1IGNhcCBUb3VybWVudGUgZXQgY3LDqcOpZXMgc2Vsb24gbGEgbcOpdGhvZGUgZMOpdmVsb3Bww6llIHBhciBsZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIC0gcsOpZ2lvbiBkdSBRdcOpYmVjLg0KDQpMZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIGTigJlFbnZpcm9ubmVtZW50IENhbmFkYSwgcsOpZ2lvbiBkdSBRdcOpYmVjIChTQ0YtUWMpIGEgcHJvZHVpdCBlbnRyZSAyMDAzIGV0IDIwMDcgbGEgY2FydG9ncmFwaGllIGRlcyBtaWxpZXV4IGh1bWlkZXMgcG91ciBwbHVzaWV1cnMgc2l0ZXMgYXUgUXXDqWJlYy4gIENlcyBjYXJ0b2dyYXBoaWVzIG9udCDDqXTDqSByw6lhbGlzw6llcyBkYW5zIGxlIGNhZHJlIGRlIGzigJlJbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgaW5pdGnDqSBlbiAyMDAyLCB2aXNhbnQgbGEgY2xhc3NpZmljYXRpb24gZGVzIGNpbnEgZ3JhbmRlcyBjbGFzc2VzIGRlIG1pbGlldXggaHVtaWRlcyBzZWxvbiBsZSBTeXN0w6htZSBkZSBjYW5hZGllbiBkZSBjbGFzc2lmaWNhdGlvbiBkZXMgbWlsaWV1eCBodW1pZGVzLCBzb2l0IGJvZywgZmVuLCBtYXJhaXMsIG1hcsOpY2FnZSBldCBlYXUgcGV1IHByb2ZvbmRlLiAgTOKAmWFwcHJvY2hlIGNob2lzaWUgY29tYmluZSBs4oCZdXRpbGlzYXRpb24gZGVzIGltYWdlcyBzYXRlbGxpdGVzIExhbmRzYXQtVE0vRVRNIGV0IFJBREFSU0FULTEgYWluc2kgcXVlIGxhIGNsYXNzaWZpY2F0aW9uIGTigJlpbWFnZXMgYmFzw6llIHN1ciBsZXMgb2JqZXRzLg0KDQpMZXMgc2l0ZXMgcXVpIG9udCDDqXTDqSBjYXJ0b2dyYXBoacOpcyBzb250IHLDqXBhcnRpcyBkYW5zIHBsdXNpZXVycyDDqWNvem9uZXMgZXQgcmVwcsOpc2VudGVudCBkaWZmw6lyZW50cyB0eXBlcyBkZSBwYXlzYWdlcyBldCBk4oCZw6ljb3N5c3TDqG1lcy4gIENlcyBzaXRlcyBzb250IGxlIGxhYyBTYWludC1QaWVycmUsIGxlIGxhYyBCcm9tZSwgbGEgTW9udMOpcsOpZ2llLCBsZSBsYWMgU2FpbnQtRnJhbsOnb2lzIChBcHBhbGFjaGVzKSwgbGEgR3JhbmRlLVBsw6llLUJsZXVlLCBNb250bWFnbnksIGxlIGNhcCBUb3VybWVudGUsIGxhIGJhaWUgZGUgbOKAmUlzbGUtVmVydGUsIGxlIHBhcmMgbmF0aW9uYWwgZGUgbGEgTWF1cmljaWUsIGxlcyBJbGVzLWRlLWxhLU1hZGVsZWluZSwgUmFkaXNzb24gZXQgRWFzdG1haW4uICBMYSBzdXBlcmZpY2llIGNvdXZlcnRlIHBhciBsZXMgZG91emUgc2l0ZXMgZXN0IGRlIDQgJSBkdSB0ZXJyaXRvaXJlIHF1w6liw6ljb2lzLiAgRGUgcGx1cywgbGEgbcOpdGhvZGUgYSDDqXTDqSB0ZXN0w6kgcG91ciB1biBzaXRlIGVuIENvbG9tYmllLUJyaXRhbm5pcXVlIChWYW5jb3V2ZXIpIGFpbnNpIHF1J2F1eCBUZXJyaXRvaXJlcyBkdSBOb3JkLU91ZXN0IChLZW5kYWxsIElzbGFuZCkuDQoNCkF1IHRvdGFsIHBvdXIgbGVzIGRvdXplIHNpdGVzLCA4ICUgZHUgdGVycml0b2lyZSBlc3QgY291dmVydCBwYXIgbGVzIG1pbGlldXggaHVtaWRlcy4gIExlIHBvdXJjZW50YWdlIHBvdXIgY2hhY3VuIGRlcyBzaXRlcyB2YXJpZSBlbnRyZSAyICUgZXQgMTUgJS4gIExhIHZhbGlkYXRpb24gZGVzIGNsYXNzaWZpY2F0aW9ucyBhIMOpdMOpIGZhaXRlIHNlbG9uIHVuZSBtw6l0aG9kZSBkw6l2ZWxvcHDDqWUgcGFyIGxlIFNDRi1RYyBiYXPDqWUgc3VyIGzigJlpbnRlcnByw6l0YXRpb24gdmlzdWVsbGUgZGVzIGNvbXBvc8OpcyBjb2xvcsOpcyBMYW5kc2F0LiAgTGEgdmFsaWRhdGlvbiBhIMOpdMOpIGZhaXRlIHN1ciBkZXV4IG5pdmVhdXgsIHNvaXQgZW50cmUgbGUgbWlsaWV1IGh1bWlkZSBwYXIgcmFwcG9ydCBhdSBtaWxpZXUgc2VjLCBldCBzb2l0IGVudHJlIGxlcyBjaW5xIHR5cGVzIGRlIG1pbGlldXggaHVtaWRlcy4gIEzigJlleGFjdGl0dWRlIGdsb2JhbGUgcG91ciBsZSBwcmVtaWVyIG5pdmVhdSBkZSB2YWxpZGF0aW9uIHZhcmllIGVudHJlIDYxIGV0IDkxICUsIGV0IGVudHJlIDQ3IGV0IDk4ICUgcG91ciBsZSBkZXV4acOobWUgbml2ZWF1LjwvZGVzY3JpcHRpb24+DQogIDwvZGVzY3JpcHRpb25zPg0KICA8Z2VvTG9jYXRpb25zPg0KICAgIDxnZW9Mb2NhdGlvbj4NCiAgICAgIDxnZW9Mb2NhdGlvbkJveD4tNzAuOTI1NSA0Ni45OTkgLTcwLjY0NjI2OCAtNzAuNjQ2MjY4PC9nZW9Mb2NhdGlvbkJveD4NCiAgICA8L2dlb0xvY2F0aW9uPg0KICA8L2dlb0xvY2F0aW9ucz4NCjwvcmVzb3VyY2U+"},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/df7f2e9e-cb22-42b4-bce5-a0a84e1597a2","type":"works","attributes":{"doi":"10.18164/df7f2e9e-cb22-42b4-bce5-a0a84e1597a2","identifier":"https://doi.org/10.18164/df7f2e9e-cb22-42b4-bce5-a0a84e1597a2","url":"http://data.ec.gc.ca/data/sites/systems/canadian-wetland-inventory-cwi-appalaches-region","author":[{"literal":"Matthieu Allard"}],"title":"Inventaire canadien des terres humides (ICTH) ; Région des Appalaches","container-title":"Environment and Climate Change Canada","description":"Données de l'Inventaire canadien des terres humides (ICTH) pour région des Appalaches et créées selon la méthode développée par le Service canadien de la faune - région du Québec.\n\nLe Service canadien de la faune d’Environnement Canada, région du Québec (SCF-Qc) a produit entre 2003 et 2007 la cartographie des milieux humides pour plusieurs sites au Québec.  Ces cartographies ont été réalisées dans le cadre de l’Inventaire canadien des terres humides (ICTH) initié en 2002, visant la classification des cinq grandes classes de milieux humides selon le Système de canadien de classification des milieux humides, soit bog, fen, marais, marécage et eau peu profonde.  L’approche choisie combine l’utilisation des images satellites Landsat-TM/ETM et RADARSAT-1 ainsi que la classification d’images basée sur les objets.\n\nLes sites qui ont été cartographiés sont répartis dans plusieurs écozones et représentent différents types de paysages et d’écosystèmes.  Ces sites sont le lac Saint-Pierre, le lac Brome, la Montérégie, le lac Saint-François (Appalaches), la Grande-Plée-Bleue, Montmagny, le cap Tourmente, la baie de l’Isle-Verte, le parc national de la Mauricie, les Iles-de-la-Madeleine, Radisson et Eastmain.  La superficie couverte par les douze sites est de 4 % du territoire québécois.  De plus, la méthode a été testé pour un site en Colombie-Britannique (Vancouver) ainsi qu'aux Territoires du Nord-Ouest (Kendall Island).\n\nAu total pour les douze sites, 8 % du territoire est couvert par les milieux humides.  Le pourcentage pour chacun des sites varie entre 2 % et 15 %.  La validation des classifications a été faite selon une méthode développée par le SCF-Qc basée sur l’interprétation visuelle des composés colorés Landsat.  La validation a été faite sur deux niveaux, soit entre le milieu humide par rapport au milieu sec, et soit entre les cinq types de milieux humides.  L’exactitude globale pour le premier niveau de validation varie entre 61 et 91 %, et entre 47 et 98 % pour le deuxième niveau.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2015","registered":"2018-05-10T13:12:20Z","checked":null,"updated":"2018-05-10T13:12:20Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0L2RmN2YyZTllLWNiMjItNDJiNC1iY2U1LWEwYTg0ZTE1OTdhMjwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPk1hdHRoaWV1IEFsbGFyZDwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5JbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgOyBSw6lnaW9uIGRlcyBBcHBhbGFjaGVzPC90aXRsZT4NCiAgPC90aXRsZXM+DQogIDxwdWJsaXNoZXI+RW52aXJvbm1lbnQgYW5kIENsaW1hdGUgQ2hhbmdlIENhbmFkYTwvcHVibGlzaGVyPg0KICA8cHVibGljYXRpb25ZZWFyPjIwMTU8L3B1YmxpY2F0aW9uWWVhcj4NCiAgPHN1YmplY3RzPg0KICAgIDxzdWJqZWN0Pk1pbGlldSBodW1pZGU8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+TmF0dXJlIGV0IGJpb2RpdmVyc2l0w6kgLSBoYWJpdGF0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlF1w6liZWMgKFFDKTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5FbXBsYWNlbWVudDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5RdcOpYmVjPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkFwcGFsYWNoZXM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+Q2xhc3NpZmljYXRpb24gb3JpZW50w6llIG9iamV0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkxhbmRzYXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UmFkYXJzYXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+T2NjdXBhdGlvbiBkdSBzb2w8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+SGFiaXRhdDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5TdXBlcnZpc2VyIGV0IGfDqXJlciBsJ8OpdGF0IGRlcyBzaXRlczwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5TeXN0w6htZXMgZCdpbmZvcm1hdGlvbiBzdXIgIGwnw6l0YXQgZGVzIHNpdGVzPC9zdWJqZWN0Pg0KICA8L3N1YmplY3RzPg0KICA8bGFuZ3VhZ2U+ZW5nPC9sYW5ndWFnZT4NCiAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ij5EYXRhc2V0PC9yZXNvdXJjZVR5cGU+DQogIDx2ZXJzaW9uPjE8L3ZlcnNpb24+DQogIDxyaWdodHNMaXN0Pg0KICAgIDxyaWdodHM+TGljZW5jZSBkdSBnb3V2ZXJuZW1lbnQgb3V2ZXJ0IC0gQ2FuYWRhIChodHRwOi8vb3V2ZXJ0LmNhbmFkYS5jYS9mci9saWNlbmNlLWR1LWdvdXZlcm5lbWVudC1vdXZlcnQtY2FuYWRhKTwvcmlnaHRzPg0KICA8L3JpZ2h0c0xpc3Q+DQogIDxkZXNjcmlwdGlvbnM+DQogICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiPkRvbm7DqWVzIGRlIGwnSW52ZW50YWlyZSBjYW5hZGllbiBkZXMgdGVycmVzIGh1bWlkZXMgKElDVEgpIHBvdXIgcsOpZ2lvbiBkZXMgQXBwYWxhY2hlcyBldCBjcsOpw6llcyBzZWxvbiBsYSBtw6l0aG9kZSBkw6l2ZWxvcHDDqWUgcGFyIGxlIFNlcnZpY2UgY2FuYWRpZW4gZGUgbGEgZmF1bmUgLSByw6lnaW9uIGR1IFF1w6liZWMuDQoNCkxlIFNlcnZpY2UgY2FuYWRpZW4gZGUgbGEgZmF1bmUgZOKAmUVudmlyb25uZW1lbnQgQ2FuYWRhLCByw6lnaW9uIGR1IFF1w6liZWMgKFNDRi1RYykgYSBwcm9kdWl0IGVudHJlIDIwMDMgZXQgMjAwNyBsYSBjYXJ0b2dyYXBoaWUgZGVzIG1pbGlldXggaHVtaWRlcyBwb3VyIHBsdXNpZXVycyBzaXRlcyBhdSBRdcOpYmVjLiAgQ2VzIGNhcnRvZ3JhcGhpZXMgb250IMOpdMOpIHLDqWFsaXPDqWVzIGRhbnMgbGUgY2FkcmUgZGUgbOKAmUludmVudGFpcmUgY2FuYWRpZW4gZGVzIHRlcnJlcyBodW1pZGVzIChJQ1RIKSBpbml0acOpIGVuIDIwMDIsIHZpc2FudCBsYSBjbGFzc2lmaWNhdGlvbiBkZXMgY2lucSBncmFuZGVzIGNsYXNzZXMgZGUgbWlsaWV1eCBodW1pZGVzIHNlbG9uIGxlIFN5c3TDqG1lIGRlIGNhbmFkaWVuIGRlIGNsYXNzaWZpY2F0aW9uIGRlcyBtaWxpZXV4IGh1bWlkZXMsIHNvaXQgYm9nLCBmZW4sIG1hcmFpcywgbWFyw6ljYWdlIGV0IGVhdSBwZXUgcHJvZm9uZGUuICBM4oCZYXBwcm9jaGUgY2hvaXNpZSBjb21iaW5lIGzigJl1dGlsaXNhdGlvbiBkZXMgaW1hZ2VzIHNhdGVsbGl0ZXMgTGFuZHNhdC1UTS9FVE0gZXQgUkFEQVJTQVQtMSBhaW5zaSBxdWUgbGEgY2xhc3NpZmljYXRpb24gZOKAmWltYWdlcyBiYXPDqWUgc3VyIGxlcyBvYmpldHMuDQoNCkxlcyBzaXRlcyBxdWkgb250IMOpdMOpIGNhcnRvZ3JhcGhpw6lzIHNvbnQgcsOpcGFydGlzIGRhbnMgcGx1c2lldXJzIMOpY296b25lcyBldCByZXByw6lzZW50ZW50IGRpZmbDqXJlbnRzIHR5cGVzIGRlIHBheXNhZ2VzIGV0IGTigJnDqWNvc3lzdMOobWVzLiAgQ2VzIHNpdGVzIHNvbnQgbGUgbGFjIFNhaW50LVBpZXJyZSwgbGUgbGFjIEJyb21lLCBsYSBNb250w6lyw6lnaWUsIGxlIGxhYyBTYWludC1GcmFuw6dvaXMgKEFwcGFsYWNoZXMpLCBsYSBHcmFuZGUtUGzDqWUtQmxldWUsIE1vbnRtYWdueSwgbGUgY2FwIFRvdXJtZW50ZSwgbGEgYmFpZSBkZSBs4oCZSXNsZS1WZXJ0ZSwgbGUgcGFyYyBuYXRpb25hbCBkZSBsYSBNYXVyaWNpZSwgbGVzIElsZXMtZGUtbGEtTWFkZWxlaW5lLCBSYWRpc3NvbiBldCBFYXN0bWFpbi4gIExhIHN1cGVyZmljaWUgY291dmVydGUgcGFyIGxlcyBkb3V6ZSBzaXRlcyBlc3QgZGUgNCAlIGR1IHRlcnJpdG9pcmUgcXXDqWLDqWNvaXMuICBEZSBwbHVzLCBsYSBtw6l0aG9kZSBhIMOpdMOpIHRlc3TDqSBwb3VyIHVuIHNpdGUgZW4gQ29sb21iaWUtQnJpdGFubmlxdWUgKFZhbmNvdXZlcikgYWluc2kgcXUnYXV4IFRlcnJpdG9pcmVzIGR1IE5vcmQtT3Vlc3QgKEtlbmRhbGwgSXNsYW5kKS4NCg0KQXUgdG90YWwgcG91ciBsZXMgZG91emUgc2l0ZXMsIDggJSBkdSB0ZXJyaXRvaXJlIGVzdCBjb3V2ZXJ0IHBhciBsZXMgbWlsaWV1eCBodW1pZGVzLiAgTGUgcG91cmNlbnRhZ2UgcG91ciBjaGFjdW4gZGVzIHNpdGVzIHZhcmllIGVudHJlIDIgJSBldCAxNSAlLiAgTGEgdmFsaWRhdGlvbiBkZXMgY2xhc3NpZmljYXRpb25zIGEgw6l0w6kgZmFpdGUgc2Vsb24gdW5lIG3DqXRob2RlIGTDqXZlbG9wcMOpZSBwYXIgbGUgU0NGLVFjIGJhc8OpZSBzdXIgbOKAmWludGVycHLDqXRhdGlvbiB2aXN1ZWxsZSBkZXMgY29tcG9zw6lzIGNvbG9yw6lzIExhbmRzYXQuICBMYSB2YWxpZGF0aW9uIGEgw6l0w6kgZmFpdGUgc3VyIGRldXggbml2ZWF1eCwgc29pdCBlbnRyZSBsZSBtaWxpZXUgaHVtaWRlIHBhciByYXBwb3J0IGF1IG1pbGlldSBzZWMsIGV0IHNvaXQgZW50cmUgbGVzIGNpbnEgdHlwZXMgZGUgbWlsaWV1eCBodW1pZGVzLiAgTOKAmWV4YWN0aXR1ZGUgZ2xvYmFsZSBwb3VyIGxlIHByZW1pZXIgbml2ZWF1IGRlIHZhbGlkYXRpb24gdmFyaWUgZW50cmUgNjEgZXQgOTEgJSwgZXQgZW50cmUgNDcgZXQgOTggJSBwb3VyIGxlIGRldXhpw6htZSBuaXZlYXUuPC9kZXNjcmlwdGlvbj4NCiAgPC9kZXNjcmlwdGlvbnM+DQogIDxnZW9Mb2NhdGlvbnM+DQogICAgPGdlb0xvY2F0aW9uPg0KICAgICAgPGdlb0xvY2F0aW9uQm94Pi03MS42MyA0NS4yNCAtNzAuMjUgLTcwLjI1PC9nZW9Mb2NhdGlvbkJveD4NCiAgICA8L2dlb0xvY2F0aW9uPg0KICA8L2dlb0xvY2F0aW9ucz4NCjwvcmVzb3VyY2U+"},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/c0f84e61-9fdd-45c2-81b7-7d26cbbea0a9","type":"works","attributes":{"doi":"10.18164/c0f84e61-9fdd-45c2-81b7-7d26cbbea0a9","identifier":"https://doi.org/10.18164/c0f84e61-9fdd-45c2-81b7-7d26cbbea0a9","url":"http://data.ec.gc.ca/data/sites/systems/canadian-wetland-inventory-cwi-eastmain-region","author":[{"literal":"Matthieu Allard"}],"title":"Inventaire canadien des terres humides (ICTH) ; Région de Eastmain","container-title":"Environment and Climate Change Canada","description":"Données de l'Inventaire canadien des terres humides (ICTH) pour la région de Eastmain et créées selon la méthode développée par le Service canadien de la faune - région du Québec.\n\nLe Service canadien de la faune d’Environnement Canada, région du Québec (SCF-Qc) a produit entre 2003 et 2007 la cartographie des milieux humides pour plusieurs sites au Québec.  Ces cartographies ont été réalisées dans le cadre de l’Inventaire canadien des terres humides (ICTH) initié en 2002, visant la classification des cinq grandes classes de milieux humides selon le Système de canadien de classification des milieux humides, soit bog, fen, marais, marécage et eau peu profonde.  L’approche choisie combine l’utilisation des images satellites Landsat-TM/ETM et RADARSAT-1 ainsi que la classification d’images basée sur les objets.\n\nLes sites qui ont été cartographiés sont répartis dans plusieurs écozones et représentent différents types de paysages et d’écosystèmes.  Ces sites sont le lac Saint-Pierre, le lac Brome, la Montérégie, le lac Saint-François (Appalaches), la Grande-Plée-Bleue, Montmagny, le cap Tourmente, la baie de l’Isle-Verte, le parc national de la Mauricie, les Iles-de-la-Madeleine, Radisson et Eastmain.  La superficie couverte par les douze sites est de 4 % du territoire québécois.  De plus, la méthode a été testé pour un site en Colombie-Britannique (Vancouver) ainsi qu'aux Territoires du Nord-Ouest (Kendall Island).\n\nAu total pour les douze sites, 8 % du territoire est couvert par les milieux humides.  Le pourcentage pour chacun des sites varie entre 2 % et 15 %.  La validation des classifications a été faite selon une méthode développée par le SCF-Qc basée sur l’interprétation visuelle des composés colorés Landsat.  La validation a été faite sur deux niveaux, soit entre le milieu humide par rapport au milieu sec, et soit entre les cinq types de milieux humides.  L’exactitude globale pour le premier niveau de validation varie entre 61 et 91 %, et entre 47 et 98 % pour le deuxième niveau.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2015","registered":"2018-05-10T13:12:31Z","checked":null,"updated":"2018-05-10T13:12:31Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0L2MwZjg0ZTYxLTlmZGQtNDVjMi04MWI3LTdkMjZjYmJlYTBhOTwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPk1hdHRoaWV1IEFsbGFyZDwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5JbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgOyBSw6lnaW9uIGRlIEVhc3RtYWluPC90aXRsZT4NCiAgPC90aXRsZXM+DQogIDxwdWJsaXNoZXI+RW52aXJvbm1lbnQgYW5kIENsaW1hdGUgQ2hhbmdlIENhbmFkYTwvcHVibGlzaGVyPg0KICA8cHVibGljYXRpb25ZZWFyPjIwMTU8L3B1YmxpY2F0aW9uWWVhcj4NCiAgPHN1YmplY3RzPg0KICAgIDxzdWJqZWN0Pk1pbGlldSBodW1pZGU8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+TmF0dXJlIGV0IGJpb2RpdmVyc2l0w6kgLSBoYWJpdGF0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlF1w6liZWMgKFFDKTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5RdcOpYmVjPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkVhc3RtYWluPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkNsYXNzaWZpY2F0aW9uIG9yaWVudMOpZSBvYmpldDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5MYW5kc2F0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlJhZGFyc2F0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0Pk9jY3VwYXRpb24gZHUgc29sPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkhhYml0YXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+U3VwZXJ2aXNlciBldCBnw6lyZXIgbCfDqXRhdCBkZXMgc2l0ZXM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+U3lzdMOobWVzIGQnaW5mb3JtYXRpb24gc3VyICBsJ8OpdGF0IGRlcyBzaXRlczwvc3ViamVjdD4NCiAgPC9zdWJqZWN0cz4NCiAgPGxhbmd1YWdlPmVuZzwvbGFuZ3VhZ2U+DQogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YXNldDwvcmVzb3VyY2VUeXBlPg0KICA8dmVyc2lvbj4xPC92ZXJzaW9uPg0KICA8cmlnaHRzTGlzdD4NCiAgICA8cmlnaHRzPkxpY2VuY2UgZHUgZ291dmVybmVtZW50IG91dmVydCAtIENhbmFkYSAoaHR0cDovL291dmVydC5jYW5hZGEuY2EvZnIvbGljZW5jZS1kdS1nb3V2ZXJuZW1lbnQtb3V2ZXJ0LWNhbmFkYSk8L3JpZ2h0cz4NCiAgPC9yaWdodHNMaXN0Pg0KICA8ZGVzY3JpcHRpb25zPg0KICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0Ij5Eb25uw6llcyBkZSBsJ0ludmVudGFpcmUgY2FuYWRpZW4gZGVzIHRlcnJlcyBodW1pZGVzIChJQ1RIKSBwb3VyIGxhIHLDqWdpb24gZGUgRWFzdG1haW4gZXQgY3LDqcOpZXMgc2Vsb24gbGEgbcOpdGhvZGUgZMOpdmVsb3Bww6llIHBhciBsZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIC0gcsOpZ2lvbiBkdSBRdcOpYmVjLg0KDQpMZSBTZXJ2aWNlIGNhbmFkaWVuIGRlIGxhIGZhdW5lIGTigJlFbnZpcm9ubmVtZW50IENhbmFkYSwgcsOpZ2lvbiBkdSBRdcOpYmVjIChTQ0YtUWMpIGEgcHJvZHVpdCBlbnRyZSAyMDAzIGV0IDIwMDcgbGEgY2FydG9ncmFwaGllIGRlcyBtaWxpZXV4IGh1bWlkZXMgcG91ciBwbHVzaWV1cnMgc2l0ZXMgYXUgUXXDqWJlYy4gIENlcyBjYXJ0b2dyYXBoaWVzIG9udCDDqXTDqSByw6lhbGlzw6llcyBkYW5zIGxlIGNhZHJlIGRlIGzigJlJbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgaW5pdGnDqSBlbiAyMDAyLCB2aXNhbnQgbGEgY2xhc3NpZmljYXRpb24gZGVzIGNpbnEgZ3JhbmRlcyBjbGFzc2VzIGRlIG1pbGlldXggaHVtaWRlcyBzZWxvbiBsZSBTeXN0w6htZSBkZSBjYW5hZGllbiBkZSBjbGFzc2lmaWNhdGlvbiBkZXMgbWlsaWV1eCBodW1pZGVzLCBzb2l0IGJvZywgZmVuLCBtYXJhaXMsIG1hcsOpY2FnZSBldCBlYXUgcGV1IHByb2ZvbmRlLiAgTOKAmWFwcHJvY2hlIGNob2lzaWUgY29tYmluZSBs4oCZdXRpbGlzYXRpb24gZGVzIGltYWdlcyBzYXRlbGxpdGVzIExhbmRzYXQtVE0vRVRNIGV0IFJBREFSU0FULTEgYWluc2kgcXVlIGxhIGNsYXNzaWZpY2F0aW9uIGTigJlpbWFnZXMgYmFzw6llIHN1ciBsZXMgb2JqZXRzLg0KDQpMZXMgc2l0ZXMgcXVpIG9udCDDqXTDqSBjYXJ0b2dyYXBoacOpcyBzb250IHLDqXBhcnRpcyBkYW5zIHBsdXNpZXVycyDDqWNvem9uZXMgZXQgcmVwcsOpc2VudGVudCBkaWZmw6lyZW50cyB0eXBlcyBkZSBwYXlzYWdlcyBldCBk4oCZw6ljb3N5c3TDqG1lcy4gIENlcyBzaXRlcyBzb250IGxlIGxhYyBTYWludC1QaWVycmUsIGxlIGxhYyBCcm9tZSwgbGEgTW9udMOpcsOpZ2llLCBsZSBsYWMgU2FpbnQtRnJhbsOnb2lzIChBcHBhbGFjaGVzKSwgbGEgR3JhbmRlLVBsw6llLUJsZXVlLCBNb250bWFnbnksIGxlIGNhcCBUb3VybWVudGUsIGxhIGJhaWUgZGUgbOKAmUlzbGUtVmVydGUsIGxlIHBhcmMgbmF0aW9uYWwgZGUgbGEgTWF1cmljaWUsIGxlcyBJbGVzLWRlLWxhLU1hZGVsZWluZSwgUmFkaXNzb24gZXQgRWFzdG1haW4uICBMYSBzdXBlcmZpY2llIGNvdXZlcnRlIHBhciBsZXMgZG91emUgc2l0ZXMgZXN0IGRlIDQgJSBkdSB0ZXJyaXRvaXJlIHF1w6liw6ljb2lzLiAgRGUgcGx1cywgbGEgbcOpdGhvZGUgYSDDqXTDqSB0ZXN0w6kgcG91ciB1biBzaXRlIGVuIENvbG9tYmllLUJyaXRhbm5pcXVlIChWYW5jb3V2ZXIpIGFpbnNpIHF1J2F1eCBUZXJyaXRvaXJlcyBkdSBOb3JkLU91ZXN0IChLZW5kYWxsIElzbGFuZCkuDQoNCkF1IHRvdGFsIHBvdXIgbGVzIGRvdXplIHNpdGVzLCA4ICUgZHUgdGVycml0b2lyZSBlc3QgY291dmVydCBwYXIgbGVzIG1pbGlldXggaHVtaWRlcy4gIExlIHBvdXJjZW50YWdlIHBvdXIgY2hhY3VuIGRlcyBzaXRlcyB2YXJpZSBlbnRyZSAyICUgZXQgMTUgJS4gIExhIHZhbGlkYXRpb24gZGVzIGNsYXNzaWZpY2F0aW9ucyBhIMOpdMOpIGZhaXRlIHNlbG9uIHVuZSBtw6l0aG9kZSBkw6l2ZWxvcHDDqWUgcGFyIGxlIFNDRi1RYyBiYXPDqWUgc3VyIGzigJlpbnRlcnByw6l0YXRpb24gdmlzdWVsbGUgZGVzIGNvbXBvc8OpcyBjb2xvcsOpcyBMYW5kc2F0LiAgTGEgdmFsaWRhdGlvbiBhIMOpdMOpIGZhaXRlIHN1ciBkZXV4IG5pdmVhdXgsIHNvaXQgZW50cmUgbGUgbWlsaWV1IGh1bWlkZSBwYXIgcmFwcG9ydCBhdSBtaWxpZXUgc2VjLCBldCBzb2l0IGVudHJlIGxlcyBjaW5xIHR5cGVzIGRlIG1pbGlldXggaHVtaWRlcy4gIEzigJlleGFjdGl0dWRlIGdsb2JhbGUgcG91ciBsZSBwcmVtaWVyIG5pdmVhdSBkZSB2YWxpZGF0aW9uIHZhcmllIGVudHJlIDYxIGV0IDkxICUsIGV0IGVudHJlIDQ3IGV0IDk4ICUgcG91ciBsZSBkZXV4acOobWUgbml2ZWF1LjwvZGVzY3JpcHRpb24+DQogIDwvZGVzY3JpcHRpb25zPg0KICA8Z2VvTG9jYXRpb25zPg0KICAgIDxnZW9Mb2NhdGlvbj4NCiAgICAgIDxnZW9Mb2NhdGlvbkJveD4tNzYuOTkyODM2IDUxLjU2NTkgLTc0LjAwMjYgLTc0LjAwMjY8L2dlb0xvY2F0aW9uQm94Pg0KICAgIDwvZ2VvTG9jYXRpb24+DQogIDwvZ2VvTG9jYXRpb25zPg0KPC9yZXNvdXJjZT4="},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/65c9c031-ae36-4921-be81-ea0311494b61","type":"works","attributes":{"doi":"10.18164/65c9c031-ae36-4921-be81-ea0311494b61","identifier":"https://doi.org/10.18164/65c9c031-ae36-4921-be81-ea0311494b61","url":"http://data.ec.gc.ca/data/species/systems/national-wetland-inventory-nwi-la-mauricie-national-park","author":[{"literal":"Matthieu Allard"}],"title":"Inventaire canadien des terres humides (ICTH) ; Parc national de la Mauricie","container-title":"Environment and Climate Change Canada","description":"Données de l'Inventaire canadien des terres humides (ICTH) pour le secteur du Parc national de la Mauricie et créées selon la méthode développée par le Service canadien de la faune - région du Québec.\n\nLe Service canadien de la faune d’Environnement Canada, région du Québec (SCF-Qc) a produit entre 2003 et 2007 la cartographie des milieux humides pour plusieurs sites au Québec.  Ces cartographies ont été réalisées dans le cadre de l’Inventaire canadien des terres humides (ICTH) initié en 2002, visant la classification des cinq grandes classes de milieux humides selon le Système de canadien de classification des milieux humides, soit bog, fen, marais, marécage et eau peu profonde.  L’approche choisie combine l’utilisation des images satellites SPOT-5 et RADARSAT-1 ainsi que la classification d’images basée sur les objets.\n\nLes sites qui ont été cartographiés sont répartis dans plusieurs écozones et représentent différents types de paysages et d’écosystèmes.  Ces sites sont le lac Saint-Pierre, le lac Brome, la Montérégie, le lac Saint-François (Appalaches), la Grande-Plée-Bleue, Montmagny, le cap Tourmente, la baie de l’Isle-Verte, le parc national de la Mauricie, les Iles-de-la-Madeleine, Radisson et Eastmain.  La superficie couverte par les douze sites est de 4 % du territoire québécois.  De plus, la méthode a été testé pour un site en Colombie-Britannique (Vancouver) ainsi qu'aux Territoires du Nord-Ouest (Kendall Island).\n\nAu total pour les douze sites, 8 % du territoire est couvert par les milieux humides.  Le pourcentage pour chacun des sites varie entre 2 % et 15 %.  La validation des classifications a été faite selon une méthode développée par le SCF-Qc basée sur l’interprétation visuelle des composés colorés Landsat.  La validation a été faite sur deux niveaux, soit entre le milieu humide par rapport au milieu sec, et soit entre les cinq types de milieux humides.  L’exactitude globale pour le premier niveau de validation varie entre 61 et 91 %, et entre 47 et 98 % pour le deuxième niveau.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2008","registered":"2018-05-10T13:12:46Z","checked":null,"updated":"2018-05-10T13:12:46Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0LzY1YzljMDMxLWFlMzYtNDkyMS1iZTgxLWVhMDMxMTQ5NGI2MTwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPk1hdHRoaWV1IEFsbGFyZDwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5JbnZlbnRhaXJlIGNhbmFkaWVuIGRlcyB0ZXJyZXMgaHVtaWRlcyAoSUNUSCkgOyBQYXJjIG5hdGlvbmFsIGRlIGxhIE1hdXJpY2llPC90aXRsZT4NCiAgPC90aXRsZXM+DQogIDxwdWJsaXNoZXI+RW52aXJvbm1lbnQgYW5kIENsaW1hdGUgQ2hhbmdlIENhbmFkYTwvcHVibGlzaGVyPg0KICA8cHVibGljYXRpb25ZZWFyPjIwMDg8L3B1YmxpY2F0aW9uWWVhcj4NCiAgPHN1YmplY3RzPg0KICAgIDxzdWJqZWN0Pk1pbGlldSBodW1pZGU8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+TmF0dXJlIGV0IGJpb2RpdmVyc2l0w6kgLSBoYWJpdGF0PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlF1w6liZWMgKFFDKTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5FbXBsYWNlbWVudDwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5NYXVyaWNpZTwvc3ViamVjdD4NCiAgICA8c3ViamVjdD5DbGFzc2lmaWNhdGlvbiBvcmllbnTDqWUgb2JqZXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+U1BPVC01PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlJBREFSU0FUPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0Pk9jY3VwYXRpb24gZHUgc29sPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PkhhYml0YXQ8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UHJvdMOpZ2VyIGxlIGJpZW4tw6p0cmUgZGVzIGVzcMOoY2VzPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlN5c3TDqG1lcyBkJ2luZm9ybWF0aW9uIHJlbGF0aWZzIGF1eCBlc3DDqGNlczwvc3ViamVjdD4NCiAgPC9zdWJqZWN0cz4NCiAgPGxhbmd1YWdlPmVuZzwvbGFuZ3VhZ2U+DQogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YXNldDwvcmVzb3VyY2VUeXBlPg0KICA8dmVyc2lvbj4xPC92ZXJzaW9uPg0KICA8cmlnaHRzTGlzdD4NCiAgICA8cmlnaHRzPkxpY2VuY2UgZHUgZ291dmVybmVtZW50IG91dmVydCAtIENhbmFkYSAoaHR0cDovL291dmVydC5jYW5hZGEuY2EvZnIvbGljZW5jZS1kdS1nb3V2ZXJuZW1lbnQtb3V2ZXJ0LWNhbmFkYSk8L3JpZ2h0cz4NCiAgPC9yaWdodHNMaXN0Pg0KICA8ZGVzY3JpcHRpb25zPg0KICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0Ij5Eb25uw6llcyBkZSBsJ0ludmVudGFpcmUgY2FuYWRpZW4gZGVzIHRlcnJlcyBodW1pZGVzIChJQ1RIKSBwb3VyIGxlIHNlY3RldXIgZHUgUGFyYyBuYXRpb25hbCBkZSBsYSBNYXVyaWNpZSBldCBjcsOpw6llcyBzZWxvbiBsYSBtw6l0aG9kZSBkw6l2ZWxvcHDDqWUgcGFyIGxlIFNlcnZpY2UgY2FuYWRpZW4gZGUgbGEgZmF1bmUgLSByw6lnaW9uIGR1IFF1w6liZWMuDQoNCkxlIFNlcnZpY2UgY2FuYWRpZW4gZGUgbGEgZmF1bmUgZOKAmUVudmlyb25uZW1lbnQgQ2FuYWRhLCByw6lnaW9uIGR1IFF1w6liZWMgKFNDRi1RYykgYSBwcm9kdWl0IGVudHJlIDIwMDMgZXQgMjAwNyBsYSBjYXJ0b2dyYXBoaWUgZGVzIG1pbGlldXggaHVtaWRlcyBwb3VyIHBsdXNpZXVycyBzaXRlcyBhdSBRdcOpYmVjLiAgQ2VzIGNhcnRvZ3JhcGhpZXMgb250IMOpdMOpIHLDqWFsaXPDqWVzIGRhbnMgbGUgY2FkcmUgZGUgbOKAmUludmVudGFpcmUgY2FuYWRpZW4gZGVzIHRlcnJlcyBodW1pZGVzIChJQ1RIKSBpbml0acOpIGVuIDIwMDIsIHZpc2FudCBsYSBjbGFzc2lmaWNhdGlvbiBkZXMgY2lucSBncmFuZGVzIGNsYXNzZXMgZGUgbWlsaWV1eCBodW1pZGVzIHNlbG9uIGxlIFN5c3TDqG1lIGRlIGNhbmFkaWVuIGRlIGNsYXNzaWZpY2F0aW9uIGRlcyBtaWxpZXV4IGh1bWlkZXMsIHNvaXQgYm9nLCBmZW4sIG1hcmFpcywgbWFyw6ljYWdlIGV0IGVhdSBwZXUgcHJvZm9uZGUuICBM4oCZYXBwcm9jaGUgY2hvaXNpZSBjb21iaW5lIGzigJl1dGlsaXNhdGlvbiBkZXMgaW1hZ2VzIHNhdGVsbGl0ZXMgU1BPVC01IGV0IFJBREFSU0FULTEgYWluc2kgcXVlIGxhIGNsYXNzaWZpY2F0aW9uIGTigJlpbWFnZXMgYmFzw6llIHN1ciBsZXMgb2JqZXRzLg0KDQpMZXMgc2l0ZXMgcXVpIG9udCDDqXTDqSBjYXJ0b2dyYXBoacOpcyBzb250IHLDqXBhcnRpcyBkYW5zIHBsdXNpZXVycyDDqWNvem9uZXMgZXQgcmVwcsOpc2VudGVudCBkaWZmw6lyZW50cyB0eXBlcyBkZSBwYXlzYWdlcyBldCBk4oCZw6ljb3N5c3TDqG1lcy4gIENlcyBzaXRlcyBzb250IGxlIGxhYyBTYWludC1QaWVycmUsIGxlIGxhYyBCcm9tZSwgbGEgTW9udMOpcsOpZ2llLCBsZSBsYWMgU2FpbnQtRnJhbsOnb2lzIChBcHBhbGFjaGVzKSwgbGEgR3JhbmRlLVBsw6llLUJsZXVlLCBNb250bWFnbnksIGxlIGNhcCBUb3VybWVudGUsIGxhIGJhaWUgZGUgbOKAmUlzbGUtVmVydGUsIGxlIHBhcmMgbmF0aW9uYWwgZGUgbGEgTWF1cmljaWUsIGxlcyBJbGVzLWRlLWxhLU1hZGVsZWluZSwgUmFkaXNzb24gZXQgRWFzdG1haW4uICBMYSBzdXBlcmZpY2llIGNvdXZlcnRlIHBhciBsZXMgZG91emUgc2l0ZXMgZXN0IGRlIDQgJSBkdSB0ZXJyaXRvaXJlIHF1w6liw6ljb2lzLiAgRGUgcGx1cywgbGEgbcOpdGhvZGUgYSDDqXTDqSB0ZXN0w6kgcG91ciB1biBzaXRlIGVuIENvbG9tYmllLUJyaXRhbm5pcXVlIChWYW5jb3V2ZXIpIGFpbnNpIHF1J2F1eCBUZXJyaXRvaXJlcyBkdSBOb3JkLU91ZXN0IChLZW5kYWxsIElzbGFuZCkuDQoNCkF1IHRvdGFsIHBvdXIgbGVzIGRvdXplIHNpdGVzLCA4ICUgZHUgdGVycml0b2lyZSBlc3QgY291dmVydCBwYXIgbGVzIG1pbGlldXggaHVtaWRlcy4gIExlIHBvdXJjZW50YWdlIHBvdXIgY2hhY3VuIGRlcyBzaXRlcyB2YXJpZSBlbnRyZSAyICUgZXQgMTUgJS4gIExhIHZhbGlkYXRpb24gZGVzIGNsYXNzaWZpY2F0aW9ucyBhIMOpdMOpIGZhaXRlIHNlbG9uIHVuZSBtw6l0aG9kZSBkw6l2ZWxvcHDDqWUgcGFyIGxlIFNDRi1RYyBiYXPDqWUgc3VyIGzigJlpbnRlcnByw6l0YXRpb24gdmlzdWVsbGUgZGVzIGNvbXBvc8OpcyBjb2xvcsOpcyBMYW5kc2F0LiAgTGEgdmFsaWRhdGlvbiBhIMOpdMOpIGZhaXRlIHN1ciBkZXV4IG5pdmVhdXgsIHNvaXQgZW50cmUgbGUgbWlsaWV1IGh1bWlkZSBwYXIgcmFwcG9ydCBhdSBtaWxpZXUgc2VjLCBldCBzb2l0IGVudHJlIGxlcyBjaW5xIHR5cGVzIGRlIG1pbGlldXggaHVtaWRlcy4gIEzigJlleGFjdGl0dWRlIGdsb2JhbGUgcG91ciBsZSBwcmVtaWVyIG5pdmVhdSBkZSB2YWxpZGF0aW9uIHZhcmllIGVudHJlIDYxIGV0IDkxICUsIGV0IGVudHJlIDQ3IGV0IDk4ICUgcG91ciBsZSBkZXV4acOobWUgbml2ZWF1LjwvZGVzY3JpcHRpb24+DQogIDwvZGVzY3JpcHRpb25zPg0KICA8Z2VvTG9jYXRpb25zPg0KICAgIDxnZW9Mb2NhdGlvbj4NCiAgICAgIDxnZW9Mb2NhdGlvbkJveD4tNzMuMTY3ODQ3OTk4OTgyMTcgNDYuNjA2MTE2NTMwOTQ5MzEgLTcyLjY3NDUxNDk0NTYzMzgxIC03Mi42NzQ1MTQ5NDU2MzM4MTwvZ2VvTG9jYXRpb25Cb3g+DQogICAgPC9nZW9Mb2NhdGlvbj4NCiAgPC9nZW9Mb2NhdGlvbnM+DQo8L3Jlc291cmNlPg=="},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.18164/ddcab2d6-4409-4cc1-bbf2-166c10d71bb6","type":"works","attributes":{"doi":"10.18164/ddcab2d6-4409-4cc1-bbf2-166c10d71bb6","identifier":"https://doi.org/10.18164/ddcab2d6-4409-4cc1-bbf2-166c10d71bb6","url":"http://donnees-data.intranet.ec.gc.ca/data/climate/scientificknowledge/duck-lake-geolysimeter-precipitation-intercomparison","author":[{"given":"Craig D.","family":"Smith"}],"title":"Duck Lake Geolysimeter Precipitation Intercomparison","container-title":"Environment and Climate Change Canada","description":"The Duck Lake (Saskatchewan) Geolysimeter precipitation intercomparison data are from a co-located precipitation gauge and deep groundwater observation well. The data published here are event based intercomparisons, collected between 2010 and 2016, binned into rain and snow events. Snowfall data observed by the precipitation gauge have been adjusted for wind bias using the SPICE (Solid Precipitation InterComparison Experiment) transfer functions (Kochendorfer et al., 2017a) and included for intercomparison. The data is described by Smith et al. (2017b) in https://www.hydrol-earth-syst-sci-discuss.net/hess-2017-174/ .  Both data sets (gauge precipitation and well water level observations) have been quality controlled and processed.","resource-type-subtype":"Dataset","data-center-id":"cisti.eccc","member-id":"cisti","resource-type-id":"dataset","version":"1","license":null,"schema-version":"3","results":[],"related-identifiers":[],"published":"2017","registered":"2018-05-22T19:19:21Z","checked":null,"updated":"2018-05-22T19:19:21Z","media":null,"xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6Z2NvPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2djbyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeG1sbnM6Z21kPSJodHRwOi8vd3d3Lmlzb3RjMjExLm9yZy8yMDA1L2dtZCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+DQogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE4MTY0L2RkY2FiMmQ2LTQ0MDktNGNjMS1iYmYyLTE2NmMxMGQ3MWJiNjwvaWRlbnRpZmllcj4NCiAgPGNyZWF0b3JzPg0KICAgIDxjcmVhdG9yPg0KICAgICAgPGNyZWF0b3JOYW1lPlNtaXRoLCBDcmFpZyBELjwvY3JlYXRvck5hbWU+DQogICAgPC9jcmVhdG9yPg0KICA8L2NyZWF0b3JzPg0KICA8dGl0bGVzPg0KICAgIDx0aXRsZT5EdWNrIExha2UgR2VvbHlzaW1ldGVyIFByZWNpcGl0YXRpb24gSW50ZXJjb21wYXJpc29uPC90aXRsZT4NCiAgPC90aXRsZXM+DQogIDxwdWJsaXNoZXI+RW52aXJvbm1lbnQgYW5kIENsaW1hdGUgQ2hhbmdlIENhbmFkYTwvcHVibGlzaGVyPg0KICA8cHVibGljYXRpb25ZZWFyPjIwMTc8L3B1YmxpY2F0aW9uWWVhcj4NCiAgPHN1YmplY3RzPg0KICAgIDxzdWJqZWN0PlByZWNpcGl0YXRpb24sIEdlb2x5c2ltZXRlciwgSW50ZXJjb21wYXJpc29uPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PldlYXRoZXIgYW5kIENsaW1hdGU8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UHJhaXJpZSAtIFNhc2thdGNoZXdhbiAoU0spPC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0Pk9ic2VydmF0aW9uL01lYXN1cmVtZW50PC9zdWJqZWN0Pg0KICAgIDxzdWJqZWN0PlByb3ZpZGUgQ2xpbWF0ZSBJbmZvcm1hdGlvbiBQcm9kdWN0cyBhbmQgU2VydmljZXM8L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+RXhwYW5kIFNjaWVudGlmaWMgS25vd2xlZGdlIGZvciBDbGltYXRlIE1vbml0b3JpbmcgYW5kIFByZWRpY3Rpb248L3N1YmplY3Q+DQogICAgPHN1YmplY3Q+UHJlY2lwaXRhdGlvbjwvc3ViamVjdD4NCiAgPC9zdWJqZWN0cz4NCiAgPGxhbmd1YWdlPmVuZzwvbGFuZ3VhZ2U+DQogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YXNldDwvcmVzb3VyY2VUeXBlPg0KICA8dmVyc2lvbj4xPC92ZXJzaW9uPg0KICA8cmlnaHRzTGlzdD4NCiAgICA8cmlnaHRzPk9wZW4gR292ZXJubWVudCBMaWNlbmNlIC0gQ2FuYWRhIChodHRwOi8vb3Blbi5jYW5hZGEuY2EvZW4vb3Blbi1nb3Zlcm5tZW50LWxpY2VuY2UtY2FuYWRhKTwvcmlnaHRzPg0KICA8L3JpZ2h0c0xpc3Q+DQogIDxkZXNjcmlwdGlvbnM+DQogICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiPlRoZSBEdWNrIExha2UgKFNhc2thdGNoZXdhbikgR2VvbHlzaW1ldGVyIHByZWNpcGl0YXRpb24gaW50ZXJjb21wYXJpc29uIGRhdGEgYXJlIGZyb20gYSBjby1sb2NhdGVkIHByZWNpcGl0YXRpb24gZ2F1Z2UgYW5kIGRlZXAgZ3JvdW5kd2F0ZXIgb2JzZXJ2YXRpb24gd2VsbC4gVGhlIGRhdGEgcHVibGlzaGVkIGhlcmUgYXJlIGV2ZW50IGJhc2VkIGludGVyY29tcGFyaXNvbnMsIGNvbGxlY3RlZCBiZXR3ZWVuIDIwMTAgYW5kIDIwMTYsIGJpbm5lZCBpbnRvIHJhaW4gYW5kIHNub3cgZXZlbnRzLiBTbm93ZmFsbCBkYXRhIG9ic2VydmVkIGJ5IHRoZSBwcmVjaXBpdGF0aW9uIGdhdWdlIGhhdmUgYmVlbiBhZGp1c3RlZCBmb3Igd2luZCBiaWFzIHVzaW5nIHRoZSBTUElDRSAoU29saWQgUHJlY2lwaXRhdGlvbiBJbnRlckNvbXBhcmlzb24gRXhwZXJpbWVudCkgdHJhbnNmZXIgZnVuY3Rpb25zIChLb2NoZW5kb3JmZXIgZXQgYWwuLCAyMDE3YSkgYW5kIGluY2x1ZGVkIGZvciBpbnRlcmNvbXBhcmlzb24uIFRoZSBkYXRhIGlzIGRlc2NyaWJlZCBieSBTbWl0aCBldCBhbC4gKDIwMTdiKSBpbiBodHRwczovL3d3dy5oeWRyb2wtZWFydGgtc3lzdC1zY2ktZGlzY3Vzcy5uZXQvaGVzcy0yMDE3LTE3NC8gLiAgQm90aCBkYXRhIHNldHMgKGdhdWdlIHByZWNpcGl0YXRpb24gYW5kIHdlbGwgd2F0ZXIgbGV2ZWwgb2JzZXJ2YXRpb25zKSBoYXZlIGJlZW4gcXVhbGl0eSBjb250cm9sbGVkIGFuZCBwcm9jZXNzZWQuPC9kZXNjcmlwdGlvbj4NCiAgPC9kZXNjcmlwdGlvbnM+DQogIDxnZW9Mb2NhdGlvbnM+DQogICAgPGdlb0xvY2F0aW9uPg0KICAgICAgPGdlb0xvY2F0aW9uQm94Pi0xMDYuMjIgNTIuOTIgLTEwNi4yMiAtMTA2LjIyPC9nZW9Mb2NhdGlvbkJveD4NCiAgICA8L2dlb0xvY2F0aW9uPg0KICA8L2dlb0xvY2F0aW9ucz4NCjwvcmVzb3VyY2U+"},"relationships":{"data-center":{"data":{"id":"cisti.eccc","type":"data-centers"}},"member":{"data":{"id":"cisti","type":"members"}},"resource-type":{"data":{"id":"dataset","type":"resource-types"}}}},{"id":"https://doi.org/10.13140/rg.2.2.16706.17602","type":"works","attributes":{"doi":"10.13140/rg.2.2.16706.17602","identifier":"https://doi.org/10.13140/rg.2.2.16706.17602","url":null,"author":[{"literal":"Andrew Paul Gutierrez"},{"literal":"Luigi Ponti"},{"literal":"C. Ken Ellis"},{"literal":"Thibaud D'Oultremont"}],"title":"Analysis of climate effects on agricultural systems","container-title":"California Climate Change Center,  First California Climate Change Assessment 2006","description":null,"resource-type-subtype":"Technical Report","data-center-id":"rg.rg","member-id":"rg","resource-type-id":"text","version":null,"license":null,"schema-version":"4","results":[],"related-identifiers":[],"published":"2006","registered":"2017-02-18T22:02:00Z","checked":null,"updated":"2017-02-18T22:08:44Z","media":null,"xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxyZXNvdXJjZSB4c2k6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC00IGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTQvbWV0YWRhdGEueHNkIiB4bWxucz0iaHR0cDovL2RhdGFjaXRlLm9yZy9zY2hlbWEva2VybmVsLTQiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjEzMTQwL1JHLjIuMi4xNjcwNi4xNzYwMjwvaWRlbnRpZmllcj48Y3JlYXRvcnM+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkFuZHJldyBQYXVsIEd1dGllcnJlejwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5MdWlnaSBQb250aTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5DLiBLZW4gRWxsaXM8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+VGhpYmF1ZCBkJ091bHRyZW1vbnQ8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48L2NyZWF0b3JzPjx0aXRsZXM+PHRpdGxlPkFuYWx5c2lzIG9mIGNsaW1hdGUgZWZmZWN0cyBvbiBhZ3JpY3VsdHVyYWwgc3lzdGVtczwvdGl0bGU+PC90aXRsZXM+PHB1Ymxpc2hlcj5DYWxpZm9ybmlhIENsaW1hdGUgQ2hhbmdlIENlbnRlciwgIEZpcnN0IENhbGlmb3JuaWEgQ2xpbWF0ZSBDaGFuZ2UgQXNzZXNzbWVudCAyMDA2PC9wdWJsaXNoZXI+PHB1YmxpY2F0aW9uWWVhcj4yMDA2PC9wdWJsaWNhdGlvblllYXI+PHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJUZXh0Ij5UZWNobmljYWwgUmVwb3J0PC9yZXNvdXJjZVR5cGU+PGxhbmd1YWdlPmVuPC9sYW5ndWFnZT48L3Jlc291cmNlPg=="},"relationships":{"data-center":{"data":{"id":"rg.rg","type":"data-centers"}},"member":{"data":{"id":"rg","type":"members"}},"resource-type":{"data":{"id":"text","type":"resource-types"}}}},{"id":"https://doi.org/10.13140/rg.2.2.18525.20968","type":"works","attributes":{"doi":"10.13140/rg.2.2.18525.20968","identifier":"https://doi.org/10.13140/rg.2.2.18525.20968","url":null,"author":[{"literal":"Edward W Maibach"},{"literal":"Connie Roser-Renouf"},{"literal":"Peter Howe"},{"literal":"Anthony Leiserowitz"}],"title":"Americans' Actions To Limit Global Warming in April 2013","container-title":"Yale Project on Climate Change, Center for Climate Change Communication","description":null,"resource-type-subtype":"Technical Report","data-center-id":"rg.rg","member-id":"rg","resource-type-id":"text","version":null,"license":null,"schema-version":"4","results":[],"related-identifiers":[],"published":"2013","registered":"2017-05-10T15:42:26Z","checked":null,"updated":"2017-05-10T15:42:26Z","media":null,"xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxyZXNvdXJjZSB4c2k6c2NoZW1hTG9jYXRpb249Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC00IGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTQvbWV0YWRhdGEueHNkIiB4bWxucz0iaHR0cDovL2RhdGFjaXRlLm9yZy9zY2hlbWEva2VybmVsLTQiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjEzMTQwL1JHLjIuMi4xODUyNS4yMDk2ODwvaWRlbnRpZmllcj48Y3JlYXRvcnM+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkVkd2FyZCBXIE1haWJhY2g8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+Q29ubmllIFJvc2VyLVJlbm91ZjwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5QZXRlciBIb3dlPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkFudGhvbnkgTGVpc2Vyb3dpdHo8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48L2NyZWF0b3JzPjx0aXRsZXM+PHRpdGxlPkFtZXJpY2FucycgQWN0aW9ucyBUbyBMaW1pdCBHbG9iYWwgV2FybWluZyBpbiBBcHJpbCAyMDEzPC90aXRsZT48L3RpdGxlcz48cHVibGlzaGVyPllhbGUgUHJvamVjdCBvbiBDbGltYXRlIENoYW5nZSwgQ2VudGVyIGZvciBDbGltYXRlIENoYW5nZSBDb21tdW5pY2F0aW9uPC9wdWJsaXNoZXI+PHB1YmxpY2F0aW9uWWVhcj4yMDEzPC9wdWJsaWNhdGlvblllYXI+PHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJUZXh0Ij5UZWNobmljYWwgUmVwb3J0PC9yZXNvdXJjZVR5cGU+PGxhbmd1YWdlPmVuPC9sYW5ndWFnZT48L3Jlc291cmNlPg=="},"relationships":{"data-center":{"data":{"id":"rg.rg","type":"data-centers"}},"member":{"data":{"id":"rg","type":"members"}},"resource-type":{"data":{"id":"text","type":"resource-types"}}}}],"meta":{"resource-types":[{"id":"other","title":"Other","count":29440},{"id":"dataset","title":"Dataset","count":10940},{"id":"text","title":"Text","count":8043},{"id":"collection","title":"Collection","count":2911},{"id":"image","title":"Image","count":304},{"id":"audiovisual","title":"Audiovisual","count":193},{"id":"software","title":"Software","count":106},{"id":"event","title":"Event","count":26},{"id":"physical-object","title":"Physical object","count":9},{"id":"interactive-resource","title":"Interactive resource","count":7},{"id":"model","title":"Model","count":7},{"id":"film","title":"Film","count":2},{"id":"sound","title":"Sound","count":2}],"years":[{"id":"2018","title":"2018","count":1873},{"id":"2017","title":"2017","count":28867},{"id":"2016","title":"2016","count":4686},{"id":"2015","title":"2015","count":7270},{"id":"2014","title":"2014","count":2123},{"id":"2013","title":"2013","count":1391},{"id":"2012","title":"2012","count":1055},{"id":"2011","title":"2011","count":1249},{"id":"2010","title":"2010","count":478},{"id":"2009","title":"2009","count":435},{"id":"2008","title":"2008","count":555},{"id":"2007","title":"2007","count":322},{"id":"2006","title":"2006","count":198},{"id":"2005","title":"2005","count":2121},{"id":"2004","title":"2004","count":731}],"registered":[{"id":"2018","title":"2018","count":3964},{"id":"2017","title":"2017","count":29830},{"id":"2016","title":"2016","count":5384},{"id":"2015","title":"2015","count":7851},{"id":"2014","title":"2014","count":2109},{"id":"2013","title":"2013","count":611},{"id":"2012","title":"2012","count":1854},{"id":"2011","title":"2011","count":239},{"id":"2010","title":"2010","count":153},{"id":"2009","title":"2009","count":108},{"id":"2008","title":"2008","count":56},{"id":"2007","title":"2007","count":11},{"id":"2006","title":"2006","count":93},{"id":"2005","title":"2005","count":1696},{"id":"2004","title":"2004","count":14}],"data-centers":[{"id":"cdl.dplanet","title":"Data-Planet","count":29320},{"id":"figshare.ars","title":"figshare Academic Research System","count":4044},{"id":"cdl.dryad","title":"Dryad","count":3010},{"id":"tib.wdcc","title":"World Data Center for Climate","count":2580},{"id":"rg.rg","title":"ResearchGate","count":2501},{"id":"cern.zenodo","title":"ZENODO - Research. Shared.","count":1678},{"id":"cdl.nceas","title":"National Center for Ecological Analysis and Synthesis (NCEAS)","count":1334},{"id":"tib.pangaea","title":"PANGAEA","count":1026},{"id":"nrf.saeon","title":"SAEON Data Centre","count":842},{"id":"cisti.ubc","title":"University of British Columbia","count":595},{"id":"cdl.culis","title":"Columbia University Libraries/Information Services (CUL/IS)","count":537},{"id":"ethz.boris","title":"Bern Open Repository and Information System (BORIS)","count":435},{"id":"dk.gbif","title":"Global Biodiversity Information Facility","count":286},{"id":"ethz.e-coll","title":"ETH Zürich Research Collection","count":271},{"id":"cdl.rutgers","title":"Rutgers University Library","count":233}],"schema-versions":[{"id":"4","title":"Schema 4","count":5529},{"id":"3","title":"Schema 3","count":43488},{"id":"2.2","title":"Schema 2.2","count":4900},{"id":"2.1","title":"Schema 2.1","count":42},{"id":"2.0","title":"Schema 2.0","count":14}],"total":53973,"total-pages":2159,"page":1}}
  recorded_at: 2018-05-27 17:24:19 GMT
  recorded_with: vcr/0.1.0, webmockr/0.2.6, crul/0.5.2
